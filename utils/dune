;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(rule
 (targets config.ml)
 (mode    fallback)
 (deps    config.generated.ml config.common.ml)
 (action
   (with-stdout-to %{targets}
     (system "cat %{deps}"))))

(rule
 (targets domainstate.ml)
 (mode    fallback)
 (deps    (:conf ../Makefile.config)
          (:c domainstate.ml.c)
          (:tbl ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml/domain_state.tbl)
          (glob_files ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml/{config,m,s}.h))
 (action
   (with-stdout-to %{targets}
     (bash
       "`grep '^CPP=' %{conf} | cut -d'=' -f2` -I ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml %{c}"
       ))))

(rule
 (targets domainstate.mli)
 (mode    fallback)
 (deps    (:conf ../Makefile.config)
          (:c domainstate.mli.c)
          (:tbl ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml/domain_state.tbl)
          (glob_files ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml/{config,m,s}.h))
 (action
   (with-stdout-to %{targets}
     (bash
       "`grep '^CPP=' %{conf} | cut -d'=' -f2` -I ../%{env:RUNTIME_DIR=runtime-dir-env-var-not-set}/caml %{c}"
       ))))

(include_subdirs unqualified)

(library
 (name flambda_backend_utils)
 ; FIXME Fix warning 27
 (flags (:standard -w -27))
 (ocamlopt_flags
  (:standard -O3))
 (libraries ocamlcommon)
 (modules doubly_linked_list file_sections lru))

(install
  (files
    (flambda_backend_utils.a as compiler-libs/flambda_backend_utils.a)
    (flambda_backend_utils.cma as compiler-libs/flambda_backend_utils.cma)
    (flambda_backend_utils.cmxa as compiler-libs/flambda_backend_utils.cmxa)
    (.flambda_backend_utils.objs/byte/flambda_backend_utils.cmi as compiler-libs/flambda_backend_utils.cmi)
    (doubly_linked_list.mli as compiler-libs/doubly_linked_list.ml)
    (.flambda_backend_utils.objs/byte/flambda_backend_utils__Doubly_linked_list.cmi
     as compiler-libs/flambda_backend_utils__Doubly_linked_list.cmi)
    (.flambda_backend_utils.objs/byte/flambda_backend_utils__Doubly_linked_list.cmti
     as compiler-libs/flambda_backend_utils__Doubly_linked_list.cmti)
    (.flambda_backend_utils.objs/byte/flambda_backend_utils__Doubly_linked_list.cmt
     as compiler-libs/flambda_backend_utils__Doubly_linked_list.cmt)
    (.flambda_backend_utils.objs/native/flambda_backend_utils__Doubly_linked_list.cmx
     as compiler-libs/flambda_backend_utils__Doubly_linked_list.cmx)
    (.flambda_backend_utils.objs/native/flambda_backend_utils__Doubly_linked_list.o
     as compiler-libs/flambda_backend_utils__Doubly_linked_list.o)
  )
  (section lib)
  (package ocaml))
