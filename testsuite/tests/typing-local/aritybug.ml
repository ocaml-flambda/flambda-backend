(* TEST *)

let[@inline never] wat x =
  let f ~a:_ ~b:_ ~c:_ () () = x in
  let g = Sys.opaque_identity (f ~c:1) in
  let h = Sys.opaque_identity (g ~b:"b") in
  h ~a:0 () ()

let () = Printf.printf "%d\n%!" (wat 42)

module M : sig
  val count : int
end = struct
  let fold
  ~init
  ~v001
  ~v002
  ~v003
  ~v004
  ~v005
  ~v006
  ~v007
  ~v008
  ~v009
  ~v010
  ~v011
  ~v012
  ~v013
  ~v014
  ~v015
  ~v016
  ~v017
  ~v018
  ~v019
  ~v020
  ~v021
  ~v022
  ~v023
  ~v024
  ~v025
  ~v026
  ~v027
  ~v028
  ~v029
  ~v030
  ~v031
  ~v032
  ~v033
  ~v034
  ~v035
  ~v036
  ~v037
  ~v038
  ~v039
  ~v040
  ~v041
  ~v042
  ~v043
  ~v044
  ~v045
  ~v046
  ~v047
  ~v048
  ~v049
  ~v050
  ~v051
  ~v052
  ~v053
  ~v054
  ~v055
  ~v056
  ~v057
  ~v058
  ~v059
  ~v060
  ~v061
  ~v062
  ~v063
  ~v064
  ~v065
  ~v066
  ~v067
  ~v068
  ~v069
  ~v070
  ~v071
  ~v072
  ~v073
  ~v074
  ~v075
  ~v076
  ~v077
  ~v078
  ~v079
  ~v080
  ~v081
  ~v082
  ~v083
  ~v084
  ~v085
  ~v086
  ~v087
  ~v088
  ~v089
  ~v090
  ~v091
  ~v092
  ~v093
  ~v094
  ~v095
  ~v096
  ~v097
  ~v098
  ~v099
  ~v100
  ~v101
  ~v102
  ~v103
  ~v104
  ~v105
  ~v106
  ~v107
  ~v108
  ~v109
  ~v110
  ~v111
  ~v112
  ~v113
  ~v114
  ~v115
  ~v116
  ~v117
  ~v118
  ~v119
  ~v120
  ~v121
  ~v122
  ~v123
  ~v124
  ~v125
  ~v126
  ~v127
  ~v128
  ~v129
  ~v130
  ~v131
  ~v132
  ~v133
      =
  (v001
  (v002
  (v003
  (v004
  (v005
  (v006
  (v007
  (v008
  (v009
  (v010
  (v011
  (v012
  (v013
  (v014
  (v015
  (v016
  (v017
  (v018
  (v019
  (v020
  (v021
  (v022
  (v023
  (v024
  (v025
  (v026
  (v027
  (v028
  (v029
  (v030
  (v031
  (v032
  (v033
  (v034
  (v035
  (v036
  (v037
  (v038
  (v039
  (v040
  (v041
  (v042
  (v043
  (v044
  (v045
  (v046
  (v047
  (v048
  (v049
  (v050
  (v051
  (v052
  (v053
  (v054
  (v055
  (v056
  (v057
  (v058
  (v059
  (v060
  (v061
  (v062
  (v063
  (v064
  (v065
  (v066
  (v067
  (v068
  (v069
  (v070
  (v071
  (v072
  (v073
  (v074
  (v075
  (v076
  (v077
  (v078
  (v079
  (v080
  (v081
  (v082
  (v083
  (v084
  (v085
  (v086
  (v087
  (v088
  (v089
  (v090
  (v091
  (v092
  (v093
  (v094
  (v095
  (v096
  (v097
  (v098
  (v099
  (v100
  (v101
  (v102
  (v103
  (v104
  (v105
  (v106
  (v107
  (v108
  (v109
  (v110
  (v111
  (v112
  (v113
  (v114
  (v115
  (v116
  (v117
  (v118
  (v119
  (v120
  (v121
  (v122
  (v123
  (v124
  (v125
  (v126
  (v127
  (v128
  (v129
  (v130
  (v131
  (v132
  (v133
  init
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)
  1)

let f ?override_name acc _ = 1 + acc

let count =
  fold
    ~init:0
    ~v001:f
    ~v002:f
    ~v003:f
    ~v004:f
    ~v005:f
    ~v006:f
    ~v007:f
    ~v008:f
    ~v009:f
    ~v010:f
    ~v011:f
    ~v012:f
    ~v013:f
    ~v014:f
    ~v015:f
    ~v016:f
    ~v017:f
    ~v018:f
    ~v019:f
    ~v020:f
    ~v021:f
    ~v022:f
    ~v023:f
    ~v024:f
    ~v025:f
    ~v026:f
    ~v027:f
    ~v028:f
    ~v029:f
    ~v030:f
    ~v031:f
    ~v032:f
    ~v033:f
    ~v034:f
    ~v035:f
    ~v036:f
    ~v037:f
    ~v038:f
    ~v039:f
    ~v040:f
    ~v041:f
    ~v042:f
    ~v043:f
    ~v044:f
    ~v045:f
    ~v046:f
    ~v047:f
    ~v048:f
    ~v049:f
    ~v050:f
    ~v051:f
    ~v052:f
    ~v053:f
    ~v054:f
    ~v055:f
    ~v056:f
    ~v057:f
    ~v058:f
    ~v059:f
    ~v060:f
    ~v061:f
    ~v062:f
    ~v063:f
    ~v064:f
    ~v065:f
    ~v066:f
    ~v067:f
    ~v068:f
    ~v069:f
    ~v070:f
    ~v071:f
    ~v072:f
    ~v073:f
    ~v074:f
    ~v075:f
    ~v076:f
    ~v077:f
    ~v078:f
    ~v079:f
    ~v080:f
    ~v081:f
    ~v082:f
    ~v083:f
    ~v084:f
    ~v085:f
    ~v086:f
    ~v087:f
    ~v088:f
    ~v089:f
    ~v090:f
    ~v091:f
    ~v092:f
    ~v093:f
    ~v094:f
    ~v095:f
    ~v096:f
    ~v097:f
    ~v098:f
    ~v099:f
    ~v100:f
    ~v101:f
    ~v102:f
    ~v103:f
    ~v104:f
    ~v105:f
    ~v106:f
    ~v107:f
    ~v108:f
    ~v109:f
    ~v110:f
    ~v111:f
    ~v112:f
    ~v113:f
    ~v114:f
    ~v115:f
    ~v116:f
    ~v117:f
    ~v118:f
    ~v119:f
    ~v120:f
    ~v121:f
    ~v122:f
    ~v123:f
    ~v124:f
    ~v125:f
    ~v126:f
    ~v127:f
    ~v128:f
    ~v129:f
    ~v130:f
    ~v131:f
    ~v132:f
    ~v133:f
end
;;

let () = Printf.printf "%d\n" M.count
