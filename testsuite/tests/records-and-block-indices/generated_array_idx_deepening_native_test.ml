(* TEST
 include stdlib_stable;
 include stdlib_beta;
 include stdlib_upstream_compatible;
 modules = "stubs.c";
 flags = "-extension simd_beta -extension layouts_alpha";
 flambda2;
 stack-allocation;
 native;
*)
(** This is code generated by [test_generation.ml]. *)

[@@@warning "-23"]
external globalize : local_ 'a -> 'a = "%obj_dup";;
external box_int64x2 : int64x2# -> int64x2 = "%box_vec128"
external unbox_int64x2 : int64x2 -> int64x2# = "%unbox_vec128"
external interleave_low_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_low_64" [@@unboxed] [@@builtin]
external interleave_high_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_high_64" [@@unboxed] [@@builtin]
external int64x2_of_int64 : int64 -> int64x2# = "caml_vec128_unreachable" "caml_int64x2_low_of_int64" [@@unboxed] [@@builtin]
external int64_of_int64x2 : int64x2# -> int64 = "caml_vec128_unreachable" "caml_int64x2_low_to_int64" [@@unboxed] [@@builtin]

let int64x2_u_equal i1 i2 =
    let a1 = int64_of_int64x2 i1 in
    let b1 = int64_of_int64x2 (interleave_high_64 i1 i1) in
    let a2 = int64_of_int64x2 i2 in
    let b2 = int64_of_int64x2 (interleave_high_64 i2 i2) in
    Int64.equal a1 a2 && Int64.equal b1 b2

open Stdlib_upstream_compatible
open Stdlib_stable
open Stdlib_beta

external[@layout_poly] makearray_dynamic_local :
  ('a : any_non_null) . int -> 'a -> 'a array @ local =
  "%makearray_dynamic"

external[@layout_poly] makearray_dynamic :
  ('a : any_non_null) . int -> 'a -> 'a array =
  "%makearray_dynamic"

external[@layout_poly] get :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a =
  "%array_safe_get"

external[@layout_poly] set :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a -> unit =
  "%array_safe_set"

module Idx_repr : sig
  type t
  val of_idx_imm : 'a ('b : any). ('a, 'b) idx_imm -> t
  val of_idx_mut : 'a ('b : any). ('a, 'b) idx_mut -> t
  val equal : t -> t -> bool
  val debug_string : t -> string
end = struct
  (* See [jane/doc/extensions/_02-unboxed-types/block-indices.md] *)
  type t =
    | Bytecode of { path : int list }
    | Native of { offset : int; gap : int }

  external magic_box_bits64 : ('a : bits64) 'b . 'a -> 'b =
    "%box_int64"
  external lessthan_if_bytecode : int -> int -> bool =
    "caml_lessthan" "caml_greaterthan"

  let of_idx idx =
    let is_bytecode = lessthan_if_bytecode 0 1 in
    if is_bytecode then
      let r = Obj.repr (magic_box_bits64 idx) in
      let nth_idx n : int = Obj.magic (Obj.field r n) in
      let path = List.init (Obj.size r) nth_idx in
      Bytecode { path }
    else
      let i : int64 = magic_box_bits64 idx in
      let offset =
        Int64.(logand (sub (shift_left one 48) one)) i
        |> Int64.to_int
      in
      let gap =
        Int64.shift_right i 48
        |> Int64.to_int
      in
      Native { offset; gap }

  let of_idx_imm = of_idx
  let of_idx_mut = of_idx

  let equal t1 t2 =
    match t1, t2 with
    | Bytecode { path = path1 }, Bytecode { path = path2 } ->
      List.equal Int.equal path1 path2
    | Native { gap = gap1; offset = offset1 },
      Native { gap = gap2; offset = offset2 } ->
      Int.equal gap1 gap2 && Int.equal offset1 offset2
    | Bytecode _, Native _ | Native _, Bytecode _ -> assert false

  let debug_string = function
    | Bytecode { path } ->
      Printf.sprintf "{ %s }"
        (String.concat "; " (List.map Int.to_string path))
    | Native { offset; gap } ->
      Printf.sprintf "offset %d; gap %d" offset gap
end

let failwithf fmt = Printf.ksprintf failwith fmt

(* Redefine iter to infer locality *)
let rec iter ~f = function
    [] -> ()
  | a::l -> f a; iter ~f l

module Int_set = Set.Make(Int)

let tests_run = ref Int_set.empty

let mark_test_run test_id =
  tests_run := Int_set.add test_id !tests_run

(* Various interesting values *)

let sizes = [ 0; 1; 2; 30 ]

let indices_in_deepening_tests = [0; 100_000]

type packed = P : 'a -> packed
let ref_to_force_heap_allocation : packed ref = ref (P 0)

type t0 = #{ a0 : int } (* #{ int } *)
type t1 = #{ a1 : int; b1 : int } (* #{ int; int } *)
type t2 = #{ a2 : int; b2 : int; c2 : int } (* #{ int; int; int } *)
type t3 = #{ a3 : int; b3 : int; c3 : int32# } (* #{ int; int; int32# } *)
type t4 = #{ a4 : int; b4 : int; c4 : float } (* #{ int; int; float } *)
type t5 = #{ a5 : int; b5 : int64 } (* #{ int; int64 } *)
type t6 = #{ a6 : int; b6 : int64# } (* #{ int; int64# } *)
type t7 = #{ a7 : int; b7 : int32# } (* #{ int; int32# } *)
type t8 = #{ a8 : int; b8 : int32#; c8 : int32# } (* #{ int; int32#; int32# } *)
type t9 = #{ a9 : int; b9 : nativeint# } (* #{ int; nativeint# } *)
type t10 = #{ a10 : int; b10 : float } (* #{ int; float } *)
type t11 = #{ a11 : int; b11 : float; c11 : int } (* #{ int; float; int } *)
type t12 = #{ a12 : int; b12 : float; c12 : float } (* #{ int; float; float } *)
type t13 = #{ a13 : int; b13 : t0 } (* #{ int; #{ int } } *)
type t14 = #{ a14 : int; b14 : t1 } (* #{ int; #{ int; int } } *)
type t15 = #{ a15 : int; b15 : t7 } (* #{ int; #{ int; int32# } } *)
type t16 = #{ a16 : int; b16 : t10 } (* #{ int; #{ int; float } } *)
type t17 = #{ a17 : int; b17 : t13 } (* #{ int; #{ int; #{ int } } } *)
type t18 = #{ a18 : int32# } (* #{ int32# } *)
type t19 = #{ a19 : int; b19 : t18 } (* #{ int; #{ int32# } } *)
type t20 = #{ a20 : int; b20 : t19 } (* #{ int; #{ int; #{ int32# } } } *)
type t21 = #{ a21 : float } (* #{ float } *)
type t22 = #{ a22 : int; b22 : t21 } (* #{ int; #{ float } } *)
type t23 = #{ a23 : int; b23 : t22 } (* #{ int; #{ int; #{ float } } } *)
type t24 = #{ a24 : int32#; b24 : int32# } (* #{ int32#; int32# } *)
type t25 = #{ a25 : int; b25 : t24 } (* #{ int; #{ int32#; int32# } } *)
type t26 = #{ a26 : int32#; b26 : t18 } (* #{ int32#; #{ int32# } } *)
type t27 = #{ a27 : int; b27 : t26 } (* #{ int; #{ int32#; #{ int32# } } } *)
type t28 = #{ a28 : float; b28 : int } (* #{ float; int } *)
type t29 = #{ a29 : int; b29 : t28 } (* #{ int; #{ float; int } } *)
type t30 = #{ a30 : float; b30 : float } (* #{ float; float } *)
type t31 = #{ a31 : int; b31 : t30 } (* #{ int; #{ float; float } } *)
type t32 = #{ a32 : float; b32 : t0 } (* #{ float; #{ int } } *)
type t33 = #{ a33 : int; b33 : t32 } (* #{ int; #{ float; #{ int } } } *)
type t34 = #{ a34 : float; b34 : t21 } (* #{ float; #{ float } } *)
type t35 = #{ a35 : int; b35 : t34 } (* #{ int; #{ float; #{ float } } } *)
type t36 = #{ a36 : t1 } (* #{ #{ int; int } } *)
type t37 = #{ a37 : int; b37 : t36 } (* #{ int; #{ #{ int; int } } } *)
type t38 = #{ a38 : t7 } (* #{ #{ int; int32# } } *)
type t39 = #{ a39 : int; b39 : t38 } (* #{ int; #{ #{ int; int32# } } } *)
type t40 = #{ a40 : t10 } (* #{ #{ int; float } } *)
type t41 = #{ a41 : int; b41 : t40 } (* #{ int; #{ #{ int; float } } } *)
type t42 = #{ a42 : t24 } (* #{ #{ int32#; int32# } } *)
type t43 = #{ a43 : int; b43 : t42 } (* #{ int; #{ #{ int32#; int32# } } } *)
type t44 = #{ a44 : t28 } (* #{ #{ float; int } } *)
type t45 = #{ a45 : int; b45 : t44 } (* #{ int; #{ #{ float; int } } } *)
type t46 = #{ a46 : t30 } (* #{ #{ float; float } } *)
type t47 = #{ a47 : int; b47 : t46 } (* #{ int; #{ #{ float; float } } } *)
type t48 = #{ a48 : int64 } (* #{ int64 } *)
type t49 = #{ a49 : int64; b49 : int } (* #{ int64; int } *)
type t50 = #{ a50 : int64; b50 : int64 } (* #{ int64; int64 } *)
type t51 = #{ a51 : int64; b51 : float } (* #{ int64; float } *)
type t52 = #{ a52 : int64# } (* #{ int64# } *)
type t53 = #{ a53 : int64#; b53 : int64# } (* #{ int64#; int64# } *)
type t54 = #{ a54 : int64#; b54 : int32# } (* #{ int64#; int32# } *)
type t55 = #{ a55 : int64#; b55 : nativeint# } (* #{ int64#; nativeint# } *)
type t56 = #{ a56 : int32#; b56 : int64# } (* #{ int32#; int64# } *)
type t57 = #{ a57 : int32#; b57 : int32#; c57 : int32# } (* #{ int32#; int32#; int32# } *)
type t58 = #{ a58 : int32#; b58 : nativeint# } (* #{ int32#; nativeint# } *)
type t59 = #{ a59 : int32#; b59 : t24 } (* #{ int32#; #{ int32#; int32# } } *)
type t60 = #{ a60 : int32#; b60 : t26 } (* #{ int32#; #{ int32#; #{ int32# } } } *)
type t61 = #{ a61 : int32#; b61 : t42 } (* #{ int32#; #{ #{ int32#; int32# } } } *)
type t62 = #{ a62 : nativeint# } (* #{ nativeint# } *)
type t63 = #{ a63 : nativeint#; b63 : int64# } (* #{ nativeint#; int64# } *)
type t64 = #{ a64 : nativeint#; b64 : int32# } (* #{ nativeint#; int32# } *)
type t65 = #{ a65 : nativeint#; b65 : nativeint# } (* #{ nativeint#; nativeint# } *)
type t66 = #{ a66 : float; b66 : int; c66 : int } (* #{ float; int; int } *)
type t67 = #{ a67 : float; b67 : int; c67 : float } (* #{ float; int; float } *)
type t68 = #{ a68 : float; b68 : int64 } (* #{ float; int64 } *)
type t69 = #{ a69 : float; b69 : float; c69 : int } (* #{ float; float; int } *)
type t70 = #{ a70 : float; b70 : float; c70 : float } (* #{ float; float; float } *)
type t71 = #{ a71 : float; b71 : t1 } (* #{ float; #{ int; int } } *)
type t72 = #{ a72 : float; b72 : t10 } (* #{ float; #{ int; float } } *)
type t73 = #{ a73 : float; b73 : t13 } (* #{ float; #{ int; #{ int } } } *)
type t74 = #{ a74 : float; b74 : t22 } (* #{ float; #{ int; #{ float } } } *)
type t75 = #{ a75 : float; b75 : t28 } (* #{ float; #{ float; int } } *)
type t76 = #{ a76 : float; b76 : t30 } (* #{ float; #{ float; float } } *)
type t77 = #{ a77 : float; b77 : t32 } (* #{ float; #{ float; #{ int } } } *)
type t78 = #{ a78 : float; b78 : t34 } (* #{ float; #{ float; #{ float } } } *)
type t79 = #{ a79 : float; b79 : t36 } (* #{ float; #{ #{ int; int } } } *)
type t80 = #{ a80 : float; b80 : t40 } (* #{ float; #{ #{ int; float } } } *)
type t81 = #{ a81 : float; b81 : t44 } (* #{ float; #{ #{ float; int } } } *)
type t82 = #{ a82 : float; b82 : t46 } (* #{ float; #{ #{ float; float } } } *)
type t83 = #{ a83 : float# } (* #{ float# } *)
type t84 = #{ a84 : float#; b84 : float# } (* #{ float#; float# } *)
type t85 = #{ a85 : float#; b85 : float#; c85 : float# } (* #{ float#; float#; float# } *)
type t86 = #{ a86 : float#; b86 : t83 } (* #{ float#; #{ float# } } *)
type t87 = #{ a87 : float#; b87 : t84 } (* #{ float#; #{ float#; float# } } *)
type t88 = #{ a88 : float#; b88 : t86 } (* #{ float#; #{ float#; #{ float# } } } *)
type t89 = #{ a89 : t84 } (* #{ #{ float#; float# } } *)
type t90 = #{ a90 : float#; b90 : t89 } (* #{ float#; #{ #{ float#; float# } } } *)
type t91 = #{ a91 : t0 } (* #{ #{ int } } *)
type t92 = #{ a92 : t0; b92 : int } (* #{ #{ int }; int } *)
type t93 = #{ a93 : t0; b93 : int32# } (* #{ #{ int }; int32# } *)
type t94 = #{ a94 : t0; b94 : float } (* #{ #{ int }; float } *)
type t95 = #{ a95 : t1; b95 : int } (* #{ #{ int; int }; int } *)
type t96 = #{ a96 : t1; b96 : int32# } (* #{ #{ int; int }; int32# } *)
type t97 = #{ a97 : t1; b97 : float } (* #{ #{ int; int }; float } *)
type t98 = #{ a98 : t7; b98 : int32# } (* #{ #{ int; int32# }; int32# } *)
type t99 = #{ a99 : t10; b99 : int } (* #{ #{ int; float }; int } *)
type t100 = #{ a100 : t10; b100 : float } (* #{ #{ int; float }; float } *)
type t101 = #{ a101 : t14 } (* #{ #{ int; #{ int; int } } } *)
type t102 = #{ a102 : t15 } (* #{ #{ int; #{ int; int32# } } } *)
type t103 = #{ a103 : t16 } (* #{ #{ int; #{ int; float } } } *)
type t104 = #{ a104 : t25 } (* #{ #{ int; #{ int32#; int32# } } } *)
type t105 = #{ a105 : t29 } (* #{ #{ int; #{ float; int } } } *)
type t106 = #{ a106 : t31 } (* #{ #{ int; #{ float; float } } } *)
type t107 = #{ a107 : t18 } (* #{ #{ int32# } } *)
type t108 = #{ a108 : t18; b108 : int32# } (* #{ #{ int32# }; int32# } *)
type t109 = #{ a109 : t24; b109 : int32# } (* #{ #{ int32#; int32# }; int32# } *)
type t110 = #{ a110 : t59 } (* #{ #{ int32#; #{ int32#; int32# } } } *)
type t111 = #{ a111 : t21; b111 : int } (* #{ #{ float }; int } *)
type t112 = #{ a112 : t21; b112 : float } (* #{ #{ float }; float } *)
type t113 = #{ a113 : t28; b113 : int } (* #{ #{ float; int }; int } *)
type t114 = #{ a114 : t28; b114 : float } (* #{ #{ float; int }; float } *)
type t115 = #{ a115 : t30; b115 : int } (* #{ #{ float; float }; int } *)
type t116 = #{ a116 : t30; b116 : float } (* #{ #{ float; float }; float } *)
type t117 = #{ a117 : t71 } (* #{ #{ float; #{ int; int } } } *)
type t118 = #{ a118 : t72 } (* #{ #{ float; #{ int; float } } } *)
type t119 = #{ a119 : t75 } (* #{ #{ float; #{ float; int } } } *)
type t120 = #{ a120 : t76 } (* #{ #{ float; #{ float; float } } } *)
type t121 = #{ a121 : t83 } (* #{ #{ float# } } *)
type t122 = #{ a122 : t83; b122 : float# } (* #{ #{ float# }; float# } *)
type t123 = #{ a123 : t84; b123 : float# } (* #{ #{ float#; float# }; float# } *)
type t124 = #{ a124 : t87 } (* #{ #{ float#; #{ float#; float# } } } *)
type t125 = #{ a125 : t95 } (* #{ #{ #{ int; int }; int } } *)
type t126 = #{ a126 : t96 } (* #{ #{ #{ int; int }; int32# } } *)
type t127 = #{ a127 : t97 } (* #{ #{ #{ int; int }; float } } *)
type t128 = #{ a128 : t98 } (* #{ #{ #{ int; int32# }; int32# } } *)
type t129 = #{ a129 : t99 } (* #{ #{ #{ int; float }; int } } *)
type t130 = #{ a130 : t100 } (* #{ #{ #{ int; float }; float } } *)
type t131 = #{ a131 : t109 } (* #{ #{ #{ int32#; int32# }; int32# } } *)
type t132 = #{ a132 : t113 } (* #{ #{ #{ float; int }; int } } *)
type t133 = #{ a133 : t114 } (* #{ #{ #{ float; int }; float } } *)
type t134 = #{ a134 : t115 } (* #{ #{ #{ float; float }; int } } *)
type t135 = #{ a135 : t116 } (* #{ #{ #{ float; float }; float } } *)
type t136 = #{ a136 : t123 } (* #{ #{ #{ float#; float# }; float# } } *)

let () =
  (***********)
  (*   int   *)
  (***********)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (int array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1 failed";
  );

  (*************)
  (*   int64   *)
  (*************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int64 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (int64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 2;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 2 failed";
  );

  (**************)
  (*   int64#   *)
  (**************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int64# array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (int64# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 3;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 3 failed";
  );

  (**************)
  (*   int32#   *)
  (**************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int32# array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (int32# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 4;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 4 failed";
  );

  (******************)
  (*   nativeint#   *)
  (******************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (nativeint# array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (nativeint# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 5;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 5 failed";
  );

  (**************)
  (*   float#   *)
  (**************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (float# array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (float# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 6;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 6 failed";
  );

  (*********************)
  (*   t0 = #{ int }   *)
  (*********************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t0 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t0 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 7;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 7 failed";
  );
  (* Deepening to (.(i).#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t0 array, _) idx_mut = (.(i).#a0) in
    (* from (.(i)) *)
    let shallow : (t0 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 8;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 8 failed";
    (* from (.(i).#a0) *)
    let shallow : (t0 array, _) idx_mut = (.(i).#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 9;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 9 failed";
  );

  (**************************)
  (*   t1 = #{ int; int }   *)
  (**************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 10;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 10 failed";
  );
  (* Deepening to (.(i).#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i).#a1) in
    (* from (.(i)) *)
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 11;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 11 failed";
    (* from (.(i).#a1) *)
    let shallow : (t1 array, _) idx_mut = (.(i).#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 12;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 12 failed";
  );
  (* Deepening to (.(i).#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i).#b1) in
    (* from (.(i)) *)
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 13;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 13 failed";
    (* from (.(i).#b1) *)
    let shallow : (t1 array, _) idx_mut = (.(i).#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 14;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 14 failed";
  );

  (*******************************)
  (*   t2 = #{ int; int; int }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 15;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 15 failed";
  );
  (* Deepening to (.(i).#a2) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#a2) in
    (* from (.(i)) *)
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a2) in
    mark_test_run 16;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 16 failed";
    (* from (.(i).#a2) *)
    let shallow : (t2 array, _) idx_mut = (.(i).#a2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 17;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 17 failed";
  );
  (* Deepening to (.(i).#b2) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#b2) in
    (* from (.(i)) *)
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b2) in
    mark_test_run 18;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 18 failed";
    (* from (.(i).#b2) *)
    let shallow : (t2 array, _) idx_mut = (.(i).#b2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 19;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 19 failed";
  );
  (* Deepening to (.(i).#c2) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#c2) in
    (* from (.(i)) *)
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c2) in
    mark_test_run 20;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 20 failed";
    (* from (.(i).#c2) *)
    let shallow : (t2 array, _) idx_mut = (.(i).#c2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 21;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 21 failed";
  );

  (**********************************)
  (*   t3 = #{ int; int; int32# }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 22;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 22 failed";
  );
  (* Deepening to (.(i).#a3) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#a3) in
    (* from (.(i)) *)
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a3) in
    mark_test_run 23;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 23 failed";
    (* from (.(i).#a3) *)
    let shallow : (t3 array, _) idx_mut = (.(i).#a3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 24;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 24 failed";
  );
  (* Deepening to (.(i).#b3) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#b3) in
    (* from (.(i)) *)
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b3) in
    mark_test_run 25;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 25 failed";
    (* from (.(i).#b3) *)
    let shallow : (t3 array, _) idx_mut = (.(i).#b3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 26;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 26 failed";
  );
  (* Deepening to (.(i).#c3) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#c3) in
    (* from (.(i)) *)
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c3) in
    mark_test_run 27;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 27 failed";
    (* from (.(i).#c3) *)
    let shallow : (t3 array, _) idx_mut = (.(i).#c3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 28;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 28 failed";
  );

  (*********************************)
  (*   t4 = #{ int; int; float }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 29;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 29 failed";
  );
  (* Deepening to (.(i).#a4) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#a4) in
    (* from (.(i)) *)
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a4) in
    mark_test_run 30;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 30 failed";
    (* from (.(i).#a4) *)
    let shallow : (t4 array, _) idx_mut = (.(i).#a4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 31;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 31 failed";
  );
  (* Deepening to (.(i).#b4) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#b4) in
    (* from (.(i)) *)
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b4) in
    mark_test_run 32;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 32 failed";
    (* from (.(i).#b4) *)
    let shallow : (t4 array, _) idx_mut = (.(i).#b4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 33;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 33 failed";
  );
  (* Deepening to (.(i).#c4) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#c4) in
    (* from (.(i)) *)
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c4) in
    mark_test_run 34;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 34 failed";
    (* from (.(i).#c4) *)
    let shallow : (t4 array, _) idx_mut = (.(i).#c4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 35;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 35 failed";
  );

  (****************************)
  (*   t5 = #{ int; int64 }   *)
  (****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 36;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 36 failed";
  );
  (* Deepening to (.(i).#a5) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i).#a5) in
    (* from (.(i)) *)
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a5) in
    mark_test_run 37;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 37 failed";
    (* from (.(i).#a5) *)
    let shallow : (t5 array, _) idx_mut = (.(i).#a5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 38;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 38 failed";
  );
  (* Deepening to (.(i).#b5) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i).#b5) in
    (* from (.(i)) *)
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b5) in
    mark_test_run 39;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 39 failed";
    (* from (.(i).#b5) *)
    let shallow : (t5 array, _) idx_mut = (.(i).#b5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 40;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 40 failed";
  );

  (*****************************)
  (*   t6 = #{ int; int64# }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 41;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 41 failed";
  );
  (* Deepening to (.(i).#a6) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i).#a6) in
    (* from (.(i)) *)
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a6) in
    mark_test_run 42;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 42 failed";
    (* from (.(i).#a6) *)
    let shallow : (t6 array, _) idx_mut = (.(i).#a6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 43;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 43 failed";
  );
  (* Deepening to (.(i).#b6) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i).#b6) in
    (* from (.(i)) *)
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b6) in
    mark_test_run 44;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 44 failed";
    (* from (.(i).#b6) *)
    let shallow : (t6 array, _) idx_mut = (.(i).#b6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 45;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 45 failed";
  );

  (*****************************)
  (*   t7 = #{ int; int32# }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 46;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 46 failed";
  );
  (* Deepening to (.(i).#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i).#a7) in
    (* from (.(i)) *)
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 47;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 47 failed";
    (* from (.(i).#a7) *)
    let shallow : (t7 array, _) idx_mut = (.(i).#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 48;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 48 failed";
  );
  (* Deepening to (.(i).#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i).#b7) in
    (* from (.(i)) *)
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 49;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 49 failed";
    (* from (.(i).#b7) *)
    let shallow : (t7 array, _) idx_mut = (.(i).#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 50;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 50 failed";
  );

  (*************************************)
  (*   t8 = #{ int; int32#; int32# }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 51;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 51 failed";
  );
  (* Deepening to (.(i).#a8) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#a8) in
    (* from (.(i)) *)
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a8) in
    mark_test_run 52;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 52 failed";
    (* from (.(i).#a8) *)
    let shallow : (t8 array, _) idx_mut = (.(i).#a8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 53;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 53 failed";
  );
  (* Deepening to (.(i).#b8) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#b8) in
    (* from (.(i)) *)
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b8) in
    mark_test_run 54;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 54 failed";
    (* from (.(i).#b8) *)
    let shallow : (t8 array, _) idx_mut = (.(i).#b8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 55;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 55 failed";
  );
  (* Deepening to (.(i).#c8) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#c8) in
    (* from (.(i)) *)
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c8) in
    mark_test_run 56;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 56 failed";
    (* from (.(i).#c8) *)
    let shallow : (t8 array, _) idx_mut = (.(i).#c8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 57;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 57 failed";
  );

  (*********************************)
  (*   t9 = #{ int; nativeint# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 58;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 58 failed";
  );
  (* Deepening to (.(i).#a9) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i).#a9) in
    (* from (.(i)) *)
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a9) in
    mark_test_run 59;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 59 failed";
    (* from (.(i).#a9) *)
    let shallow : (t9 array, _) idx_mut = (.(i).#a9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 60;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 60 failed";
  );
  (* Deepening to (.(i).#b9) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i).#b9) in
    (* from (.(i)) *)
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b9) in
    mark_test_run 61;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 61 failed";
    (* from (.(i).#b9) *)
    let shallow : (t9 array, _) idx_mut = (.(i).#b9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 62;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 62 failed";
  );

  (*****************************)
  (*   t10 = #{ int; float }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 63;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 63 failed";
  );
  (* Deepening to (.(i).#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i).#a10) in
    (* from (.(i)) *)
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 64;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 64 failed";
    (* from (.(i).#a10) *)
    let shallow : (t10 array, _) idx_mut = (.(i).#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 65;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 65 failed";
  );
  (* Deepening to (.(i).#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i).#b10) in
    (* from (.(i)) *)
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 66;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 66 failed";
    (* from (.(i).#b10) *)
    let shallow : (t10 array, _) idx_mut = (.(i).#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 67;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 67 failed";
  );

  (**********************************)
  (*   t11 = #{ int; float; int }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 68;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 68 failed";
  );
  (* Deepening to (.(i).#a11) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#a11) in
    (* from (.(i)) *)
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a11) in
    mark_test_run 69;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 69 failed";
    (* from (.(i).#a11) *)
    let shallow : (t11 array, _) idx_mut = (.(i).#a11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 70;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 70 failed";
  );
  (* Deepening to (.(i).#b11) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#b11) in
    (* from (.(i)) *)
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b11) in
    mark_test_run 71;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 71 failed";
    (* from (.(i).#b11) *)
    let shallow : (t11 array, _) idx_mut = (.(i).#b11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 72;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 72 failed";
  );
  (* Deepening to (.(i).#c11) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#c11) in
    (* from (.(i)) *)
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c11) in
    mark_test_run 73;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 73 failed";
    (* from (.(i).#c11) *)
    let shallow : (t11 array, _) idx_mut = (.(i).#c11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 74;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 74 failed";
  );

  (************************************)
  (*   t12 = #{ int; float; float }   *)
  (************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 75;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 75 failed";
  );
  (* Deepening to (.(i).#a12) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#a12) in
    (* from (.(i)) *)
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a12) in
    mark_test_run 76;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 76 failed";
    (* from (.(i).#a12) *)
    let shallow : (t12 array, _) idx_mut = (.(i).#a12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 77;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 77 failed";
  );
  (* Deepening to (.(i).#b12) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#b12) in
    (* from (.(i)) *)
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b12) in
    mark_test_run 78;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 78 failed";
    (* from (.(i).#b12) *)
    let shallow : (t12 array, _) idx_mut = (.(i).#b12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 79;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 79 failed";
  );
  (* Deepening to (.(i).#c12) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#c12) in
    (* from (.(i)) *)
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c12) in
    mark_test_run 80;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 80 failed";
    (* from (.(i).#c12) *)
    let shallow : (t12 array, _) idx_mut = (.(i).#c12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 81;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 81 failed";
  );

  (********************************)
  (*   t13 = #{ int; #{ int } }   *)
  (********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 82;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 82 failed";
  );
  (* Deepening to (.(i).#a13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#a13) in
    (* from (.(i)) *)
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a13) in
    mark_test_run 83;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 83 failed";
    (* from (.(i).#a13) *)
    let shallow : (t13 array, _) idx_mut = (.(i).#a13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 84;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 84 failed";
  );
  (* Deepening to (.(i).#b13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#b13) in
    (* from (.(i)) *)
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b13) in
    mark_test_run 85;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 85 failed";
    (* from (.(i).#b13) *)
    let shallow : (t13 array, _) idx_mut = (.(i).#b13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 86;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 86 failed";
  );
  (* Deepening to (.(i).#b13.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#b13.#a0) in
    (* from (.(i)) *)
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b13.#a0) in
    mark_test_run 87;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 87 failed";
    (* from (.(i).#b13) *)
    let shallow : (t13 array, _) idx_mut = (.(i).#b13) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 88;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 88 failed";
    (* from (.(i).#b13.#a0) *)
    let shallow : (t13 array, _) idx_mut = (.(i).#b13.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 89;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 89 failed";
  );

  (*************************************)
  (*   t14 = #{ int; #{ int; int } }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 90;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 90 failed";
  );
  (* Deepening to (.(i).#a14) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#a14) in
    (* from (.(i)) *)
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a14) in
    mark_test_run 91;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 91 failed";
    (* from (.(i).#a14) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#a14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 92;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 92 failed";
  );
  (* Deepening to (.(i).#b14) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14) in
    (* from (.(i)) *)
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14) in
    mark_test_run 93;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 93 failed";
    (* from (.(i).#b14) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 94;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 94 failed";
  );
  (* Deepening to (.(i).#b14.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14.#a1) in
    (* from (.(i)) *)
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14.#a1) in
    mark_test_run 95;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 95 failed";
    (* from (.(i).#b14) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 96;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 96 failed";
    (* from (.(i).#b14.#a1) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#b14.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 97;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 97 failed";
  );
  (* Deepening to (.(i).#b14.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14.#b1) in
    (* from (.(i)) *)
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14.#b1) in
    mark_test_run 98;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 98 failed";
    (* from (.(i).#b14) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 99;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 99 failed";
    (* from (.(i).#b14.#b1) *)
    let shallow : (t14 array, _) idx_mut = (.(i).#b14.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 100;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 100 failed";
  );

  (****************************************)
  (*   t15 = #{ int; #{ int; int32# } }   *)
  (****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 101;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 101 failed";
  );
  (* Deepening to (.(i).#a15) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#a15) in
    (* from (.(i)) *)
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a15) in
    mark_test_run 102;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 102 failed";
    (* from (.(i).#a15) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#a15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 103;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 103 failed";
  );
  (* Deepening to (.(i).#b15) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15) in
    (* from (.(i)) *)
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15) in
    mark_test_run 104;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 104 failed";
    (* from (.(i).#b15) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 105;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 105 failed";
  );
  (* Deepening to (.(i).#b15.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15.#a7) in
    (* from (.(i)) *)
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15.#a7) in
    mark_test_run 106;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 106 failed";
    (* from (.(i).#b15) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 107;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 107 failed";
    (* from (.(i).#b15.#a7) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#b15.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 108;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 108 failed";
  );
  (* Deepening to (.(i).#b15.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15.#b7) in
    (* from (.(i)) *)
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15.#b7) in
    mark_test_run 109;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 109 failed";
    (* from (.(i).#b15) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 110;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 110 failed";
    (* from (.(i).#b15.#b7) *)
    let shallow : (t15 array, _) idx_mut = (.(i).#b15.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 111;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 111 failed";
  );

  (***************************************)
  (*   t16 = #{ int; #{ int; float } }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 112;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 112 failed";
  );
  (* Deepening to (.(i).#a16) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#a16) in
    (* from (.(i)) *)
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a16) in
    mark_test_run 113;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 113 failed";
    (* from (.(i).#a16) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#a16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 114;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 114 failed";
  );
  (* Deepening to (.(i).#b16) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16) in
    (* from (.(i)) *)
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16) in
    mark_test_run 115;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 115 failed";
    (* from (.(i).#b16) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 116;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 116 failed";
  );
  (* Deepening to (.(i).#b16.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16.#a10) in
    (* from (.(i)) *)
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16.#a10) in
    mark_test_run 117;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 117 failed";
    (* from (.(i).#b16) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 118;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 118 failed";
    (* from (.(i).#b16.#a10) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#b16.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 119;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 119 failed";
  );
  (* Deepening to (.(i).#b16.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16.#b10) in
    (* from (.(i)) *)
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16.#b10) in
    mark_test_run 120;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 120 failed";
    (* from (.(i).#b16) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 121;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 121 failed";
    (* from (.(i).#b16.#b10) *)
    let shallow : (t16 array, _) idx_mut = (.(i).#b16.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 122;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 122 failed";
  );

  (******************************************)
  (*   t17 = #{ int; #{ int; #{ int } } }   *)
  (******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 123;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 123 failed";
  );
  (* Deepening to (.(i).#a17) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#a17) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 124;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 124 failed";
    (* from (.(i).#a17) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 125;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 125 failed";
  );
  (* Deepening to (.(i).#b17) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#b17) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b17) in
    mark_test_run 126;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 126 failed";
    (* from (.(i).#b17) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 127;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 127 failed";
  );
  (* Deepening to (.(i).#b17.#a13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#b17.#a13) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b17.#a13) in
    mark_test_run 128;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 128 failed";
    (* from (.(i).#b17) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17) in
    let deepened = (.idx_mut(shallow).#a13) in
    mark_test_run 129;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 129 failed";
    (* from (.(i).#b17.#a13) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17.#a13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 130;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 130 failed";
  );
  (* Deepening to (.(i).#b17.#b13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#b17.#b13) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b17.#b13) in
    mark_test_run 131;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 131 failed";
    (* from (.(i).#b17) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17) in
    let deepened = (.idx_mut(shallow).#b13) in
    mark_test_run 132;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 132 failed";
    (* from (.(i).#b17.#b13) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17.#b13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 133;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 133 failed";
  );
  (* Deepening to (.(i).#b17.#b13.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#b17.#b13.#a0) in
    (* from (.(i)) *)
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b17.#b13.#a0) in
    mark_test_run 134;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 134 failed";
    (* from (.(i).#b17) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17) in
    let deepened = (.idx_mut(shallow).#b13.#a0) in
    mark_test_run 135;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 135 failed";
    (* from (.(i).#b17.#b13) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17.#b13) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 136;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 136 failed";
    (* from (.(i).#b17.#b13.#a0) *)
    let shallow : (t17 array, _) idx_mut = (.(i).#b17.#b13.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 137;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 137 failed";
  );

  (*********************************************)
  (*   t20 = #{ int; #{ int; #{ int32# } } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 138;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 138 failed";
  );
  (* Deepening to (.(i).#a20) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#a20) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 139;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 139 failed";
    (* from (.(i).#a20) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 140;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 140 failed";
  );
  (* Deepening to (.(i).#b20) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 141;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 141 failed";
    (* from (.(i).#b20) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 142;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 142 failed";
  );
  (* Deepening to (.(i).#b20.#a19) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20.#a19) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20.#a19) in
    mark_test_run 143;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 143 failed";
    (* from (.(i).#b20) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 144;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 144 failed";
    (* from (.(i).#b20.#a19) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 145;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 145 failed";
  );
  (* Deepening to (.(i).#b20.#b19) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20.#b19) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20.#b19) in
    mark_test_run 146;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 146 failed";
    (* from (.(i).#b20) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 147;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 147 failed";
    (* from (.(i).#b20.#b19) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 148;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 148 failed";
  );
  (* Deepening to (.(i).#b20.#b19.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20.#b19.#a18) in
    (* from (.(i)) *)
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20.#b19.#a18) in
    mark_test_run 149;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 149 failed";
    (* from (.(i).#b20) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow).#b19.#a18) in
    mark_test_run 150;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 150 failed";
    (* from (.(i).#b20.#b19) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#b19) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 151;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 151 failed";
    (* from (.(i).#b20.#b19.#a18) *)
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#b19.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 152;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 152 failed";
  );

  (********************************************)
  (*   t23 = #{ int; #{ int; #{ float } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 153;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 153 failed";
  );
  (* Deepening to (.(i).#a23) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#a23) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 154;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 154 failed";
    (* from (.(i).#a23) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 155;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 155 failed";
  );
  (* Deepening to (.(i).#b23) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#b23) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 156;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 156 failed";
    (* from (.(i).#b23) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 157;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 157 failed";
  );
  (* Deepening to (.(i).#b23.#a22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#b23.#a22) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b23.#a22) in
    mark_test_run 158;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 158 failed";
    (* from (.(i).#b23) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 159;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 159 failed";
    (* from (.(i).#b23.#a22) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 160;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 160 failed";
  );
  (* Deepening to (.(i).#b23.#b22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#b23.#b22) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b23.#b22) in
    mark_test_run 161;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 161 failed";
    (* from (.(i).#b23) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 162;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 162 failed";
    (* from (.(i).#b23.#b22) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 163;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 163 failed";
  );
  (* Deepening to (.(i).#b23.#b22.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#b23.#b22.#a21) in
    (* from (.(i)) *)
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b23.#b22.#a21) in
    mark_test_run 164;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 164 failed";
    (* from (.(i).#b23) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23) in
    let deepened = (.idx_mut(shallow).#b22.#a21) in
    mark_test_run 165;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 165 failed";
    (* from (.(i).#b23.#b22) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23.#b22) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 166;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 166 failed";
    (* from (.(i).#b23.#b22.#a21) *)
    let shallow : (t23 array, _) idx_mut = (.(i).#b23.#b22.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 167;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 167 failed";
  );

  (***********************************)
  (*   t19 = #{ int; #{ int32# } }   *)
  (***********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 168;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 168 failed";
  );
  (* Deepening to (.(i).#a19) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i).#a19) in
    (* from (.(i)) *)
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 169;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 169 failed";
    (* from (.(i).#a19) *)
    let shallow : (t19 array, _) idx_mut = (.(i).#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 170;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 170 failed";
  );
  (* Deepening to (.(i).#b19) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i).#b19) in
    (* from (.(i)) *)
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 171;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 171 failed";
    (* from (.(i).#b19) *)
    let shallow : (t19 array, _) idx_mut = (.(i).#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 172;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 172 failed";
  );
  (* Deepening to (.(i).#b19.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i).#b19.#a18) in
    (* from (.(i)) *)
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b19.#a18) in
    mark_test_run 173;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 173 failed";
    (* from (.(i).#b19) *)
    let shallow : (t19 array, _) idx_mut = (.(i).#b19) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 174;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 174 failed";
    (* from (.(i).#b19.#a18) *)
    let shallow : (t19 array, _) idx_mut = (.(i).#b19.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 175;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 175 failed";
  );

  (*******************************************)
  (*   t25 = #{ int; #{ int32#; int32# } }   *)
  (*******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 176;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 176 failed";
  );
  (* Deepening to (.(i).#a25) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#a25) in
    (* from (.(i)) *)
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 177;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 177 failed";
    (* from (.(i).#a25) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 178;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 178 failed";
  );
  (* Deepening to (.(i).#b25) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#b25) in
    (* from (.(i)) *)
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 179;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 179 failed";
    (* from (.(i).#b25) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 180;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 180 failed";
  );
  (* Deepening to (.(i).#b25.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#b25.#a24) in
    (* from (.(i)) *)
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b25.#a24) in
    mark_test_run 181;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 181 failed";
    (* from (.(i).#b25) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#b25) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 182;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 182 failed";
    (* from (.(i).#b25.#a24) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#b25.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 183;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 183 failed";
  );
  (* Deepening to (.(i).#b25.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#b25.#b24) in
    (* from (.(i)) *)
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b25.#b24) in
    mark_test_run 184;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 184 failed";
    (* from (.(i).#b25) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#b25) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 185;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 185 failed";
    (* from (.(i).#b25.#b24) *)
    let shallow : (t25 array, _) idx_mut = (.(i).#b25.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 186;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 186 failed";
  );

  (************************************************)
  (*   t27 = #{ int; #{ int32#; #{ int32# } } }   *)
  (************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 187;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 187 failed";
  );
  (* Deepening to (.(i).#a27) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#a27) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a27) in
    mark_test_run 188;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 188 failed";
    (* from (.(i).#a27) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#a27) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 189;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 189 failed";
  );
  (* Deepening to (.(i).#b27) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#b27) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b27) in
    mark_test_run 190;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 190 failed";
    (* from (.(i).#b27) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 191;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 191 failed";
  );
  (* Deepening to (.(i).#b27.#a26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#b27.#a26) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b27.#a26) in
    mark_test_run 192;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 192 failed";
    (* from (.(i).#b27) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 193;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 193 failed";
    (* from (.(i).#b27.#a26) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 194;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 194 failed";
  );
  (* Deepening to (.(i).#b27.#b26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#b27.#b26) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b27.#b26) in
    mark_test_run 195;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 195 failed";
    (* from (.(i).#b27) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 196;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 196 failed";
    (* from (.(i).#b27.#b26) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 197;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 197 failed";
  );
  (* Deepening to (.(i).#b27.#b26.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#b27.#b26.#a18) in
    (* from (.(i)) *)
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b27.#b26.#a18) in
    mark_test_run 198;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 198 failed";
    (* from (.(i).#b27) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27) in
    let deepened = (.idx_mut(shallow).#b26.#a18) in
    mark_test_run 199;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 199 failed";
    (* from (.(i).#b27.#b26) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27.#b26) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 200;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 200 failed";
    (* from (.(i).#b27.#b26.#a18) *)
    let shallow : (t27 array, _) idx_mut = (.(i).#b27.#b26.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 201;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 201 failed";
  );

  (**********************************)
  (*   t22 = #{ int; #{ float } }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 202;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 202 failed";
  );
  (* Deepening to (.(i).#a22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#a22) in
    (* from (.(i)) *)
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 203;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 203 failed";
    (* from (.(i).#a22) *)
    let shallow : (t22 array, _) idx_mut = (.(i).#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 204;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 204 failed";
  );
  (* Deepening to (.(i).#b22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#b22) in
    (* from (.(i)) *)
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 205;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 205 failed";
    (* from (.(i).#b22) *)
    let shallow : (t22 array, _) idx_mut = (.(i).#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 206;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 206 failed";
  );
  (* Deepening to (.(i).#b22.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#b22.#a21) in
    (* from (.(i)) *)
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b22.#a21) in
    mark_test_run 207;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 207 failed";
    (* from (.(i).#b22) *)
    let shallow : (t22 array, _) idx_mut = (.(i).#b22) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 208;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 208 failed";
    (* from (.(i).#b22.#a21) *)
    let shallow : (t22 array, _) idx_mut = (.(i).#b22.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 209;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 209 failed";
  );

  (***************************************)
  (*   t29 = #{ int; #{ float; int } }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 210;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 210 failed";
  );
  (* Deepening to (.(i).#a29) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#a29) in
    (* from (.(i)) *)
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a29) in
    mark_test_run 211;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 211 failed";
    (* from (.(i).#a29) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#a29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 212;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 212 failed";
  );
  (* Deepening to (.(i).#b29) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#b29) in
    (* from (.(i)) *)
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b29) in
    mark_test_run 213;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 213 failed";
    (* from (.(i).#b29) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#b29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 214;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 214 failed";
  );
  (* Deepening to (.(i).#b29.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#b29.#a28) in
    (* from (.(i)) *)
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b29.#a28) in
    mark_test_run 215;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 215 failed";
    (* from (.(i).#b29) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#b29) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 216;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 216 failed";
    (* from (.(i).#b29.#a28) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#b29.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 217;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 217 failed";
  );
  (* Deepening to (.(i).#b29.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#b29.#b28) in
    (* from (.(i)) *)
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b29.#b28) in
    mark_test_run 218;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 218 failed";
    (* from (.(i).#b29) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#b29) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 219;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 219 failed";
    (* from (.(i).#b29.#b28) *)
    let shallow : (t29 array, _) idx_mut = (.(i).#b29.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 220;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 220 failed";
  );

  (*****************************************)
  (*   t31 = #{ int; #{ float; float } }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 221;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 221 failed";
  );
  (* Deepening to (.(i).#a31) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i).#a31) in
    (* from (.(i)) *)
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a31) in
    mark_test_run 222;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 222 failed";
    (* from (.(i).#a31) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#a31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 223;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 223 failed";
  );
  (* Deepening to (.(i).#b31) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i).#b31) in
    (* from (.(i)) *)
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b31) in
    mark_test_run 224;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 224 failed";
    (* from (.(i).#b31) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#b31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 225;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 225 failed";
  );
  (* Deepening to (.(i).#b31.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i).#b31.#a30) in
    (* from (.(i)) *)
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b31.#a30) in
    mark_test_run 226;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 226 failed";
    (* from (.(i).#b31) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#b31) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 227;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 227 failed";
    (* from (.(i).#b31.#a30) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#b31.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 228;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 228 failed";
  );
  (* Deepening to (.(i).#b31.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i).#b31.#b30) in
    (* from (.(i)) *)
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b31.#b30) in
    mark_test_run 229;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 229 failed";
    (* from (.(i).#b31) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#b31) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 230;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 230 failed";
    (* from (.(i).#b31.#b30) *)
    let shallow : (t31 array, _) idx_mut = (.(i).#b31.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 231;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 231 failed";
  );

  (********************************************)
  (*   t33 = #{ int; #{ float; #{ int } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 232;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 232 failed";
  );
  (* Deepening to (.(i).#a33) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#a33) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 233;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 233 failed";
    (* from (.(i).#a33) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 234;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 234 failed";
  );
  (* Deepening to (.(i).#b33) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#b33) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b33) in
    mark_test_run 235;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 235 failed";
    (* from (.(i).#b33) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 236;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 236 failed";
  );
  (* Deepening to (.(i).#b33.#a32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#b33.#a32) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b33.#a32) in
    mark_test_run 237;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 237 failed";
    (* from (.(i).#b33) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33) in
    let deepened = (.idx_mut(shallow).#a32) in
    mark_test_run 238;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 238 failed";
    (* from (.(i).#b33.#a32) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33.#a32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 239;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 239 failed";
  );
  (* Deepening to (.(i).#b33.#b32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#b33.#b32) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b33.#b32) in
    mark_test_run 240;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 240 failed";
    (* from (.(i).#b33) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33) in
    let deepened = (.idx_mut(shallow).#b32) in
    mark_test_run 241;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 241 failed";
    (* from (.(i).#b33.#b32) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33.#b32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 242;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 242 failed";
  );
  (* Deepening to (.(i).#b33.#b32.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#b33.#b32.#a0) in
    (* from (.(i)) *)
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b33.#b32.#a0) in
    mark_test_run 243;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 243 failed";
    (* from (.(i).#b33) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33) in
    let deepened = (.idx_mut(shallow).#b32.#a0) in
    mark_test_run 244;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 244 failed";
    (* from (.(i).#b33.#b32) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33.#b32) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 245;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 245 failed";
    (* from (.(i).#b33.#b32.#a0) *)
    let shallow : (t33 array, _) idx_mut = (.(i).#b33.#b32.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 246;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 246 failed";
  );

  (**********************************************)
  (*   t35 = #{ int; #{ float; #{ float } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 247;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 247 failed";
  );
  (* Deepening to (.(i).#a35) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#a35) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a35) in
    mark_test_run 248;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 248 failed";
    (* from (.(i).#a35) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#a35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 249;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 249 failed";
  );
  (* Deepening to (.(i).#b35) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#b35) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b35) in
    mark_test_run 250;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 250 failed";
    (* from (.(i).#b35) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 251;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 251 failed";
  );
  (* Deepening to (.(i).#b35.#a34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#b35.#a34) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b35.#a34) in
    mark_test_run 252;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 252 failed";
    (* from (.(i).#b35) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 253;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 253 failed";
    (* from (.(i).#b35.#a34) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35.#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 254;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 254 failed";
  );
  (* Deepening to (.(i).#b35.#b34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#b35.#b34) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b35.#b34) in
    mark_test_run 255;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 255 failed";
    (* from (.(i).#b35) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 256;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 256 failed";
    (* from (.(i).#b35.#b34) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35.#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 257;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 257 failed";
  );
  (* Deepening to (.(i).#b35.#b34.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#b35.#b34.#a21) in
    (* from (.(i)) *)
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b35.#b34.#a21) in
    mark_test_run 258;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 258 failed";
    (* from (.(i).#b35) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35) in
    let deepened = (.idx_mut(shallow).#b34.#a21) in
    mark_test_run 259;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 259 failed";
    (* from (.(i).#b35.#b34) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35.#b34) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 260;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 260 failed";
    (* from (.(i).#b35.#b34.#a21) *)
    let shallow : (t35 array, _) idx_mut = (.(i).#b35.#b34.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 261;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 261 failed";
  );

  (******************************************)
  (*   t37 = #{ int; #{ #{ int; int } } }   *)
  (******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 262;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 262 failed";
  );
  (* Deepening to (.(i).#a37) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#a37) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a37) in
    mark_test_run 263;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 263 failed";
    (* from (.(i).#a37) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#a37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 264;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 264 failed";
  );
  (* Deepening to (.(i).#b37) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#b37) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b37) in
    mark_test_run 265;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 265 failed";
    (* from (.(i).#b37) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 266;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 266 failed";
  );
  (* Deepening to (.(i).#b37.#a36) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#b37.#a36) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b37.#a36) in
    mark_test_run 267;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 267 failed";
    (* from (.(i).#b37) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 268;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 268 failed";
    (* from (.(i).#b37.#a36) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 269;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 269 failed";
  );
  (* Deepening to (.(i).#b37.#a36.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#b37.#a36.#a1) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b37.#a36.#a1) in
    mark_test_run 270;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 270 failed";
    (* from (.(i).#b37) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37) in
    let deepened = (.idx_mut(shallow).#a36.#a1) in
    mark_test_run 271;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 271 failed";
    (* from (.(i).#b37.#a36) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37.#a36) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 272;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 272 failed";
    (* from (.(i).#b37.#a36.#a1) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37.#a36.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 273;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 273 failed";
  );
  (* Deepening to (.(i).#b37.#a36.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#b37.#a36.#b1) in
    (* from (.(i)) *)
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b37.#a36.#b1) in
    mark_test_run 274;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 274 failed";
    (* from (.(i).#b37) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37) in
    let deepened = (.idx_mut(shallow).#a36.#b1) in
    mark_test_run 275;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 275 failed";
    (* from (.(i).#b37.#a36) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37.#a36) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 276;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 276 failed";
    (* from (.(i).#b37.#a36.#b1) *)
    let shallow : (t37 array, _) idx_mut = (.(i).#b37.#a36.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 277;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 277 failed";
  );

  (*********************************************)
  (*   t39 = #{ int; #{ #{ int; int32# } } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 278;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 278 failed";
  );
  (* Deepening to (.(i).#a39) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#a39) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a39) in
    mark_test_run 279;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 279 failed";
    (* from (.(i).#a39) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#a39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 280;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 280 failed";
  );
  (* Deepening to (.(i).#b39) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39) in
    mark_test_run 281;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 281 failed";
    (* from (.(i).#b39) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 282;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 282 failed";
  );
  (* Deepening to (.(i).#b39.#a38) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39.#a38) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39.#a38) in
    mark_test_run 283;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 283 failed";
    (* from (.(i).#b39) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow).#a38) in
    mark_test_run 284;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 284 failed";
    (* from (.(i).#b39.#a38) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 285;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 285 failed";
  );
  (* Deepening to (.(i).#b39.#a38.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39.#a38.#a7) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39.#a38.#a7) in
    mark_test_run 286;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 286 failed";
    (* from (.(i).#b39) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow).#a38.#a7) in
    mark_test_run 287;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 287 failed";
    (* from (.(i).#b39.#a38) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a38) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 288;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 288 failed";
    (* from (.(i).#b39.#a38.#a7) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a38.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 289;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 289 failed";
  );
  (* Deepening to (.(i).#b39.#a38.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39.#a38.#b7) in
    (* from (.(i)) *)
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39.#a38.#b7) in
    mark_test_run 290;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 290 failed";
    (* from (.(i).#b39) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow).#a38.#b7) in
    mark_test_run 291;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 291 failed";
    (* from (.(i).#b39.#a38) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a38) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 292;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 292 failed";
    (* from (.(i).#b39.#a38.#b7) *)
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a38.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 293;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 293 failed";
  );

  (********************************************)
  (*   t41 = #{ int; #{ #{ int; float } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 294;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 294 failed";
  );
  (* Deepening to (.(i).#a41) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#a41) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a41) in
    mark_test_run 295;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 295 failed";
    (* from (.(i).#a41) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#a41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 296;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 296 failed";
  );
  (* Deepening to (.(i).#b41) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#b41) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b41) in
    mark_test_run 297;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 297 failed";
    (* from (.(i).#b41) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 298;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 298 failed";
  );
  (* Deepening to (.(i).#b41.#a40) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#b41.#a40) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b41.#a40) in
    mark_test_run 299;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 299 failed";
    (* from (.(i).#b41) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 300;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 300 failed";
    (* from (.(i).#b41.#a40) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 301;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 301 failed";
  );
  (* Deepening to (.(i).#b41.#a40.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#b41.#a40.#a10) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b41.#a40.#a10) in
    mark_test_run 302;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 302 failed";
    (* from (.(i).#b41) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41) in
    let deepened = (.idx_mut(shallow).#a40.#a10) in
    mark_test_run 303;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 303 failed";
    (* from (.(i).#b41.#a40) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41.#a40) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 304;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 304 failed";
    (* from (.(i).#b41.#a40.#a10) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41.#a40.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 305;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 305 failed";
  );
  (* Deepening to (.(i).#b41.#a40.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#b41.#a40.#b10) in
    (* from (.(i)) *)
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b41.#a40.#b10) in
    mark_test_run 306;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 306 failed";
    (* from (.(i).#b41) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41) in
    let deepened = (.idx_mut(shallow).#a40.#b10) in
    mark_test_run 307;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 307 failed";
    (* from (.(i).#b41.#a40) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41.#a40) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 308;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 308 failed";
    (* from (.(i).#b41.#a40.#b10) *)
    let shallow : (t41 array, _) idx_mut = (.(i).#b41.#a40.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 309;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 309 failed";
  );

  (************************************************)
  (*   t43 = #{ int; #{ #{ int32#; int32# } } }   *)
  (************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 310;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 310 failed";
  );
  (* Deepening to (.(i).#a43) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#a43) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a43) in
    mark_test_run 311;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 311 failed";
    (* from (.(i).#a43) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#a43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 312;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 312 failed";
  );
  (* Deepening to (.(i).#b43) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#b43) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b43) in
    mark_test_run 313;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 313 failed";
    (* from (.(i).#b43) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 314;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 314 failed";
  );
  (* Deepening to (.(i).#b43.#a42) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#b43.#a42) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b43.#a42) in
    mark_test_run 315;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 315 failed";
    (* from (.(i).#b43) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 316;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 316 failed";
    (* from (.(i).#b43.#a42) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 317;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 317 failed";
  );
  (* Deepening to (.(i).#b43.#a42.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#b43.#a42.#a24) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b43.#a42.#a24) in
    mark_test_run 318;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 318 failed";
    (* from (.(i).#b43) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43) in
    let deepened = (.idx_mut(shallow).#a42.#a24) in
    mark_test_run 319;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 319 failed";
    (* from (.(i).#b43.#a42) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43.#a42) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 320;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 320 failed";
    (* from (.(i).#b43.#a42.#a24) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43.#a42.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 321;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 321 failed";
  );
  (* Deepening to (.(i).#b43.#a42.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#b43.#a42.#b24) in
    (* from (.(i)) *)
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b43.#a42.#b24) in
    mark_test_run 322;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 322 failed";
    (* from (.(i).#b43) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43) in
    let deepened = (.idx_mut(shallow).#a42.#b24) in
    mark_test_run 323;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 323 failed";
    (* from (.(i).#b43.#a42) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43.#a42) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 324;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 324 failed";
    (* from (.(i).#b43.#a42.#b24) *)
    let shallow : (t43 array, _) idx_mut = (.(i).#b43.#a42.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 325;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 325 failed";
  );

  (********************************************)
  (*   t45 = #{ int; #{ #{ float; int } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 326;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 326 failed";
  );
  (* Deepening to (.(i).#a45) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#a45) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a45) in
    mark_test_run 327;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 327 failed";
    (* from (.(i).#a45) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#a45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 328;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 328 failed";
  );
  (* Deepening to (.(i).#b45) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#b45) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b45) in
    mark_test_run 329;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 329 failed";
    (* from (.(i).#b45) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 330;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 330 failed";
  );
  (* Deepening to (.(i).#b45.#a44) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#b45.#a44) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b45.#a44) in
    mark_test_run 331;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 331 failed";
    (* from (.(i).#b45) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 332;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 332 failed";
    (* from (.(i).#b45.#a44) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45.#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 333;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 333 failed";
  );
  (* Deepening to (.(i).#b45.#a44.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#b45.#a44.#a28) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b45.#a44.#a28) in
    mark_test_run 334;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 334 failed";
    (* from (.(i).#b45) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45) in
    let deepened = (.idx_mut(shallow).#a44.#a28) in
    mark_test_run 335;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 335 failed";
    (* from (.(i).#b45.#a44) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45.#a44) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 336;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 336 failed";
    (* from (.(i).#b45.#a44.#a28) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45.#a44.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 337;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 337 failed";
  );
  (* Deepening to (.(i).#b45.#a44.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#b45.#a44.#b28) in
    (* from (.(i)) *)
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b45.#a44.#b28) in
    mark_test_run 338;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 338 failed";
    (* from (.(i).#b45) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45) in
    let deepened = (.idx_mut(shallow).#a44.#b28) in
    mark_test_run 339;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 339 failed";
    (* from (.(i).#b45.#a44) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45.#a44) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 340;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 340 failed";
    (* from (.(i).#b45.#a44.#b28) *)
    let shallow : (t45 array, _) idx_mut = (.(i).#b45.#a44.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 341;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 341 failed";
  );

  (**********************************************)
  (*   t47 = #{ int; #{ #{ float; float } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 342;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 342 failed";
  );
  (* Deepening to (.(i).#a47) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#a47) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a47) in
    mark_test_run 343;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 343 failed";
    (* from (.(i).#a47) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#a47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 344;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 344 failed";
  );
  (* Deepening to (.(i).#b47) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#b47) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b47) in
    mark_test_run 345;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 345 failed";
    (* from (.(i).#b47) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 346;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 346 failed";
  );
  (* Deepening to (.(i).#b47.#a46) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#b47.#a46) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b47.#a46) in
    mark_test_run 347;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 347 failed";
    (* from (.(i).#b47) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 348;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 348 failed";
    (* from (.(i).#b47.#a46) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47.#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 349;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 349 failed";
  );
  (* Deepening to (.(i).#b47.#a46.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#b47.#a46.#a30) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b47.#a46.#a30) in
    mark_test_run 350;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 350 failed";
    (* from (.(i).#b47) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47) in
    let deepened = (.idx_mut(shallow).#a46.#a30) in
    mark_test_run 351;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 351 failed";
    (* from (.(i).#b47.#a46) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47.#a46) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 352;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 352 failed";
    (* from (.(i).#b47.#a46.#a30) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47.#a46.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 353;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 353 failed";
  );
  (* Deepening to (.(i).#b47.#a46.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#b47.#a46.#b30) in
    (* from (.(i)) *)
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b47.#a46.#b30) in
    mark_test_run 354;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 354 failed";
    (* from (.(i).#b47) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47) in
    let deepened = (.idx_mut(shallow).#a46.#b30) in
    mark_test_run 355;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 355 failed";
    (* from (.(i).#b47.#a46) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47.#a46) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 356;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 356 failed";
    (* from (.(i).#b47.#a46.#b30) *)
    let shallow : (t47 array, _) idx_mut = (.(i).#b47.#a46.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 357;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 357 failed";
  );

  (************************)
  (*   t48 = #{ int64 }   *)
  (************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 358;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 358 failed";
  );
  (* Deepening to (.(i).#a48) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i).#a48) in
    (* from (.(i)) *)
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a48) in
    mark_test_run 359;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 359 failed";
    (* from (.(i).#a48) *)
    let shallow : (t48 array, _) idx_mut = (.(i).#a48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 360;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 360 failed";
  );

  (*****************************)
  (*   t49 = #{ int64; int }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 361;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 361 failed";
  );
  (* Deepening to (.(i).#a49) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i).#a49) in
    (* from (.(i)) *)
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 362;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 362 failed";
    (* from (.(i).#a49) *)
    let shallow : (t49 array, _) idx_mut = (.(i).#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 363;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 363 failed";
  );
  (* Deepening to (.(i).#b49) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i).#b49) in
    (* from (.(i)) *)
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 364;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 364 failed";
    (* from (.(i).#b49) *)
    let shallow : (t49 array, _) idx_mut = (.(i).#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 365;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 365 failed";
  );

  (*******************************)
  (*   t50 = #{ int64; int64 }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 366;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 366 failed";
  );
  (* Deepening to (.(i).#a50) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#a50) in
    (* from (.(i)) *)
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a50) in
    mark_test_run 367;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 367 failed";
    (* from (.(i).#a50) *)
    let shallow : (t50 array, _) idx_mut = (.(i).#a50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 368;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 368 failed";
  );
  (* Deepening to (.(i).#b50) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#b50) in
    (* from (.(i)) *)
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b50) in
    mark_test_run 369;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 369 failed";
    (* from (.(i).#b50) *)
    let shallow : (t50 array, _) idx_mut = (.(i).#b50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 370;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 370 failed";
  );

  (*******************************)
  (*   t51 = #{ int64; float }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 371;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 371 failed";
  );
  (* Deepening to (.(i).#a51) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#a51) in
    (* from (.(i)) *)
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 372;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 372 failed";
    (* from (.(i).#a51) *)
    let shallow : (t51 array, _) idx_mut = (.(i).#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 373;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 373 failed";
  );
  (* Deepening to (.(i).#b51) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#b51) in
    (* from (.(i)) *)
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 374;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 374 failed";
    (* from (.(i).#b51) *)
    let shallow : (t51 array, _) idx_mut = (.(i).#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 375;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 375 failed";
  );

  (*************************)
  (*   t52 = #{ int64# }   *)
  (*************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 376;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 376 failed";
  );
  (* Deepening to (.(i).#a52) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i).#a52) in
    (* from (.(i)) *)
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a52) in
    mark_test_run 377;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 377 failed";
    (* from (.(i).#a52) *)
    let shallow : (t52 array, _) idx_mut = (.(i).#a52) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 378;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 378 failed";
  );

  (*********************************)
  (*   t53 = #{ int64#; int64# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 379;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 379 failed";
  );
  (* Deepening to (.(i).#a53) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#a53) in
    (* from (.(i)) *)
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a53) in
    mark_test_run 380;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 380 failed";
    (* from (.(i).#a53) *)
    let shallow : (t53 array, _) idx_mut = (.(i).#a53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 381;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 381 failed";
  );
  (* Deepening to (.(i).#b53) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#b53) in
    (* from (.(i)) *)
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b53) in
    mark_test_run 382;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 382 failed";
    (* from (.(i).#b53) *)
    let shallow : (t53 array, _) idx_mut = (.(i).#b53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 383;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 383 failed";
  );

  (*********************************)
  (*   t54 = #{ int64#; int32# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 384;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 384 failed";
  );
  (* Deepening to (.(i).#a54) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#a54) in
    (* from (.(i)) *)
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a54) in
    mark_test_run 385;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 385 failed";
    (* from (.(i).#a54) *)
    let shallow : (t54 array, _) idx_mut = (.(i).#a54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 386;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 386 failed";
  );
  (* Deepening to (.(i).#b54) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#b54) in
    (* from (.(i)) *)
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b54) in
    mark_test_run 387;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 387 failed";
    (* from (.(i).#b54) *)
    let shallow : (t54 array, _) idx_mut = (.(i).#b54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 388;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 388 failed";
  );

  (*************************************)
  (*   t55 = #{ int64#; nativeint# }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 389;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 389 failed";
  );
  (* Deepening to (.(i).#a55) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i).#a55) in
    (* from (.(i)) *)
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a55) in
    mark_test_run 390;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 390 failed";
    (* from (.(i).#a55) *)
    let shallow : (t55 array, _) idx_mut = (.(i).#a55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 391;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 391 failed";
  );
  (* Deepening to (.(i).#b55) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i).#b55) in
    (* from (.(i)) *)
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b55) in
    mark_test_run 392;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 392 failed";
    (* from (.(i).#b55) *)
    let shallow : (t55 array, _) idx_mut = (.(i).#b55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 393;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 393 failed";
  );

  (*************************)
  (*   t18 = #{ int32# }   *)
  (*************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 394;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 394 failed";
  );
  (* Deepening to (.(i).#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i).#a18) in
    (* from (.(i)) *)
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 395;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 395 failed";
    (* from (.(i).#a18) *)
    let shallow : (t18 array, _) idx_mut = (.(i).#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 396;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 396 failed";
  );

  (*********************************)
  (*   t56 = #{ int32#; int64# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 397;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 397 failed";
  );
  (* Deepening to (.(i).#a56) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i).#a56) in
    (* from (.(i)) *)
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a56) in
    mark_test_run 398;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 398 failed";
    (* from (.(i).#a56) *)
    let shallow : (t56 array, _) idx_mut = (.(i).#a56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 399;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 399 failed";
  );
  (* Deepening to (.(i).#b56) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i).#b56) in
    (* from (.(i)) *)
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b56) in
    mark_test_run 400;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 400 failed";
    (* from (.(i).#b56) *)
    let shallow : (t56 array, _) idx_mut = (.(i).#b56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 401;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 401 failed";
  );

  (*********************************)
  (*   t24 = #{ int32#; int32# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 402;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 402 failed";
  );
  (* Deepening to (.(i).#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#a24) in
    (* from (.(i)) *)
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 403;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 403 failed";
    (* from (.(i).#a24) *)
    let shallow : (t24 array, _) idx_mut = (.(i).#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 404;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 404 failed";
  );
  (* Deepening to (.(i).#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#b24) in
    (* from (.(i)) *)
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 405;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 405 failed";
    (* from (.(i).#b24) *)
    let shallow : (t24 array, _) idx_mut = (.(i).#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 406;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 406 failed";
  );

  (*****************************************)
  (*   t57 = #{ int32#; int32#; int32# }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 407;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 407 failed";
  );
  (* Deepening to (.(i).#a57) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#a57) in
    (* from (.(i)) *)
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a57) in
    mark_test_run 408;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 408 failed";
    (* from (.(i).#a57) *)
    let shallow : (t57 array, _) idx_mut = (.(i).#a57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 409;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 409 failed";
  );
  (* Deepening to (.(i).#b57) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#b57) in
    (* from (.(i)) *)
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b57) in
    mark_test_run 410;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 410 failed";
    (* from (.(i).#b57) *)
    let shallow : (t57 array, _) idx_mut = (.(i).#b57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 411;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 411 failed";
  );
  (* Deepening to (.(i).#c57) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#c57) in
    (* from (.(i)) *)
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c57) in
    mark_test_run 412;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 412 failed";
    (* from (.(i).#c57) *)
    let shallow : (t57 array, _) idx_mut = (.(i).#c57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 413;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 413 failed";
  );

  (*************************************)
  (*   t58 = #{ int32#; nativeint# }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 414;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 414 failed";
  );
  (* Deepening to (.(i).#a58) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i).#a58) in
    (* from (.(i)) *)
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 415;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 415 failed";
    (* from (.(i).#a58) *)
    let shallow : (t58 array, _) idx_mut = (.(i).#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 416;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 416 failed";
  );
  (* Deepening to (.(i).#b58) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i).#b58) in
    (* from (.(i)) *)
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 417;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 417 failed";
    (* from (.(i).#b58) *)
    let shallow : (t58 array, _) idx_mut = (.(i).#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 418;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 418 failed";
  );

  (**************************************)
  (*   t26 = #{ int32#; #{ int32# } }   *)
  (**************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 419;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 419 failed";
  );
  (* Deepening to (.(i).#a26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#a26) in
    (* from (.(i)) *)
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 420;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 420 failed";
    (* from (.(i).#a26) *)
    let shallow : (t26 array, _) idx_mut = (.(i).#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 421;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 421 failed";
  );
  (* Deepening to (.(i).#b26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#b26) in
    (* from (.(i)) *)
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 422;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 422 failed";
    (* from (.(i).#b26) *)
    let shallow : (t26 array, _) idx_mut = (.(i).#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 423;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 423 failed";
  );
  (* Deepening to (.(i).#b26.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#b26.#a18) in
    (* from (.(i)) *)
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b26.#a18) in
    mark_test_run 424;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 424 failed";
    (* from (.(i).#b26) *)
    let shallow : (t26 array, _) idx_mut = (.(i).#b26) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 425;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 425 failed";
    (* from (.(i).#b26.#a18) *)
    let shallow : (t26 array, _) idx_mut = (.(i).#b26.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 426;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 426 failed";
  );

  (**********************************************)
  (*   t59 = #{ int32#; #{ int32#; int32# } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 427;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 427 failed";
  );
  (* Deepening to (.(i).#a59) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#a59) in
    (* from (.(i)) *)
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a59) in
    mark_test_run 428;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 428 failed";
    (* from (.(i).#a59) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#a59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 429;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 429 failed";
  );
  (* Deepening to (.(i).#b59) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#b59) in
    (* from (.(i)) *)
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b59) in
    mark_test_run 430;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 430 failed";
    (* from (.(i).#b59) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#b59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 431;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 431 failed";
  );
  (* Deepening to (.(i).#b59.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#b59.#a24) in
    (* from (.(i)) *)
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b59.#a24) in
    mark_test_run 432;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 432 failed";
    (* from (.(i).#b59) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#b59) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 433;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 433 failed";
    (* from (.(i).#b59.#a24) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#b59.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 434;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 434 failed";
  );
  (* Deepening to (.(i).#b59.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#b59.#b24) in
    (* from (.(i)) *)
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b59.#b24) in
    mark_test_run 435;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 435 failed";
    (* from (.(i).#b59) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#b59) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 436;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 436 failed";
    (* from (.(i).#b59.#b24) *)
    let shallow : (t59 array, _) idx_mut = (.(i).#b59.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 437;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 437 failed";
  );

  (***************************************************)
  (*   t60 = #{ int32#; #{ int32#; #{ int32# } } }   *)
  (***************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 438;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 438 failed";
  );
  (* Deepening to (.(i).#a60) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#a60) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 439;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 439 failed";
    (* from (.(i).#a60) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 440;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 440 failed";
  );
  (* Deepening to (.(i).#b60) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#b60) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 441;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 441 failed";
    (* from (.(i).#b60) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 442;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 442 failed";
  );
  (* Deepening to (.(i).#b60.#a26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#b60.#a26) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b60.#a26) in
    mark_test_run 443;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 443 failed";
    (* from (.(i).#b60) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 444;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 444 failed";
    (* from (.(i).#b60.#a26) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 445;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 445 failed";
  );
  (* Deepening to (.(i).#b60.#b26) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#b60.#b26) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b60.#b26) in
    mark_test_run 446;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 446 failed";
    (* from (.(i).#b60) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 447;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 447 failed";
    (* from (.(i).#b60.#b26) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 448;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 448 failed";
  );
  (* Deepening to (.(i).#b60.#b26.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#b60.#b26.#a18) in
    (* from (.(i)) *)
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b60.#b26.#a18) in
    mark_test_run 449;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 449 failed";
    (* from (.(i).#b60) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60) in
    let deepened = (.idx_mut(shallow).#b26.#a18) in
    mark_test_run 450;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 450 failed";
    (* from (.(i).#b60.#b26) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60.#b26) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 451;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 451 failed";
    (* from (.(i).#b60.#b26.#a18) *)
    let shallow : (t60 array, _) idx_mut = (.(i).#b60.#b26.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 452;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 452 failed";
  );

  (***************************************************)
  (*   t61 = #{ int32#; #{ #{ int32#; int32# } } }   *)
  (***************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 453;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 453 failed";
  );
  (* Deepening to (.(i).#a61) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#a61) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a61) in
    mark_test_run 454;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 454 failed";
    (* from (.(i).#a61) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#a61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 455;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 455 failed";
  );
  (* Deepening to (.(i).#b61) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#b61) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b61) in
    mark_test_run 456;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 456 failed";
    (* from (.(i).#b61) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 457;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 457 failed";
  );
  (* Deepening to (.(i).#b61.#a42) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#b61.#a42) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b61.#a42) in
    mark_test_run 458;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 458 failed";
    (* from (.(i).#b61) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 459;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 459 failed";
    (* from (.(i).#b61.#a42) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 460;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 460 failed";
  );
  (* Deepening to (.(i).#b61.#a42.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#b61.#a42.#a24) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b61.#a42.#a24) in
    mark_test_run 461;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 461 failed";
    (* from (.(i).#b61) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61) in
    let deepened = (.idx_mut(shallow).#a42.#a24) in
    mark_test_run 462;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 462 failed";
    (* from (.(i).#b61.#a42) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61.#a42) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 463;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 463 failed";
    (* from (.(i).#b61.#a42.#a24) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61.#a42.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 464;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 464 failed";
  );
  (* Deepening to (.(i).#b61.#a42.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#b61.#a42.#b24) in
    (* from (.(i)) *)
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b61.#a42.#b24) in
    mark_test_run 465;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 465 failed";
    (* from (.(i).#b61) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61) in
    let deepened = (.idx_mut(shallow).#a42.#b24) in
    mark_test_run 466;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 466 failed";
    (* from (.(i).#b61.#a42) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61.#a42) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 467;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 467 failed";
    (* from (.(i).#b61.#a42.#b24) *)
    let shallow : (t61 array, _) idx_mut = (.(i).#b61.#a42.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 468;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 468 failed";
  );

  (*****************************)
  (*   t62 = #{ nativeint# }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 469;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 469 failed";
  );
  (* Deepening to (.(i).#a62) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i).#a62) in
    (* from (.(i)) *)
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a62) in
    mark_test_run 470;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 470 failed";
    (* from (.(i).#a62) *)
    let shallow : (t62 array, _) idx_mut = (.(i).#a62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 471;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 471 failed";
  );

  (*************************************)
  (*   t63 = #{ nativeint#; int64# }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 472;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 472 failed";
  );
  (* Deepening to (.(i).#a63) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i).#a63) in
    (* from (.(i)) *)
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a63) in
    mark_test_run 473;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 473 failed";
    (* from (.(i).#a63) *)
    let shallow : (t63 array, _) idx_mut = (.(i).#a63) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 474;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 474 failed";
  );
  (* Deepening to (.(i).#b63) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i).#b63) in
    (* from (.(i)) *)
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b63) in
    mark_test_run 475;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 475 failed";
    (* from (.(i).#b63) *)
    let shallow : (t63 array, _) idx_mut = (.(i).#b63) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 476;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 476 failed";
  );

  (*************************************)
  (*   t64 = #{ nativeint#; int32# }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 477;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 477 failed";
  );
  (* Deepening to (.(i).#a64) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#a64) in
    (* from (.(i)) *)
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a64) in
    mark_test_run 478;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 478 failed";
    (* from (.(i).#a64) *)
    let shallow : (t64 array, _) idx_mut = (.(i).#a64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 479;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 479 failed";
  );
  (* Deepening to (.(i).#b64) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#b64) in
    (* from (.(i)) *)
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b64) in
    mark_test_run 480;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 480 failed";
    (* from (.(i).#b64) *)
    let shallow : (t64 array, _) idx_mut = (.(i).#b64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 481;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 481 failed";
  );

  (*****************************************)
  (*   t65 = #{ nativeint#; nativeint# }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 482;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 482 failed";
  );
  (* Deepening to (.(i).#a65) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i).#a65) in
    (* from (.(i)) *)
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a65) in
    mark_test_run 483;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 483 failed";
    (* from (.(i).#a65) *)
    let shallow : (t65 array, _) idx_mut = (.(i).#a65) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 484;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 484 failed";
  );
  (* Deepening to (.(i).#b65) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i).#b65) in
    (* from (.(i)) *)
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b65) in
    mark_test_run 485;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 485 failed";
    (* from (.(i).#b65) *)
    let shallow : (t65 array, _) idx_mut = (.(i).#b65) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 486;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 486 failed";
  );

  (*****************************)
  (*   t28 = #{ float; int }   *)
  (*****************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 487;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 487 failed";
  );
  (* Deepening to (.(i).#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i).#a28) in
    (* from (.(i)) *)
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 488;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 488 failed";
    (* from (.(i).#a28) *)
    let shallow : (t28 array, _) idx_mut = (.(i).#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 489;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 489 failed";
  );
  (* Deepening to (.(i).#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i).#b28) in
    (* from (.(i)) *)
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 490;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 490 failed";
    (* from (.(i).#b28) *)
    let shallow : (t28 array, _) idx_mut = (.(i).#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 491;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 491 failed";
  );

  (**********************************)
  (*   t66 = #{ float; int; int }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 492;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 492 failed";
  );
  (* Deepening to (.(i).#a66) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#a66) in
    (* from (.(i)) *)
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 493;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 493 failed";
    (* from (.(i).#a66) *)
    let shallow : (t66 array, _) idx_mut = (.(i).#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 494;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 494 failed";
  );
  (* Deepening to (.(i).#b66) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#b66) in
    (* from (.(i)) *)
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b66) in
    mark_test_run 495;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 495 failed";
    (* from (.(i).#b66) *)
    let shallow : (t66 array, _) idx_mut = (.(i).#b66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 496;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 496 failed";
  );
  (* Deepening to (.(i).#c66) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#c66) in
    (* from (.(i)) *)
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c66) in
    mark_test_run 497;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 497 failed";
    (* from (.(i).#c66) *)
    let shallow : (t66 array, _) idx_mut = (.(i).#c66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 498;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 498 failed";
  );

  (************************************)
  (*   t67 = #{ float; int; float }   *)
  (************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 499;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 499 failed";
  );
  (* Deepening to (.(i).#a67) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#a67) in
    (* from (.(i)) *)
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a67) in
    mark_test_run 500;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 500 failed";
    (* from (.(i).#a67) *)
    let shallow : (t67 array, _) idx_mut = (.(i).#a67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 501;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 501 failed";
  );
  (* Deepening to (.(i).#b67) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#b67) in
    (* from (.(i)) *)
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b67) in
    mark_test_run 502;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 502 failed";
    (* from (.(i).#b67) *)
    let shallow : (t67 array, _) idx_mut = (.(i).#b67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 503;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 503 failed";
  );
  (* Deepening to (.(i).#c67) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#c67) in
    (* from (.(i)) *)
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c67) in
    mark_test_run 504;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 504 failed";
    (* from (.(i).#c67) *)
    let shallow : (t67 array, _) idx_mut = (.(i).#c67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 505;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 505 failed";
  );

  (*******************************)
  (*   t68 = #{ float; int64 }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 506;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 506 failed";
  );
  (* Deepening to (.(i).#a68) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i).#a68) in
    (* from (.(i)) *)
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a68) in
    mark_test_run 507;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 507 failed";
    (* from (.(i).#a68) *)
    let shallow : (t68 array, _) idx_mut = (.(i).#a68) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 508;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 508 failed";
  );
  (* Deepening to (.(i).#b68) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i).#b68) in
    (* from (.(i)) *)
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b68) in
    mark_test_run 509;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 509 failed";
    (* from (.(i).#b68) *)
    let shallow : (t68 array, _) idx_mut = (.(i).#b68) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 510;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 510 failed";
  );

  (*******************************)
  (*   t30 = #{ float; float }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 511;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 511 failed";
  );
  (* Deepening to (.(i).#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i).#a30) in
    (* from (.(i)) *)
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 512;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 512 failed";
    (* from (.(i).#a30) *)
    let shallow : (t30 array, _) idx_mut = (.(i).#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 513;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 513 failed";
  );
  (* Deepening to (.(i).#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i).#b30) in
    (* from (.(i)) *)
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 514;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 514 failed";
    (* from (.(i).#b30) *)
    let shallow : (t30 array, _) idx_mut = (.(i).#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 515;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 515 failed";
  );

  (************************************)
  (*   t69 = #{ float; float; int }   *)
  (************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 516;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 516 failed";
  );
  (* Deepening to (.(i).#a69) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#a69) in
    (* from (.(i)) *)
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a69) in
    mark_test_run 517;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 517 failed";
    (* from (.(i).#a69) *)
    let shallow : (t69 array, _) idx_mut = (.(i).#a69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 518;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 518 failed";
  );
  (* Deepening to (.(i).#b69) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#b69) in
    (* from (.(i)) *)
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b69) in
    mark_test_run 519;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 519 failed";
    (* from (.(i).#b69) *)
    let shallow : (t69 array, _) idx_mut = (.(i).#b69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 520;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 520 failed";
  );
  (* Deepening to (.(i).#c69) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#c69) in
    (* from (.(i)) *)
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c69) in
    mark_test_run 521;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 521 failed";
    (* from (.(i).#c69) *)
    let shallow : (t69 array, _) idx_mut = (.(i).#c69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 522;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 522 failed";
  );

  (**************************************)
  (*   t70 = #{ float; float; float }   *)
  (**************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 523;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 523 failed";
  );
  (* Deepening to (.(i).#a70) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#a70) in
    (* from (.(i)) *)
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a70) in
    mark_test_run 524;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 524 failed";
    (* from (.(i).#a70) *)
    let shallow : (t70 array, _) idx_mut = (.(i).#a70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 525;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 525 failed";
  );
  (* Deepening to (.(i).#b70) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#b70) in
    (* from (.(i)) *)
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b70) in
    mark_test_run 526;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 526 failed";
    (* from (.(i).#b70) *)
    let shallow : (t70 array, _) idx_mut = (.(i).#b70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 527;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 527 failed";
  );
  (* Deepening to (.(i).#c70) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#c70) in
    (* from (.(i)) *)
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c70) in
    mark_test_run 528;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 528 failed";
    (* from (.(i).#c70) *)
    let shallow : (t70 array, _) idx_mut = (.(i).#c70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 529;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 529 failed";
  );

  (**********************************)
  (*   t32 = #{ float; #{ int } }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 530;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 530 failed";
  );
  (* Deepening to (.(i).#a32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i).#a32) in
    (* from (.(i)) *)
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a32) in
    mark_test_run 531;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 531 failed";
    (* from (.(i).#a32) *)
    let shallow : (t32 array, _) idx_mut = (.(i).#a32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 532;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 532 failed";
  );
  (* Deepening to (.(i).#b32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i).#b32) in
    (* from (.(i)) *)
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b32) in
    mark_test_run 533;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 533 failed";
    (* from (.(i).#b32) *)
    let shallow : (t32 array, _) idx_mut = (.(i).#b32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 534;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 534 failed";
  );
  (* Deepening to (.(i).#b32.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i).#b32.#a0) in
    (* from (.(i)) *)
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b32.#a0) in
    mark_test_run 535;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 535 failed";
    (* from (.(i).#b32) *)
    let shallow : (t32 array, _) idx_mut = (.(i).#b32) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 536;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 536 failed";
    (* from (.(i).#b32.#a0) *)
    let shallow : (t32 array, _) idx_mut = (.(i).#b32.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 537;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 537 failed";
  );

  (***************************************)
  (*   t71 = #{ float; #{ int; int } }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 538;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 538 failed";
  );
  (* Deepening to (.(i).#a71) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#a71) in
    (* from (.(i)) *)
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a71) in
    mark_test_run 539;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 539 failed";
    (* from (.(i).#a71) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#a71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 540;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 540 failed";
  );
  (* Deepening to (.(i).#b71) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#b71) in
    (* from (.(i)) *)
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b71) in
    mark_test_run 541;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 541 failed";
    (* from (.(i).#b71) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#b71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 542;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 542 failed";
  );
  (* Deepening to (.(i).#b71.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#b71.#a1) in
    (* from (.(i)) *)
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b71.#a1) in
    mark_test_run 543;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 543 failed";
    (* from (.(i).#b71) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#b71) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 544;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 544 failed";
    (* from (.(i).#b71.#a1) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#b71.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 545;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 545 failed";
  );
  (* Deepening to (.(i).#b71.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#b71.#b1) in
    (* from (.(i)) *)
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b71.#b1) in
    mark_test_run 546;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 546 failed";
    (* from (.(i).#b71) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#b71) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 547;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 547 failed";
    (* from (.(i).#b71.#b1) *)
    let shallow : (t71 array, _) idx_mut = (.(i).#b71.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 548;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 548 failed";
  );

  (*****************************************)
  (*   t72 = #{ float; #{ int; float } }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 549;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 549 failed";
  );
  (* Deepening to (.(i).#a72) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#a72) in
    (* from (.(i)) *)
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a72) in
    mark_test_run 550;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 550 failed";
    (* from (.(i).#a72) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#a72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 551;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 551 failed";
  );
  (* Deepening to (.(i).#b72) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#b72) in
    (* from (.(i)) *)
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b72) in
    mark_test_run 552;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 552 failed";
    (* from (.(i).#b72) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#b72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 553;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 553 failed";
  );
  (* Deepening to (.(i).#b72.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#b72.#a10) in
    (* from (.(i)) *)
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b72.#a10) in
    mark_test_run 554;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 554 failed";
    (* from (.(i).#b72) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#b72) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 555;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 555 failed";
    (* from (.(i).#b72.#a10) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#b72.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 556;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 556 failed";
  );
  (* Deepening to (.(i).#b72.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#b72.#b10) in
    (* from (.(i)) *)
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b72.#b10) in
    mark_test_run 557;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 557 failed";
    (* from (.(i).#b72) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#b72) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 558;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 558 failed";
    (* from (.(i).#b72.#b10) *)
    let shallow : (t72 array, _) idx_mut = (.(i).#b72.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 559;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 559 failed";
  );

  (********************************************)
  (*   t73 = #{ float; #{ int; #{ int } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 560;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 560 failed";
  );
  (* Deepening to (.(i).#a73) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#a73) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a73) in
    mark_test_run 561;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 561 failed";
    (* from (.(i).#a73) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#a73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 562;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 562 failed";
  );
  (* Deepening to (.(i).#b73) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#b73) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b73) in
    mark_test_run 563;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 563 failed";
    (* from (.(i).#b73) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 564;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 564 failed";
  );
  (* Deepening to (.(i).#b73.#a13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#b73.#a13) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b73.#a13) in
    mark_test_run 565;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 565 failed";
    (* from (.(i).#b73) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73) in
    let deepened = (.idx_mut(shallow).#a13) in
    mark_test_run 566;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 566 failed";
    (* from (.(i).#b73.#a13) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73.#a13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 567;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 567 failed";
  );
  (* Deepening to (.(i).#b73.#b13) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#b73.#b13) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b73.#b13) in
    mark_test_run 568;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 568 failed";
    (* from (.(i).#b73) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73) in
    let deepened = (.idx_mut(shallow).#b13) in
    mark_test_run 569;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 569 failed";
    (* from (.(i).#b73.#b13) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73.#b13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 570;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 570 failed";
  );
  (* Deepening to (.(i).#b73.#b13.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#b73.#b13.#a0) in
    (* from (.(i)) *)
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b73.#b13.#a0) in
    mark_test_run 571;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 571 failed";
    (* from (.(i).#b73) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73) in
    let deepened = (.idx_mut(shallow).#b13.#a0) in
    mark_test_run 572;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 572 failed";
    (* from (.(i).#b73.#b13) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73.#b13) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 573;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 573 failed";
    (* from (.(i).#b73.#b13.#a0) *)
    let shallow : (t73 array, _) idx_mut = (.(i).#b73.#b13.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 574;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 574 failed";
  );

  (**********************************************)
  (*   t74 = #{ float; #{ int; #{ float } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 575;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 575 failed";
  );
  (* Deepening to (.(i).#a74) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#a74) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a74) in
    mark_test_run 576;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 576 failed";
    (* from (.(i).#a74) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#a74) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 577;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 577 failed";
  );
  (* Deepening to (.(i).#b74) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#b74) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b74) in
    mark_test_run 578;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 578 failed";
    (* from (.(i).#b74) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 579;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 579 failed";
  );
  (* Deepening to (.(i).#b74.#a22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#b74.#a22) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b74.#a22) in
    mark_test_run 580;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 580 failed";
    (* from (.(i).#b74) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 581;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 581 failed";
    (* from (.(i).#b74.#a22) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 582;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 582 failed";
  );
  (* Deepening to (.(i).#b74.#b22) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#b74.#b22) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b74.#b22) in
    mark_test_run 583;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 583 failed";
    (* from (.(i).#b74) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 584;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 584 failed";
    (* from (.(i).#b74.#b22) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 585;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 585 failed";
  );
  (* Deepening to (.(i).#b74.#b22.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#b74.#b22.#a21) in
    (* from (.(i)) *)
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b74.#b22.#a21) in
    mark_test_run 586;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 586 failed";
    (* from (.(i).#b74) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74) in
    let deepened = (.idx_mut(shallow).#b22.#a21) in
    mark_test_run 587;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 587 failed";
    (* from (.(i).#b74.#b22) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74.#b22) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 588;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 588 failed";
    (* from (.(i).#b74.#b22.#a21) *)
    let shallow : (t74 array, _) idx_mut = (.(i).#b74.#b22.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 589;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 589 failed";
  );

  (************************************)
  (*   t34 = #{ float; #{ float } }   *)
  (************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 590;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 590 failed";
  );
  (* Deepening to (.(i).#a34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i).#a34) in
    (* from (.(i)) *)
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 591;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 591 failed";
    (* from (.(i).#a34) *)
    let shallow : (t34 array, _) idx_mut = (.(i).#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 592;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 592 failed";
  );
  (* Deepening to (.(i).#b34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i).#b34) in
    (* from (.(i)) *)
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 593;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 593 failed";
    (* from (.(i).#b34) *)
    let shallow : (t34 array, _) idx_mut = (.(i).#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 594;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 594 failed";
  );
  (* Deepening to (.(i).#b34.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i).#b34.#a21) in
    (* from (.(i)) *)
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b34.#a21) in
    mark_test_run 595;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 595 failed";
    (* from (.(i).#b34) *)
    let shallow : (t34 array, _) idx_mut = (.(i).#b34) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 596;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 596 failed";
    (* from (.(i).#b34.#a21) *)
    let shallow : (t34 array, _) idx_mut = (.(i).#b34.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 597;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 597 failed";
  );

  (*****************************************)
  (*   t75 = #{ float; #{ float; int } }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 598;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 598 failed";
  );
  (* Deepening to (.(i).#a75) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#a75) in
    (* from (.(i)) *)
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a75) in
    mark_test_run 599;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 599 failed";
    (* from (.(i).#a75) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#a75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 600;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 600 failed";
  );
  (* Deepening to (.(i).#b75) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#b75) in
    (* from (.(i)) *)
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b75) in
    mark_test_run 601;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 601 failed";
    (* from (.(i).#b75) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#b75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 602;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 602 failed";
  );
  (* Deepening to (.(i).#b75.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#b75.#a28) in
    (* from (.(i)) *)
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b75.#a28) in
    mark_test_run 603;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 603 failed";
    (* from (.(i).#b75) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#b75) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 604;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 604 failed";
    (* from (.(i).#b75.#a28) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#b75.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 605;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 605 failed";
  );
  (* Deepening to (.(i).#b75.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#b75.#b28) in
    (* from (.(i)) *)
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b75.#b28) in
    mark_test_run 606;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 606 failed";
    (* from (.(i).#b75) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#b75) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 607;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 607 failed";
    (* from (.(i).#b75.#b28) *)
    let shallow : (t75 array, _) idx_mut = (.(i).#b75.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 608;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 608 failed";
  );

  (*******************************************)
  (*   t76 = #{ float; #{ float; float } }   *)
  (*******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 609;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 609 failed";
  );
  (* Deepening to (.(i).#a76) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#a76) in
    (* from (.(i)) *)
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a76) in
    mark_test_run 610;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 610 failed";
    (* from (.(i).#a76) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#a76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 611;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 611 failed";
  );
  (* Deepening to (.(i).#b76) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#b76) in
    (* from (.(i)) *)
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b76) in
    mark_test_run 612;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 612 failed";
    (* from (.(i).#b76) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#b76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 613;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 613 failed";
  );
  (* Deepening to (.(i).#b76.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#b76.#a30) in
    (* from (.(i)) *)
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b76.#a30) in
    mark_test_run 614;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 614 failed";
    (* from (.(i).#b76) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#b76) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 615;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 615 failed";
    (* from (.(i).#b76.#a30) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#b76.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 616;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 616 failed";
  );
  (* Deepening to (.(i).#b76.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#b76.#b30) in
    (* from (.(i)) *)
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b76.#b30) in
    mark_test_run 617;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 617 failed";
    (* from (.(i).#b76) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#b76) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 618;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 618 failed";
    (* from (.(i).#b76.#b30) *)
    let shallow : (t76 array, _) idx_mut = (.(i).#b76.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 619;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 619 failed";
  );

  (**********************************************)
  (*   t77 = #{ float; #{ float; #{ int } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 620;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 620 failed";
  );
  (* Deepening to (.(i).#a77) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#a77) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a77) in
    mark_test_run 621;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 621 failed";
    (* from (.(i).#a77) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#a77) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 622;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 622 failed";
  );
  (* Deepening to (.(i).#b77) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#b77) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b77) in
    mark_test_run 623;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 623 failed";
    (* from (.(i).#b77) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 624;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 624 failed";
  );
  (* Deepening to (.(i).#b77.#a32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#b77.#a32) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b77.#a32) in
    mark_test_run 625;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 625 failed";
    (* from (.(i).#b77) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77) in
    let deepened = (.idx_mut(shallow).#a32) in
    mark_test_run 626;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 626 failed";
    (* from (.(i).#b77.#a32) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77.#a32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 627;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 627 failed";
  );
  (* Deepening to (.(i).#b77.#b32) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#b77.#b32) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b77.#b32) in
    mark_test_run 628;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 628 failed";
    (* from (.(i).#b77) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77) in
    let deepened = (.idx_mut(shallow).#b32) in
    mark_test_run 629;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 629 failed";
    (* from (.(i).#b77.#b32) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77.#b32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 630;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 630 failed";
  );
  (* Deepening to (.(i).#b77.#b32.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#b77.#b32.#a0) in
    (* from (.(i)) *)
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b77.#b32.#a0) in
    mark_test_run 631;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 631 failed";
    (* from (.(i).#b77) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77) in
    let deepened = (.idx_mut(shallow).#b32.#a0) in
    mark_test_run 632;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 632 failed";
    (* from (.(i).#b77.#b32) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77.#b32) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 633;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 633 failed";
    (* from (.(i).#b77.#b32.#a0) *)
    let shallow : (t77 array, _) idx_mut = (.(i).#b77.#b32.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 634;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 634 failed";
  );

  (************************************************)
  (*   t78 = #{ float; #{ float; #{ float } } }   *)
  (************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 635;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 635 failed";
  );
  (* Deepening to (.(i).#a78) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#a78) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a78) in
    mark_test_run 636;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 636 failed";
    (* from (.(i).#a78) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#a78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 637;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 637 failed";
  );
  (* Deepening to (.(i).#b78) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#b78) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b78) in
    mark_test_run 638;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 638 failed";
    (* from (.(i).#b78) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 639;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 639 failed";
  );
  (* Deepening to (.(i).#b78.#a34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#b78.#a34) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b78.#a34) in
    mark_test_run 640;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 640 failed";
    (* from (.(i).#b78) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 641;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 641 failed";
    (* from (.(i).#b78.#a34) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78.#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 642;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 642 failed";
  );
  (* Deepening to (.(i).#b78.#b34) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#b78.#b34) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b78.#b34) in
    mark_test_run 643;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 643 failed";
    (* from (.(i).#b78) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 644;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 644 failed";
    (* from (.(i).#b78.#b34) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78.#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 645;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 645 failed";
  );
  (* Deepening to (.(i).#b78.#b34.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#b78.#b34.#a21) in
    (* from (.(i)) *)
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b78.#b34.#a21) in
    mark_test_run 646;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 646 failed";
    (* from (.(i).#b78) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78) in
    let deepened = (.idx_mut(shallow).#b34.#a21) in
    mark_test_run 647;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 647 failed";
    (* from (.(i).#b78.#b34) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78.#b34) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 648;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 648 failed";
    (* from (.(i).#b78.#b34.#a21) *)
    let shallow : (t78 array, _) idx_mut = (.(i).#b78.#b34.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 649;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 649 failed";
  );

  (********************************************)
  (*   t79 = #{ float; #{ #{ int; int } } }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 650;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 650 failed";
  );
  (* Deepening to (.(i).#a79) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#a79) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a79) in
    mark_test_run 651;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 651 failed";
    (* from (.(i).#a79) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#a79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 652;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 652 failed";
  );
  (* Deepening to (.(i).#b79) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#b79) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b79) in
    mark_test_run 653;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 653 failed";
    (* from (.(i).#b79) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 654;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 654 failed";
  );
  (* Deepening to (.(i).#b79.#a36) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#b79.#a36) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b79.#a36) in
    mark_test_run 655;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 655 failed";
    (* from (.(i).#b79) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 656;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 656 failed";
    (* from (.(i).#b79.#a36) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 657;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 657 failed";
  );
  (* Deepening to (.(i).#b79.#a36.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#b79.#a36.#a1) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b79.#a36.#a1) in
    mark_test_run 658;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 658 failed";
    (* from (.(i).#b79) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79) in
    let deepened = (.idx_mut(shallow).#a36.#a1) in
    mark_test_run 659;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 659 failed";
    (* from (.(i).#b79.#a36) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79.#a36) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 660;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 660 failed";
    (* from (.(i).#b79.#a36.#a1) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79.#a36.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 661;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 661 failed";
  );
  (* Deepening to (.(i).#b79.#a36.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#b79.#a36.#b1) in
    (* from (.(i)) *)
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b79.#a36.#b1) in
    mark_test_run 662;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 662 failed";
    (* from (.(i).#b79) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79) in
    let deepened = (.idx_mut(shallow).#a36.#b1) in
    mark_test_run 663;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 663 failed";
    (* from (.(i).#b79.#a36) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79.#a36) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 664;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 664 failed";
    (* from (.(i).#b79.#a36.#b1) *)
    let shallow : (t79 array, _) idx_mut = (.(i).#b79.#a36.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 665;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 665 failed";
  );

  (**********************************************)
  (*   t80 = #{ float; #{ #{ int; float } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 666;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 666 failed";
  );
  (* Deepening to (.(i).#a80) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i).#a80) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a80) in
    mark_test_run 667;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 667 failed";
    (* from (.(i).#a80) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#a80) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 668;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 668 failed";
  );
  (* Deepening to (.(i).#b80) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i).#b80) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b80) in
    mark_test_run 669;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 669 failed";
    (* from (.(i).#b80) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 670;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 670 failed";
  );
  (* Deepening to (.(i).#b80.#a40) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i).#b80.#a40) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b80.#a40) in
    mark_test_run 671;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 671 failed";
    (* from (.(i).#b80) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 672;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 672 failed";
    (* from (.(i).#b80.#a40) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 673;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 673 failed";
  );
  (* Deepening to (.(i).#b80.#a40.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i).#b80.#a40.#a10) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b80.#a40.#a10) in
    mark_test_run 674;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 674 failed";
    (* from (.(i).#b80) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80) in
    let deepened = (.idx_mut(shallow).#a40.#a10) in
    mark_test_run 675;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 675 failed";
    (* from (.(i).#b80.#a40) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80.#a40) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 676;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 676 failed";
    (* from (.(i).#b80.#a40.#a10) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80.#a40.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 677;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 677 failed";
  );
  (* Deepening to (.(i).#b80.#a40.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t80 array, _) idx_mut = (.(i).#b80.#a40.#b10) in
    (* from (.(i)) *)
    let shallow : (t80 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b80.#a40.#b10) in
    mark_test_run 678;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 678 failed";
    (* from (.(i).#b80) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80) in
    let deepened = (.idx_mut(shallow).#a40.#b10) in
    mark_test_run 679;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 679 failed";
    (* from (.(i).#b80.#a40) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80.#a40) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 680;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 680 failed";
    (* from (.(i).#b80.#a40.#b10) *)
    let shallow : (t80 array, _) idx_mut = (.(i).#b80.#a40.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 681;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 681 failed";
  );

  (**********************************************)
  (*   t81 = #{ float; #{ #{ float; int } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 682;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 682 failed";
  );
  (* Deepening to (.(i).#a81) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i).#a81) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a81) in
    mark_test_run 683;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 683 failed";
    (* from (.(i).#a81) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#a81) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 684;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 684 failed";
  );
  (* Deepening to (.(i).#b81) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i).#b81) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b81) in
    mark_test_run 685;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 685 failed";
    (* from (.(i).#b81) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 686;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 686 failed";
  );
  (* Deepening to (.(i).#b81.#a44) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i).#b81.#a44) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b81.#a44) in
    mark_test_run 687;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 687 failed";
    (* from (.(i).#b81) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 688;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 688 failed";
    (* from (.(i).#b81.#a44) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81.#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 689;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 689 failed";
  );
  (* Deepening to (.(i).#b81.#a44.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i).#b81.#a44.#a28) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b81.#a44.#a28) in
    mark_test_run 690;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 690 failed";
    (* from (.(i).#b81) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81) in
    let deepened = (.idx_mut(shallow).#a44.#a28) in
    mark_test_run 691;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 691 failed";
    (* from (.(i).#b81.#a44) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81.#a44) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 692;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 692 failed";
    (* from (.(i).#b81.#a44.#a28) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81.#a44.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 693;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 693 failed";
  );
  (* Deepening to (.(i).#b81.#a44.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t81 array, _) idx_mut = (.(i).#b81.#a44.#b28) in
    (* from (.(i)) *)
    let shallow : (t81 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b81.#a44.#b28) in
    mark_test_run 694;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 694 failed";
    (* from (.(i).#b81) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81) in
    let deepened = (.idx_mut(shallow).#a44.#b28) in
    mark_test_run 695;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 695 failed";
    (* from (.(i).#b81.#a44) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81.#a44) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 696;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 696 failed";
    (* from (.(i).#b81.#a44.#b28) *)
    let shallow : (t81 array, _) idx_mut = (.(i).#b81.#a44.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 697;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 697 failed";
  );

  (************************************************)
  (*   t82 = #{ float; #{ #{ float; float } } }   *)
  (************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 698;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 698 failed";
  );
  (* Deepening to (.(i).#a82) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i).#a82) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a82) in
    mark_test_run 699;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 699 failed";
    (* from (.(i).#a82) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#a82) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 700;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 700 failed";
  );
  (* Deepening to (.(i).#b82) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i).#b82) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b82) in
    mark_test_run 701;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 701 failed";
    (* from (.(i).#b82) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 702;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 702 failed";
  );
  (* Deepening to (.(i).#b82.#a46) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i).#b82.#a46) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b82.#a46) in
    mark_test_run 703;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 703 failed";
    (* from (.(i).#b82) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 704;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 704 failed";
    (* from (.(i).#b82.#a46) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82.#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 705;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 705 failed";
  );
  (* Deepening to (.(i).#b82.#a46.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i).#b82.#a46.#a30) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b82.#a46.#a30) in
    mark_test_run 706;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 706 failed";
    (* from (.(i).#b82) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82) in
    let deepened = (.idx_mut(shallow).#a46.#a30) in
    mark_test_run 707;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 707 failed";
    (* from (.(i).#b82.#a46) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82.#a46) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 708;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 708 failed";
    (* from (.(i).#b82.#a46.#a30) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82.#a46.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 709;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 709 failed";
  );
  (* Deepening to (.(i).#b82.#a46.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t82 array, _) idx_mut = (.(i).#b82.#a46.#b30) in
    (* from (.(i)) *)
    let shallow : (t82 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b82.#a46.#b30) in
    mark_test_run 710;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 710 failed";
    (* from (.(i).#b82) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82) in
    let deepened = (.idx_mut(shallow).#a46.#b30) in
    mark_test_run 711;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 711 failed";
    (* from (.(i).#b82.#a46) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82.#a46) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 712;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 712 failed";
    (* from (.(i).#b82.#a46.#b30) *)
    let shallow : (t82 array, _) idx_mut = (.(i).#b82.#a46.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 713;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 713 failed";
  );

  (*************************)
  (*   t83 = #{ float# }   *)
  (*************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t83 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t83 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 714;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 714 failed";
  );
  (* Deepening to (.(i).#a83) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t83 array, _) idx_mut = (.(i).#a83) in
    (* from (.(i)) *)
    let shallow : (t83 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a83) in
    mark_test_run 715;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 715 failed";
    (* from (.(i).#a83) *)
    let shallow : (t83 array, _) idx_mut = (.(i).#a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 716;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 716 failed";
  );

  (*********************************)
  (*   t84 = #{ float#; float# }   *)
  (*********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t84 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t84 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 717;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 717 failed";
  );
  (* Deepening to (.(i).#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t84 array, _) idx_mut = (.(i).#a84) in
    (* from (.(i)) *)
    let shallow : (t84 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 718;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 718 failed";
    (* from (.(i).#a84) *)
    let shallow : (t84 array, _) idx_mut = (.(i).#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 719;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 719 failed";
  );
  (* Deepening to (.(i).#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t84 array, _) idx_mut = (.(i).#b84) in
    (* from (.(i)) *)
    let shallow : (t84 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 720;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 720 failed";
    (* from (.(i).#b84) *)
    let shallow : (t84 array, _) idx_mut = (.(i).#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 721;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 721 failed";
  );

  (*****************************************)
  (*   t85 = #{ float#; float#; float# }   *)
  (*****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t85 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t85 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 722;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 722 failed";
  );
  (* Deepening to (.(i).#a85) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t85 array, _) idx_mut = (.(i).#a85) in
    (* from (.(i)) *)
    let shallow : (t85 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a85) in
    mark_test_run 723;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 723 failed";
    (* from (.(i).#a85) *)
    let shallow : (t85 array, _) idx_mut = (.(i).#a85) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 724;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 724 failed";
  );
  (* Deepening to (.(i).#b85) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t85 array, _) idx_mut = (.(i).#b85) in
    (* from (.(i)) *)
    let shallow : (t85 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b85) in
    mark_test_run 725;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 725 failed";
    (* from (.(i).#b85) *)
    let shallow : (t85 array, _) idx_mut = (.(i).#b85) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 726;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 726 failed";
  );
  (* Deepening to (.(i).#c85) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t85 array, _) idx_mut = (.(i).#c85) in
    (* from (.(i)) *)
    let shallow : (t85 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c85) in
    mark_test_run 727;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 727 failed";
    (* from (.(i).#c85) *)
    let shallow : (t85 array, _) idx_mut = (.(i).#c85) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 728;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 728 failed";
  );

  (**************************************)
  (*   t86 = #{ float#; #{ float# } }   *)
  (**************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t86 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t86 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 729;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 729 failed";
  );
  (* Deepening to (.(i).#a86) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t86 array, _) idx_mut = (.(i).#a86) in
    (* from (.(i)) *)
    let shallow : (t86 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a86) in
    mark_test_run 730;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 730 failed";
    (* from (.(i).#a86) *)
    let shallow : (t86 array, _) idx_mut = (.(i).#a86) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 731;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 731 failed";
  );
  (* Deepening to (.(i).#b86) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t86 array, _) idx_mut = (.(i).#b86) in
    (* from (.(i)) *)
    let shallow : (t86 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b86) in
    mark_test_run 732;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 732 failed";
    (* from (.(i).#b86) *)
    let shallow : (t86 array, _) idx_mut = (.(i).#b86) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 733;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 733 failed";
  );
  (* Deepening to (.(i).#b86.#a83) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t86 array, _) idx_mut = (.(i).#b86.#a83) in
    (* from (.(i)) *)
    let shallow : (t86 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b86.#a83) in
    mark_test_run 734;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 734 failed";
    (* from (.(i).#b86) *)
    let shallow : (t86 array, _) idx_mut = (.(i).#b86) in
    let deepened = (.idx_mut(shallow).#a83) in
    mark_test_run 735;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 735 failed";
    (* from (.(i).#b86.#a83) *)
    let shallow : (t86 array, _) idx_mut = (.(i).#b86.#a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 736;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 736 failed";
  );

  (**********************************************)
  (*   t87 = #{ float#; #{ float#; float# } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t87 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t87 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 737;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 737 failed";
  );
  (* Deepening to (.(i).#a87) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t87 array, _) idx_mut = (.(i).#a87) in
    (* from (.(i)) *)
    let shallow : (t87 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a87) in
    mark_test_run 738;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 738 failed";
    (* from (.(i).#a87) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#a87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 739;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 739 failed";
  );
  (* Deepening to (.(i).#b87) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t87 array, _) idx_mut = (.(i).#b87) in
    (* from (.(i)) *)
    let shallow : (t87 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b87) in
    mark_test_run 740;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 740 failed";
    (* from (.(i).#b87) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#b87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 741;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 741 failed";
  );
  (* Deepening to (.(i).#b87.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t87 array, _) idx_mut = (.(i).#b87.#a84) in
    (* from (.(i)) *)
    let shallow : (t87 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b87.#a84) in
    mark_test_run 742;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 742 failed";
    (* from (.(i).#b87) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#b87) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 743;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 743 failed";
    (* from (.(i).#b87.#a84) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#b87.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 744;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 744 failed";
  );
  (* Deepening to (.(i).#b87.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t87 array, _) idx_mut = (.(i).#b87.#b84) in
    (* from (.(i)) *)
    let shallow : (t87 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b87.#b84) in
    mark_test_run 745;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 745 failed";
    (* from (.(i).#b87) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#b87) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 746;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 746 failed";
    (* from (.(i).#b87.#b84) *)
    let shallow : (t87 array, _) idx_mut = (.(i).#b87.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 747;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 747 failed";
  );

  (***************************************************)
  (*   t88 = #{ float#; #{ float#; #{ float# } } }   *)
  (***************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 748;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 748 failed";
  );
  (* Deepening to (.(i).#a88) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i).#a88) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a88) in
    mark_test_run 749;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 749 failed";
    (* from (.(i).#a88) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#a88) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 750;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 750 failed";
  );
  (* Deepening to (.(i).#b88) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i).#b88) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b88) in
    mark_test_run 751;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 751 failed";
    (* from (.(i).#b88) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 752;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 752 failed";
  );
  (* Deepening to (.(i).#b88.#a86) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i).#b88.#a86) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b88.#a86) in
    mark_test_run 753;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 753 failed";
    (* from (.(i).#b88) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88) in
    let deepened = (.idx_mut(shallow).#a86) in
    mark_test_run 754;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 754 failed";
    (* from (.(i).#b88.#a86) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88.#a86) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 755;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 755 failed";
  );
  (* Deepening to (.(i).#b88.#b86) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i).#b88.#b86) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b88.#b86) in
    mark_test_run 756;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 756 failed";
    (* from (.(i).#b88) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88) in
    let deepened = (.idx_mut(shallow).#b86) in
    mark_test_run 757;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 757 failed";
    (* from (.(i).#b88.#b86) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88.#b86) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 758;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 758 failed";
  );
  (* Deepening to (.(i).#b88.#b86.#a83) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t88 array, _) idx_mut = (.(i).#b88.#b86.#a83) in
    (* from (.(i)) *)
    let shallow : (t88 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b88.#b86.#a83) in
    mark_test_run 759;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 759 failed";
    (* from (.(i).#b88) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88) in
    let deepened = (.idx_mut(shallow).#b86.#a83) in
    mark_test_run 760;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 760 failed";
    (* from (.(i).#b88.#b86) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88.#b86) in
    let deepened = (.idx_mut(shallow).#a83) in
    mark_test_run 761;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 761 failed";
    (* from (.(i).#b88.#b86.#a83) *)
    let shallow : (t88 array, _) idx_mut = (.(i).#b88.#b86.#a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 762;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 762 failed";
  );

  (***************************************************)
  (*   t90 = #{ float#; #{ #{ float#; float# } } }   *)
  (***************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 763;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 763 failed";
  );
  (* Deepening to (.(i).#a90) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i).#a90) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a90) in
    mark_test_run 764;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 764 failed";
    (* from (.(i).#a90) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#a90) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 765;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 765 failed";
  );
  (* Deepening to (.(i).#b90) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i).#b90) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b90) in
    mark_test_run 766;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 766 failed";
    (* from (.(i).#b90) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 767;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 767 failed";
  );
  (* Deepening to (.(i).#b90.#a89) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i).#b90.#a89) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b90.#a89) in
    mark_test_run 768;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 768 failed";
    (* from (.(i).#b90) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90) in
    let deepened = (.idx_mut(shallow).#a89) in
    mark_test_run 769;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 769 failed";
    (* from (.(i).#b90.#a89) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90.#a89) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 770;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 770 failed";
  );
  (* Deepening to (.(i).#b90.#a89.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i).#b90.#a89.#a84) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b90.#a89.#a84) in
    mark_test_run 771;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 771 failed";
    (* from (.(i).#b90) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90) in
    let deepened = (.idx_mut(shallow).#a89.#a84) in
    mark_test_run 772;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 772 failed";
    (* from (.(i).#b90.#a89) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90.#a89) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 773;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 773 failed";
    (* from (.(i).#b90.#a89.#a84) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90.#a89.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 774;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 774 failed";
  );
  (* Deepening to (.(i).#b90.#a89.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t90 array, _) idx_mut = (.(i).#b90.#a89.#b84) in
    (* from (.(i)) *)
    let shallow : (t90 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b90.#a89.#b84) in
    mark_test_run 775;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 775 failed";
    (* from (.(i).#b90) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90) in
    let deepened = (.idx_mut(shallow).#a89.#b84) in
    mark_test_run 776;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 776 failed";
    (* from (.(i).#b90.#a89) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90.#a89) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 777;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 777 failed";
    (* from (.(i).#b90.#a89.#b84) *)
    let shallow : (t90 array, _) idx_mut = (.(i).#b90.#a89.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 778;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 778 failed";
  );

  (***************************)
  (*   t91 = #{ #{ int } }   *)
  (***************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t91 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t91 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 779;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 779 failed";
  );
  (* Deepening to (.(i).#a91) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t91 array, _) idx_mut = (.(i).#a91) in
    (* from (.(i)) *)
    let shallow : (t91 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a91) in
    mark_test_run 780;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 780 failed";
    (* from (.(i).#a91) *)
    let shallow : (t91 array, _) idx_mut = (.(i).#a91) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 781;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 781 failed";
  );
  (* Deepening to (.(i).#a91.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t91 array, _) idx_mut = (.(i).#a91.#a0) in
    (* from (.(i)) *)
    let shallow : (t91 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a91.#a0) in
    mark_test_run 782;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 782 failed";
    (* from (.(i).#a91) *)
    let shallow : (t91 array, _) idx_mut = (.(i).#a91) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 783;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 783 failed";
    (* from (.(i).#a91.#a0) *)
    let shallow : (t91 array, _) idx_mut = (.(i).#a91.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 784;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 784 failed";
  );

  (********************************)
  (*   t92 = #{ #{ int }; int }   *)
  (********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t92 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t92 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 785;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 785 failed";
  );
  (* Deepening to (.(i).#a92) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t92 array, _) idx_mut = (.(i).#a92) in
    (* from (.(i)) *)
    let shallow : (t92 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a92) in
    mark_test_run 786;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 786 failed";
    (* from (.(i).#a92) *)
    let shallow : (t92 array, _) idx_mut = (.(i).#a92) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 787;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 787 failed";
  );
  (* Deepening to (.(i).#b92) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t92 array, _) idx_mut = (.(i).#b92) in
    (* from (.(i)) *)
    let shallow : (t92 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b92) in
    mark_test_run 788;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 788 failed";
    (* from (.(i).#b92) *)
    let shallow : (t92 array, _) idx_mut = (.(i).#b92) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 789;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 789 failed";
  );
  (* Deepening to (.(i).#a92.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t92 array, _) idx_mut = (.(i).#a92.#a0) in
    (* from (.(i)) *)
    let shallow : (t92 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a92.#a0) in
    mark_test_run 790;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 790 failed";
    (* from (.(i).#a92) *)
    let shallow : (t92 array, _) idx_mut = (.(i).#a92) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 791;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 791 failed";
    (* from (.(i).#a92.#a0) *)
    let shallow : (t92 array, _) idx_mut = (.(i).#a92.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 792;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 792 failed";
  );

  (***********************************)
  (*   t93 = #{ #{ int }; int32# }   *)
  (***********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t93 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t93 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 793;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 793 failed";
  );
  (* Deepening to (.(i).#a93) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t93 array, _) idx_mut = (.(i).#a93) in
    (* from (.(i)) *)
    let shallow : (t93 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a93) in
    mark_test_run 794;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 794 failed";
    (* from (.(i).#a93) *)
    let shallow : (t93 array, _) idx_mut = (.(i).#a93) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 795;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 795 failed";
  );
  (* Deepening to (.(i).#b93) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t93 array, _) idx_mut = (.(i).#b93) in
    (* from (.(i)) *)
    let shallow : (t93 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b93) in
    mark_test_run 796;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 796 failed";
    (* from (.(i).#b93) *)
    let shallow : (t93 array, _) idx_mut = (.(i).#b93) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 797;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 797 failed";
  );
  (* Deepening to (.(i).#a93.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t93 array, _) idx_mut = (.(i).#a93.#a0) in
    (* from (.(i)) *)
    let shallow : (t93 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a93.#a0) in
    mark_test_run 798;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 798 failed";
    (* from (.(i).#a93) *)
    let shallow : (t93 array, _) idx_mut = (.(i).#a93) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 799;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 799 failed";
    (* from (.(i).#a93.#a0) *)
    let shallow : (t93 array, _) idx_mut = (.(i).#a93.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 800;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 800 failed";
  );

  (**********************************)
  (*   t94 = #{ #{ int }; float }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t94 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t94 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 801;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 801 failed";
  );
  (* Deepening to (.(i).#a94) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t94 array, _) idx_mut = (.(i).#a94) in
    (* from (.(i)) *)
    let shallow : (t94 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a94) in
    mark_test_run 802;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 802 failed";
    (* from (.(i).#a94) *)
    let shallow : (t94 array, _) idx_mut = (.(i).#a94) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 803;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 803 failed";
  );
  (* Deepening to (.(i).#b94) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t94 array, _) idx_mut = (.(i).#b94) in
    (* from (.(i)) *)
    let shallow : (t94 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b94) in
    mark_test_run 804;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 804 failed";
    (* from (.(i).#b94) *)
    let shallow : (t94 array, _) idx_mut = (.(i).#b94) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 805;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 805 failed";
  );
  (* Deepening to (.(i).#a94.#a0) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t94 array, _) idx_mut = (.(i).#a94.#a0) in
    (* from (.(i)) *)
    let shallow : (t94 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a94.#a0) in
    mark_test_run 806;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 806 failed";
    (* from (.(i).#a94) *)
    let shallow : (t94 array, _) idx_mut = (.(i).#a94) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 807;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 807 failed";
    (* from (.(i).#a94.#a0) *)
    let shallow : (t94 array, _) idx_mut = (.(i).#a94.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 808;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 808 failed";
  );

  (********************************)
  (*   t36 = #{ #{ int; int } }   *)
  (********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 809;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 809 failed";
  );
  (* Deepening to (.(i).#a36) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#a36) in
    (* from (.(i)) *)
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 810;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 810 failed";
    (* from (.(i).#a36) *)
    let shallow : (t36 array, _) idx_mut = (.(i).#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 811;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 811 failed";
  );
  (* Deepening to (.(i).#a36.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#a36.#a1) in
    (* from (.(i)) *)
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a36.#a1) in
    mark_test_run 812;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 812 failed";
    (* from (.(i).#a36) *)
    let shallow : (t36 array, _) idx_mut = (.(i).#a36) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 813;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 813 failed";
    (* from (.(i).#a36.#a1) *)
    let shallow : (t36 array, _) idx_mut = (.(i).#a36.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 814;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 814 failed";
  );
  (* Deepening to (.(i).#a36.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#a36.#b1) in
    (* from (.(i)) *)
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a36.#b1) in
    mark_test_run 815;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 815 failed";
    (* from (.(i).#a36) *)
    let shallow : (t36 array, _) idx_mut = (.(i).#a36) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 816;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 816 failed";
    (* from (.(i).#a36.#b1) *)
    let shallow : (t36 array, _) idx_mut = (.(i).#a36.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 817;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 817 failed";
  );

  (*************************************)
  (*   t95 = #{ #{ int; int }; int }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t95 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t95 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 818;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 818 failed";
  );
  (* Deepening to (.(i).#a95) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t95 array, _) idx_mut = (.(i).#a95) in
    (* from (.(i)) *)
    let shallow : (t95 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a95) in
    mark_test_run 819;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 819 failed";
    (* from (.(i).#a95) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#a95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 820;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 820 failed";
  );
  (* Deepening to (.(i).#b95) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t95 array, _) idx_mut = (.(i).#b95) in
    (* from (.(i)) *)
    let shallow : (t95 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b95) in
    mark_test_run 821;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 821 failed";
    (* from (.(i).#b95) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#b95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 822;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 822 failed";
  );
  (* Deepening to (.(i).#a95.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t95 array, _) idx_mut = (.(i).#a95.#a1) in
    (* from (.(i)) *)
    let shallow : (t95 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a95.#a1) in
    mark_test_run 823;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 823 failed";
    (* from (.(i).#a95) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#a95) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 824;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 824 failed";
    (* from (.(i).#a95.#a1) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#a95.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 825;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 825 failed";
  );
  (* Deepening to (.(i).#a95.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t95 array, _) idx_mut = (.(i).#a95.#b1) in
    (* from (.(i)) *)
    let shallow : (t95 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a95.#b1) in
    mark_test_run 826;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 826 failed";
    (* from (.(i).#a95) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#a95) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 827;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 827 failed";
    (* from (.(i).#a95.#b1) *)
    let shallow : (t95 array, _) idx_mut = (.(i).#a95.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 828;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 828 failed";
  );

  (****************************************)
  (*   t96 = #{ #{ int; int }; int32# }   *)
  (****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t96 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t96 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 829;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 829 failed";
  );
  (* Deepening to (.(i).#a96) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t96 array, _) idx_mut = (.(i).#a96) in
    (* from (.(i)) *)
    let shallow : (t96 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a96) in
    mark_test_run 830;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 830 failed";
    (* from (.(i).#a96) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#a96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 831;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 831 failed";
  );
  (* Deepening to (.(i).#b96) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t96 array, _) idx_mut = (.(i).#b96) in
    (* from (.(i)) *)
    let shallow : (t96 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b96) in
    mark_test_run 832;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 832 failed";
    (* from (.(i).#b96) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#b96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 833;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 833 failed";
  );
  (* Deepening to (.(i).#a96.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t96 array, _) idx_mut = (.(i).#a96.#a1) in
    (* from (.(i)) *)
    let shallow : (t96 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a96.#a1) in
    mark_test_run 834;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 834 failed";
    (* from (.(i).#a96) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#a96) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 835;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 835 failed";
    (* from (.(i).#a96.#a1) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#a96.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 836;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 836 failed";
  );
  (* Deepening to (.(i).#a96.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t96 array, _) idx_mut = (.(i).#a96.#b1) in
    (* from (.(i)) *)
    let shallow : (t96 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a96.#b1) in
    mark_test_run 837;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 837 failed";
    (* from (.(i).#a96) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#a96) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 838;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 838 failed";
    (* from (.(i).#a96.#b1) *)
    let shallow : (t96 array, _) idx_mut = (.(i).#a96.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 839;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 839 failed";
  );

  (***************************************)
  (*   t97 = #{ #{ int; int }; float }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t97 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t97 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 840;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 840 failed";
  );
  (* Deepening to (.(i).#a97) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t97 array, _) idx_mut = (.(i).#a97) in
    (* from (.(i)) *)
    let shallow : (t97 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a97) in
    mark_test_run 841;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 841 failed";
    (* from (.(i).#a97) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#a97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 842;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 842 failed";
  );
  (* Deepening to (.(i).#b97) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t97 array, _) idx_mut = (.(i).#b97) in
    (* from (.(i)) *)
    let shallow : (t97 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b97) in
    mark_test_run 843;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 843 failed";
    (* from (.(i).#b97) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#b97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 844;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 844 failed";
  );
  (* Deepening to (.(i).#a97.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t97 array, _) idx_mut = (.(i).#a97.#a1) in
    (* from (.(i)) *)
    let shallow : (t97 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a97.#a1) in
    mark_test_run 845;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 845 failed";
    (* from (.(i).#a97) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#a97) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 846;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 846 failed";
    (* from (.(i).#a97.#a1) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#a97.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 847;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 847 failed";
  );
  (* Deepening to (.(i).#a97.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t97 array, _) idx_mut = (.(i).#a97.#b1) in
    (* from (.(i)) *)
    let shallow : (t97 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a97.#b1) in
    mark_test_run 848;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 848 failed";
    (* from (.(i).#a97) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#a97) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 849;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 849 failed";
    (* from (.(i).#a97.#b1) *)
    let shallow : (t97 array, _) idx_mut = (.(i).#a97.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 850;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 850 failed";
  );

  (***********************************)
  (*   t38 = #{ #{ int; int32# } }   *)
  (***********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 851;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 851 failed";
  );
  (* Deepening to (.(i).#a38) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#a38) in
    (* from (.(i)) *)
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a38) in
    mark_test_run 852;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 852 failed";
    (* from (.(i).#a38) *)
    let shallow : (t38 array, _) idx_mut = (.(i).#a38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 853;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 853 failed";
  );
  (* Deepening to (.(i).#a38.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#a38.#a7) in
    (* from (.(i)) *)
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a38.#a7) in
    mark_test_run 854;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 854 failed";
    (* from (.(i).#a38) *)
    let shallow : (t38 array, _) idx_mut = (.(i).#a38) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 855;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 855 failed";
    (* from (.(i).#a38.#a7) *)
    let shallow : (t38 array, _) idx_mut = (.(i).#a38.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 856;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 856 failed";
  );
  (* Deepening to (.(i).#a38.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#a38.#b7) in
    (* from (.(i)) *)
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a38.#b7) in
    mark_test_run 857;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 857 failed";
    (* from (.(i).#a38) *)
    let shallow : (t38 array, _) idx_mut = (.(i).#a38) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 858;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 858 failed";
    (* from (.(i).#a38.#b7) *)
    let shallow : (t38 array, _) idx_mut = (.(i).#a38.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 859;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 859 failed";
  );

  (*******************************************)
  (*   t98 = #{ #{ int; int32# }; int32# }   *)
  (*******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t98 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t98 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 860;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 860 failed";
  );
  (* Deepening to (.(i).#a98) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t98 array, _) idx_mut = (.(i).#a98) in
    (* from (.(i)) *)
    let shallow : (t98 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a98) in
    mark_test_run 861;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 861 failed";
    (* from (.(i).#a98) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#a98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 862;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 862 failed";
  );
  (* Deepening to (.(i).#b98) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t98 array, _) idx_mut = (.(i).#b98) in
    (* from (.(i)) *)
    let shallow : (t98 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b98) in
    mark_test_run 863;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 863 failed";
    (* from (.(i).#b98) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#b98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 864;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 864 failed";
  );
  (* Deepening to (.(i).#a98.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t98 array, _) idx_mut = (.(i).#a98.#a7) in
    (* from (.(i)) *)
    let shallow : (t98 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a98.#a7) in
    mark_test_run 865;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 865 failed";
    (* from (.(i).#a98) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#a98) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 866;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 866 failed";
    (* from (.(i).#a98.#a7) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#a98.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 867;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 867 failed";
  );
  (* Deepening to (.(i).#a98.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t98 array, _) idx_mut = (.(i).#a98.#b7) in
    (* from (.(i)) *)
    let shallow : (t98 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a98.#b7) in
    mark_test_run 868;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 868 failed";
    (* from (.(i).#a98) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#a98) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 869;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 869 failed";
    (* from (.(i).#a98.#b7) *)
    let shallow : (t98 array, _) idx_mut = (.(i).#a98.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 870;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 870 failed";
  );

  (**********************************)
  (*   t40 = #{ #{ int; float } }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 871;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 871 failed";
  );
  (* Deepening to (.(i).#a40) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i).#a40) in
    (* from (.(i)) *)
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 872;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 872 failed";
    (* from (.(i).#a40) *)
    let shallow : (t40 array, _) idx_mut = (.(i).#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 873;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 873 failed";
  );
  (* Deepening to (.(i).#a40.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i).#a40.#a10) in
    (* from (.(i)) *)
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a40.#a10) in
    mark_test_run 874;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 874 failed";
    (* from (.(i).#a40) *)
    let shallow : (t40 array, _) idx_mut = (.(i).#a40) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 875;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 875 failed";
    (* from (.(i).#a40.#a10) *)
    let shallow : (t40 array, _) idx_mut = (.(i).#a40.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 876;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 876 failed";
  );
  (* Deepening to (.(i).#a40.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i).#a40.#b10) in
    (* from (.(i)) *)
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a40.#b10) in
    mark_test_run 877;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 877 failed";
    (* from (.(i).#a40) *)
    let shallow : (t40 array, _) idx_mut = (.(i).#a40) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 878;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 878 failed";
    (* from (.(i).#a40.#b10) *)
    let shallow : (t40 array, _) idx_mut = (.(i).#a40.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 879;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 879 failed";
  );

  (***************************************)
  (*   t99 = #{ #{ int; float }; int }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t99 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t99 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 880;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 880 failed";
  );
  (* Deepening to (.(i).#a99) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t99 array, _) idx_mut = (.(i).#a99) in
    (* from (.(i)) *)
    let shallow : (t99 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a99) in
    mark_test_run 881;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 881 failed";
    (* from (.(i).#a99) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#a99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 882;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 882 failed";
  );
  (* Deepening to (.(i).#b99) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t99 array, _) idx_mut = (.(i).#b99) in
    (* from (.(i)) *)
    let shallow : (t99 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b99) in
    mark_test_run 883;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 883 failed";
    (* from (.(i).#b99) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#b99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 884;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 884 failed";
  );
  (* Deepening to (.(i).#a99.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t99 array, _) idx_mut = (.(i).#a99.#a10) in
    (* from (.(i)) *)
    let shallow : (t99 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a99.#a10) in
    mark_test_run 885;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 885 failed";
    (* from (.(i).#a99) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#a99) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 886;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 886 failed";
    (* from (.(i).#a99.#a10) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#a99.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 887;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 887 failed";
  );
  (* Deepening to (.(i).#a99.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t99 array, _) idx_mut = (.(i).#a99.#b10) in
    (* from (.(i)) *)
    let shallow : (t99 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a99.#b10) in
    mark_test_run 888;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 888 failed";
    (* from (.(i).#a99) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#a99) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 889;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 889 failed";
    (* from (.(i).#a99.#b10) *)
    let shallow : (t99 array, _) idx_mut = (.(i).#a99.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 890;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 890 failed";
  );

  (******************************************)
  (*   t100 = #{ #{ int; float }; float }   *)
  (******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t100 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t100 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 891;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 891 failed";
  );
  (* Deepening to (.(i).#a100) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t100 array, _) idx_mut = (.(i).#a100) in
    (* from (.(i)) *)
    let shallow : (t100 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a100) in
    mark_test_run 892;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 892 failed";
    (* from (.(i).#a100) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#a100) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 893;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 893 failed";
  );
  (* Deepening to (.(i).#b100) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t100 array, _) idx_mut = (.(i).#b100) in
    (* from (.(i)) *)
    let shallow : (t100 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b100) in
    mark_test_run 894;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 894 failed";
    (* from (.(i).#b100) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#b100) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 895;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 895 failed";
  );
  (* Deepening to (.(i).#a100.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t100 array, _) idx_mut = (.(i).#a100.#a10) in
    (* from (.(i)) *)
    let shallow : (t100 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a100.#a10) in
    mark_test_run 896;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 896 failed";
    (* from (.(i).#a100) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#a100) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 897;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 897 failed";
    (* from (.(i).#a100.#a10) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#a100.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 898;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 898 failed";
  );
  (* Deepening to (.(i).#a100.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t100 array, _) idx_mut = (.(i).#a100.#b10) in
    (* from (.(i)) *)
    let shallow : (t100 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a100.#b10) in
    mark_test_run 899;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 899 failed";
    (* from (.(i).#a100) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#a100) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 900;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 900 failed";
    (* from (.(i).#a100.#b10) *)
    let shallow : (t100 array, _) idx_mut = (.(i).#a100.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 901;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 901 failed";
  );

  (*******************************************)
  (*   t101 = #{ #{ int; #{ int; int } } }   *)
  (*******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 902;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 902 failed";
  );
  (* Deepening to (.(i).#a101) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i).#a101) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a101) in
    mark_test_run 903;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 903 failed";
    (* from (.(i).#a101) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 904;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 904 failed";
  );
  (* Deepening to (.(i).#a101.#a14) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i).#a101.#a14) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a101.#a14) in
    mark_test_run 905;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 905 failed";
    (* from (.(i).#a101) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101) in
    let deepened = (.idx_mut(shallow).#a14) in
    mark_test_run 906;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 906 failed";
    (* from (.(i).#a101.#a14) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#a14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 907;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 907 failed";
  );
  (* Deepening to (.(i).#a101.#b14) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i).#a101.#b14) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a101.#b14) in
    mark_test_run 908;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 908 failed";
    (* from (.(i).#a101) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101) in
    let deepened = (.idx_mut(shallow).#b14) in
    mark_test_run 909;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 909 failed";
    (* from (.(i).#a101.#b14) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#b14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 910;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 910 failed";
  );
  (* Deepening to (.(i).#a101.#b14.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i).#a101.#b14.#a1) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a101.#b14.#a1) in
    mark_test_run 911;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 911 failed";
    (* from (.(i).#a101) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101) in
    let deepened = (.idx_mut(shallow).#b14.#a1) in
    mark_test_run 912;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 912 failed";
    (* from (.(i).#a101.#b14) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#b14) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 913;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 913 failed";
    (* from (.(i).#a101.#b14.#a1) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#b14.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 914;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 914 failed";
  );
  (* Deepening to (.(i).#a101.#b14.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t101 array, _) idx_mut = (.(i).#a101.#b14.#b1) in
    (* from (.(i)) *)
    let shallow : (t101 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a101.#b14.#b1) in
    mark_test_run 915;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 915 failed";
    (* from (.(i).#a101) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101) in
    let deepened = (.idx_mut(shallow).#b14.#b1) in
    mark_test_run 916;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 916 failed";
    (* from (.(i).#a101.#b14) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#b14) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 917;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 917 failed";
    (* from (.(i).#a101.#b14.#b1) *)
    let shallow : (t101 array, _) idx_mut = (.(i).#a101.#b14.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 918;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 918 failed";
  );

  (**********************************************)
  (*   t102 = #{ #{ int; #{ int; int32# } } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 919;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 919 failed";
  );
  (* Deepening to (.(i).#a102) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i).#a102) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a102) in
    mark_test_run 920;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 920 failed";
    (* from (.(i).#a102) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 921;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 921 failed";
  );
  (* Deepening to (.(i).#a102.#a15) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i).#a102.#a15) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a102.#a15) in
    mark_test_run 922;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 922 failed";
    (* from (.(i).#a102) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102) in
    let deepened = (.idx_mut(shallow).#a15) in
    mark_test_run 923;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 923 failed";
    (* from (.(i).#a102.#a15) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#a15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 924;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 924 failed";
  );
  (* Deepening to (.(i).#a102.#b15) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i).#a102.#b15) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a102.#b15) in
    mark_test_run 925;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 925 failed";
    (* from (.(i).#a102) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102) in
    let deepened = (.idx_mut(shallow).#b15) in
    mark_test_run 926;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 926 failed";
    (* from (.(i).#a102.#b15) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#b15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 927;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 927 failed";
  );
  (* Deepening to (.(i).#a102.#b15.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i).#a102.#b15.#a7) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a102.#b15.#a7) in
    mark_test_run 928;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 928 failed";
    (* from (.(i).#a102) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102) in
    let deepened = (.idx_mut(shallow).#b15.#a7) in
    mark_test_run 929;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 929 failed";
    (* from (.(i).#a102.#b15) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#b15) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 930;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 930 failed";
    (* from (.(i).#a102.#b15.#a7) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#b15.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 931;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 931 failed";
  );
  (* Deepening to (.(i).#a102.#b15.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t102 array, _) idx_mut = (.(i).#a102.#b15.#b7) in
    (* from (.(i)) *)
    let shallow : (t102 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a102.#b15.#b7) in
    mark_test_run 932;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 932 failed";
    (* from (.(i).#a102) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102) in
    let deepened = (.idx_mut(shallow).#b15.#b7) in
    mark_test_run 933;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 933 failed";
    (* from (.(i).#a102.#b15) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#b15) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 934;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 934 failed";
    (* from (.(i).#a102.#b15.#b7) *)
    let shallow : (t102 array, _) idx_mut = (.(i).#a102.#b15.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 935;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 935 failed";
  );

  (*********************************************)
  (*   t103 = #{ #{ int; #{ int; float } } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 936;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 936 failed";
  );
  (* Deepening to (.(i).#a103) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i).#a103) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a103) in
    mark_test_run 937;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 937 failed";
    (* from (.(i).#a103) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 938;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 938 failed";
  );
  (* Deepening to (.(i).#a103.#a16) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i).#a103.#a16) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a103.#a16) in
    mark_test_run 939;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 939 failed";
    (* from (.(i).#a103) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103) in
    let deepened = (.idx_mut(shallow).#a16) in
    mark_test_run 940;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 940 failed";
    (* from (.(i).#a103.#a16) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#a16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 941;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 941 failed";
  );
  (* Deepening to (.(i).#a103.#b16) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i).#a103.#b16) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a103.#b16) in
    mark_test_run 942;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 942 failed";
    (* from (.(i).#a103) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103) in
    let deepened = (.idx_mut(shallow).#b16) in
    mark_test_run 943;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 943 failed";
    (* from (.(i).#a103.#b16) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#b16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 944;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 944 failed";
  );
  (* Deepening to (.(i).#a103.#b16.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i).#a103.#b16.#a10) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a103.#b16.#a10) in
    mark_test_run 945;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 945 failed";
    (* from (.(i).#a103) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103) in
    let deepened = (.idx_mut(shallow).#b16.#a10) in
    mark_test_run 946;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 946 failed";
    (* from (.(i).#a103.#b16) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#b16) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 947;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 947 failed";
    (* from (.(i).#a103.#b16.#a10) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#b16.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 948;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 948 failed";
  );
  (* Deepening to (.(i).#a103.#b16.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t103 array, _) idx_mut = (.(i).#a103.#b16.#b10) in
    (* from (.(i)) *)
    let shallow : (t103 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a103.#b16.#b10) in
    mark_test_run 949;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 949 failed";
    (* from (.(i).#a103) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103) in
    let deepened = (.idx_mut(shallow).#b16.#b10) in
    mark_test_run 950;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 950 failed";
    (* from (.(i).#a103.#b16) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#b16) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 951;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 951 failed";
    (* from (.(i).#a103.#b16.#b10) *)
    let shallow : (t103 array, _) idx_mut = (.(i).#a103.#b16.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 952;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 952 failed";
  );

  (*************************************************)
  (*   t104 = #{ #{ int; #{ int32#; int32# } } }   *)
  (*************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 953;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 953 failed";
  );
  (* Deepening to (.(i).#a104) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i).#a104) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a104) in
    mark_test_run 954;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 954 failed";
    (* from (.(i).#a104) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 955;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 955 failed";
  );
  (* Deepening to (.(i).#a104.#a25) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i).#a104.#a25) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a104.#a25) in
    mark_test_run 956;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 956 failed";
    (* from (.(i).#a104) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 957;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 957 failed";
    (* from (.(i).#a104.#a25) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 958;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 958 failed";
  );
  (* Deepening to (.(i).#a104.#b25) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i).#a104.#b25) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a104.#b25) in
    mark_test_run 959;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 959 failed";
    (* from (.(i).#a104) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 960;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 960 failed";
    (* from (.(i).#a104.#b25) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 961;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 961 failed";
  );
  (* Deepening to (.(i).#a104.#b25.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i).#a104.#b25.#a24) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a104.#b25.#a24) in
    mark_test_run 962;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 962 failed";
    (* from (.(i).#a104) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104) in
    let deepened = (.idx_mut(shallow).#b25.#a24) in
    mark_test_run 963;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 963 failed";
    (* from (.(i).#a104.#b25) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#b25) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 964;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 964 failed";
    (* from (.(i).#a104.#b25.#a24) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#b25.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 965;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 965 failed";
  );
  (* Deepening to (.(i).#a104.#b25.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t104 array, _) idx_mut = (.(i).#a104.#b25.#b24) in
    (* from (.(i)) *)
    let shallow : (t104 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a104.#b25.#b24) in
    mark_test_run 966;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 966 failed";
    (* from (.(i).#a104) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104) in
    let deepened = (.idx_mut(shallow).#b25.#b24) in
    mark_test_run 967;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 967 failed";
    (* from (.(i).#a104.#b25) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#b25) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 968;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 968 failed";
    (* from (.(i).#a104.#b25.#b24) *)
    let shallow : (t104 array, _) idx_mut = (.(i).#a104.#b25.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 969;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 969 failed";
  );

  (*********************************************)
  (*   t105 = #{ #{ int; #{ float; int } } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 970;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 970 failed";
  );
  (* Deepening to (.(i).#a105) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i).#a105) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a105) in
    mark_test_run 971;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 971 failed";
    (* from (.(i).#a105) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 972;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 972 failed";
  );
  (* Deepening to (.(i).#a105.#a29) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i).#a105.#a29) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a105.#a29) in
    mark_test_run 973;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 973 failed";
    (* from (.(i).#a105) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105) in
    let deepened = (.idx_mut(shallow).#a29) in
    mark_test_run 974;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 974 failed";
    (* from (.(i).#a105.#a29) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#a29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 975;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 975 failed";
  );
  (* Deepening to (.(i).#a105.#b29) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i).#a105.#b29) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a105.#b29) in
    mark_test_run 976;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 976 failed";
    (* from (.(i).#a105) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105) in
    let deepened = (.idx_mut(shallow).#b29) in
    mark_test_run 977;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 977 failed";
    (* from (.(i).#a105.#b29) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#b29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 978;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 978 failed";
  );
  (* Deepening to (.(i).#a105.#b29.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i).#a105.#b29.#a28) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a105.#b29.#a28) in
    mark_test_run 979;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 979 failed";
    (* from (.(i).#a105) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105) in
    let deepened = (.idx_mut(shallow).#b29.#a28) in
    mark_test_run 980;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 980 failed";
    (* from (.(i).#a105.#b29) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#b29) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 981;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 981 failed";
    (* from (.(i).#a105.#b29.#a28) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#b29.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 982;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 982 failed";
  );
  (* Deepening to (.(i).#a105.#b29.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t105 array, _) idx_mut = (.(i).#a105.#b29.#b28) in
    (* from (.(i)) *)
    let shallow : (t105 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a105.#b29.#b28) in
    mark_test_run 983;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 983 failed";
    (* from (.(i).#a105) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105) in
    let deepened = (.idx_mut(shallow).#b29.#b28) in
    mark_test_run 984;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 984 failed";
    (* from (.(i).#a105.#b29) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#b29) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 985;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 985 failed";
    (* from (.(i).#a105.#b29.#b28) *)
    let shallow : (t105 array, _) idx_mut = (.(i).#a105.#b29.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 986;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 986 failed";
  );

  (***********************************************)
  (*   t106 = #{ #{ int; #{ float; float } } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 987;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 987 failed";
  );
  (* Deepening to (.(i).#a106) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i).#a106) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a106) in
    mark_test_run 988;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 988 failed";
    (* from (.(i).#a106) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 989;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 989 failed";
  );
  (* Deepening to (.(i).#a106.#a31) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i).#a106.#a31) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a106.#a31) in
    mark_test_run 990;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 990 failed";
    (* from (.(i).#a106) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106) in
    let deepened = (.idx_mut(shallow).#a31) in
    mark_test_run 991;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 991 failed";
    (* from (.(i).#a106.#a31) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#a31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 992;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 992 failed";
  );
  (* Deepening to (.(i).#a106.#b31) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i).#a106.#b31) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a106.#b31) in
    mark_test_run 993;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 993 failed";
    (* from (.(i).#a106) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106) in
    let deepened = (.idx_mut(shallow).#b31) in
    mark_test_run 994;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 994 failed";
    (* from (.(i).#a106.#b31) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#b31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 995;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 995 failed";
  );
  (* Deepening to (.(i).#a106.#b31.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i).#a106.#b31.#a30) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a106.#b31.#a30) in
    mark_test_run 996;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 996 failed";
    (* from (.(i).#a106) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106) in
    let deepened = (.idx_mut(shallow).#b31.#a30) in
    mark_test_run 997;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 997 failed";
    (* from (.(i).#a106.#b31) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#b31) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 998;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 998 failed";
    (* from (.(i).#a106.#b31.#a30) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#b31.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 999;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 999 failed";
  );
  (* Deepening to (.(i).#a106.#b31.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t106 array, _) idx_mut = (.(i).#a106.#b31.#b30) in
    (* from (.(i)) *)
    let shallow : (t106 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a106.#b31.#b30) in
    mark_test_run 1000;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1000 failed";
    (* from (.(i).#a106) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106) in
    let deepened = (.idx_mut(shallow).#b31.#b30) in
    mark_test_run 1001;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1001 failed";
    (* from (.(i).#a106.#b31) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#b31) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1002;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1002 failed";
    (* from (.(i).#a106.#b31.#b30) *)
    let shallow : (t106 array, _) idx_mut = (.(i).#a106.#b31.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1003;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1003 failed";
  );

  (*******************************)
  (*   t107 = #{ #{ int32# } }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t107 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t107 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1004;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1004 failed";
  );
  (* Deepening to (.(i).#a107) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t107 array, _) idx_mut = (.(i).#a107) in
    (* from (.(i)) *)
    let shallow : (t107 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a107) in
    mark_test_run 1005;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1005 failed";
    (* from (.(i).#a107) *)
    let shallow : (t107 array, _) idx_mut = (.(i).#a107) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1006;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1006 failed";
  );
  (* Deepening to (.(i).#a107.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t107 array, _) idx_mut = (.(i).#a107.#a18) in
    (* from (.(i)) *)
    let shallow : (t107 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a107.#a18) in
    mark_test_run 1007;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1007 failed";
    (* from (.(i).#a107) *)
    let shallow : (t107 array, _) idx_mut = (.(i).#a107) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 1008;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1008 failed";
    (* from (.(i).#a107.#a18) *)
    let shallow : (t107 array, _) idx_mut = (.(i).#a107.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1009;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1009 failed";
  );

  (***************************************)
  (*   t108 = #{ #{ int32# }; int32# }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t108 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t108 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1010;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1010 failed";
  );
  (* Deepening to (.(i).#a108) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t108 array, _) idx_mut = (.(i).#a108) in
    (* from (.(i)) *)
    let shallow : (t108 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a108) in
    mark_test_run 1011;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1011 failed";
    (* from (.(i).#a108) *)
    let shallow : (t108 array, _) idx_mut = (.(i).#a108) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1012;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1012 failed";
  );
  (* Deepening to (.(i).#b108) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t108 array, _) idx_mut = (.(i).#b108) in
    (* from (.(i)) *)
    let shallow : (t108 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b108) in
    mark_test_run 1013;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1013 failed";
    (* from (.(i).#b108) *)
    let shallow : (t108 array, _) idx_mut = (.(i).#b108) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1014;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1014 failed";
  );
  (* Deepening to (.(i).#a108.#a18) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t108 array, _) idx_mut = (.(i).#a108.#a18) in
    (* from (.(i)) *)
    let shallow : (t108 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a108.#a18) in
    mark_test_run 1015;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1015 failed";
    (* from (.(i).#a108) *)
    let shallow : (t108 array, _) idx_mut = (.(i).#a108) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 1016;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1016 failed";
    (* from (.(i).#a108.#a18) *)
    let shallow : (t108 array, _) idx_mut = (.(i).#a108.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1017;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1017 failed";
  );

  (**************************************)
  (*   t42 = #{ #{ int32#; int32# } }   *)
  (**************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1018;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1018 failed";
  );
  (* Deepening to (.(i).#a42) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i).#a42) in
    (* from (.(i)) *)
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1019;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1019 failed";
    (* from (.(i).#a42) *)
    let shallow : (t42 array, _) idx_mut = (.(i).#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1020;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1020 failed";
  );
  (* Deepening to (.(i).#a42.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i).#a42.#a24) in
    (* from (.(i)) *)
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a42.#a24) in
    mark_test_run 1021;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1021 failed";
    (* from (.(i).#a42) *)
    let shallow : (t42 array, _) idx_mut = (.(i).#a42) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1022;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1022 failed";
    (* from (.(i).#a42.#a24) *)
    let shallow : (t42 array, _) idx_mut = (.(i).#a42.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1023;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1023 failed";
  );
  (* Deepening to (.(i).#a42.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i).#a42.#b24) in
    (* from (.(i)) *)
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a42.#b24) in
    mark_test_run 1024;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1024 failed";
    (* from (.(i).#a42) *)
    let shallow : (t42 array, _) idx_mut = (.(i).#a42) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1025;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1025 failed";
    (* from (.(i).#a42.#b24) *)
    let shallow : (t42 array, _) idx_mut = (.(i).#a42.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1026;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1026 failed";
  );

  (***********************************************)
  (*   t109 = #{ #{ int32#; int32# }; int32# }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t109 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t109 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1027;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1027 failed";
  );
  (* Deepening to (.(i).#a109) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t109 array, _) idx_mut = (.(i).#a109) in
    (* from (.(i)) *)
    let shallow : (t109 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a109) in
    mark_test_run 1028;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1028 failed";
    (* from (.(i).#a109) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#a109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1029;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1029 failed";
  );
  (* Deepening to (.(i).#b109) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t109 array, _) idx_mut = (.(i).#b109) in
    (* from (.(i)) *)
    let shallow : (t109 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b109) in
    mark_test_run 1030;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1030 failed";
    (* from (.(i).#b109) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#b109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1031;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1031 failed";
  );
  (* Deepening to (.(i).#a109.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t109 array, _) idx_mut = (.(i).#a109.#a24) in
    (* from (.(i)) *)
    let shallow : (t109 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a109.#a24) in
    mark_test_run 1032;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1032 failed";
    (* from (.(i).#a109) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#a109) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1033;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1033 failed";
    (* from (.(i).#a109.#a24) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#a109.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1034;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1034 failed";
  );
  (* Deepening to (.(i).#a109.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t109 array, _) idx_mut = (.(i).#a109.#b24) in
    (* from (.(i)) *)
    let shallow : (t109 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a109.#b24) in
    mark_test_run 1035;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1035 failed";
    (* from (.(i).#a109) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#a109) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1036;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1036 failed";
    (* from (.(i).#a109.#b24) *)
    let shallow : (t109 array, _) idx_mut = (.(i).#a109.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1037;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1037 failed";
  );

  (****************************************************)
  (*   t110 = #{ #{ int32#; #{ int32#; int32# } } }   *)
  (****************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1038;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1038 failed";
  );
  (* Deepening to (.(i).#a110) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i).#a110) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a110) in
    mark_test_run 1039;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1039 failed";
    (* from (.(i).#a110) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1040;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1040 failed";
  );
  (* Deepening to (.(i).#a110.#a59) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i).#a110.#a59) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a110.#a59) in
    mark_test_run 1041;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1041 failed";
    (* from (.(i).#a110) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110) in
    let deepened = (.idx_mut(shallow).#a59) in
    mark_test_run 1042;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1042 failed";
    (* from (.(i).#a110.#a59) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#a59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1043;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1043 failed";
  );
  (* Deepening to (.(i).#a110.#b59) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i).#a110.#b59) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a110.#b59) in
    mark_test_run 1044;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1044 failed";
    (* from (.(i).#a110) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110) in
    let deepened = (.idx_mut(shallow).#b59) in
    mark_test_run 1045;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1045 failed";
    (* from (.(i).#a110.#b59) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#b59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1046;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1046 failed";
  );
  (* Deepening to (.(i).#a110.#b59.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i).#a110.#b59.#a24) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a110.#b59.#a24) in
    mark_test_run 1047;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1047 failed";
    (* from (.(i).#a110) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110) in
    let deepened = (.idx_mut(shallow).#b59.#a24) in
    mark_test_run 1048;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1048 failed";
    (* from (.(i).#a110.#b59) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#b59) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1049;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1049 failed";
    (* from (.(i).#a110.#b59.#a24) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#b59.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1050;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1050 failed";
  );
  (* Deepening to (.(i).#a110.#b59.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t110 array, _) idx_mut = (.(i).#a110.#b59.#b24) in
    (* from (.(i)) *)
    let shallow : (t110 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a110.#b59.#b24) in
    mark_test_run 1051;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1051 failed";
    (* from (.(i).#a110) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110) in
    let deepened = (.idx_mut(shallow).#b59.#b24) in
    mark_test_run 1052;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1052 failed";
    (* from (.(i).#a110.#b59) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#b59) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1053;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1053 failed";
    (* from (.(i).#a110.#b59.#b24) *)
    let shallow : (t110 array, _) idx_mut = (.(i).#a110.#b59.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1054;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1054 failed";
  );

  (***********************************)
  (*   t111 = #{ #{ float }; int }   *)
  (***********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t111 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t111 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1055;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1055 failed";
  );
  (* Deepening to (.(i).#a111) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t111 array, _) idx_mut = (.(i).#a111) in
    (* from (.(i)) *)
    let shallow : (t111 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a111) in
    mark_test_run 1056;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1056 failed";
    (* from (.(i).#a111) *)
    let shallow : (t111 array, _) idx_mut = (.(i).#a111) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1057;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1057 failed";
  );
  (* Deepening to (.(i).#b111) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t111 array, _) idx_mut = (.(i).#b111) in
    (* from (.(i)) *)
    let shallow : (t111 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b111) in
    mark_test_run 1058;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1058 failed";
    (* from (.(i).#b111) *)
    let shallow : (t111 array, _) idx_mut = (.(i).#b111) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1059;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1059 failed";
  );
  (* Deepening to (.(i).#a111.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t111 array, _) idx_mut = (.(i).#a111.#a21) in
    (* from (.(i)) *)
    let shallow : (t111 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a111.#a21) in
    mark_test_run 1060;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1060 failed";
    (* from (.(i).#a111) *)
    let shallow : (t111 array, _) idx_mut = (.(i).#a111) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 1061;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1061 failed";
    (* from (.(i).#a111.#a21) *)
    let shallow : (t111 array, _) idx_mut = (.(i).#a111.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1062;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1062 failed";
  );

  (*************************************)
  (*   t112 = #{ #{ float }; float }   *)
  (*************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t112 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t112 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1063;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1063 failed";
  );
  (* Deepening to (.(i).#a112) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t112 array, _) idx_mut = (.(i).#a112) in
    (* from (.(i)) *)
    let shallow : (t112 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a112) in
    mark_test_run 1064;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1064 failed";
    (* from (.(i).#a112) *)
    let shallow : (t112 array, _) idx_mut = (.(i).#a112) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1065;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1065 failed";
  );
  (* Deepening to (.(i).#b112) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t112 array, _) idx_mut = (.(i).#b112) in
    (* from (.(i)) *)
    let shallow : (t112 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b112) in
    mark_test_run 1066;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1066 failed";
    (* from (.(i).#b112) *)
    let shallow : (t112 array, _) idx_mut = (.(i).#b112) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1067;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1067 failed";
  );
  (* Deepening to (.(i).#a112.#a21) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t112 array, _) idx_mut = (.(i).#a112.#a21) in
    (* from (.(i)) *)
    let shallow : (t112 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a112.#a21) in
    mark_test_run 1068;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1068 failed";
    (* from (.(i).#a112) *)
    let shallow : (t112 array, _) idx_mut = (.(i).#a112) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 1069;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1069 failed";
    (* from (.(i).#a112.#a21) *)
    let shallow : (t112 array, _) idx_mut = (.(i).#a112.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1070;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1070 failed";
  );

  (**********************************)
  (*   t44 = #{ #{ float; int } }   *)
  (**********************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1071;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1071 failed";
  );
  (* Deepening to (.(i).#a44) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#a44) in
    (* from (.(i)) *)
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 1072;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1072 failed";
    (* from (.(i).#a44) *)
    let shallow : (t44 array, _) idx_mut = (.(i).#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1073;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1073 failed";
  );
  (* Deepening to (.(i).#a44.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#a44.#a28) in
    (* from (.(i)) *)
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a44.#a28) in
    mark_test_run 1074;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1074 failed";
    (* from (.(i).#a44) *)
    let shallow : (t44 array, _) idx_mut = (.(i).#a44) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1075;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1075 failed";
    (* from (.(i).#a44.#a28) *)
    let shallow : (t44 array, _) idx_mut = (.(i).#a44.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1076;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1076 failed";
  );
  (* Deepening to (.(i).#a44.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#a44.#b28) in
    (* from (.(i)) *)
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a44.#b28) in
    mark_test_run 1077;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1077 failed";
    (* from (.(i).#a44) *)
    let shallow : (t44 array, _) idx_mut = (.(i).#a44) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1078;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1078 failed";
    (* from (.(i).#a44.#b28) *)
    let shallow : (t44 array, _) idx_mut = (.(i).#a44.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1079;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1079 failed";
  );

  (****************************************)
  (*   t113 = #{ #{ float; int }; int }   *)
  (****************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t113 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t113 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1080;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1080 failed";
  );
  (* Deepening to (.(i).#a113) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t113 array, _) idx_mut = (.(i).#a113) in
    (* from (.(i)) *)
    let shallow : (t113 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a113) in
    mark_test_run 1081;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1081 failed";
    (* from (.(i).#a113) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#a113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1082;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1082 failed";
  );
  (* Deepening to (.(i).#b113) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t113 array, _) idx_mut = (.(i).#b113) in
    (* from (.(i)) *)
    let shallow : (t113 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b113) in
    mark_test_run 1083;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1083 failed";
    (* from (.(i).#b113) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#b113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1084;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1084 failed";
  );
  (* Deepening to (.(i).#a113.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t113 array, _) idx_mut = (.(i).#a113.#a28) in
    (* from (.(i)) *)
    let shallow : (t113 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a113.#a28) in
    mark_test_run 1085;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1085 failed";
    (* from (.(i).#a113) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#a113) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1086;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1086 failed";
    (* from (.(i).#a113.#a28) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#a113.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1087;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1087 failed";
  );
  (* Deepening to (.(i).#a113.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t113 array, _) idx_mut = (.(i).#a113.#b28) in
    (* from (.(i)) *)
    let shallow : (t113 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a113.#b28) in
    mark_test_run 1088;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1088 failed";
    (* from (.(i).#a113) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#a113) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1089;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1089 failed";
    (* from (.(i).#a113.#b28) *)
    let shallow : (t113 array, _) idx_mut = (.(i).#a113.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1090;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1090 failed";
  );

  (******************************************)
  (*   t114 = #{ #{ float; int }; float }   *)
  (******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t114 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t114 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1091;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1091 failed";
  );
  (* Deepening to (.(i).#a114) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t114 array, _) idx_mut = (.(i).#a114) in
    (* from (.(i)) *)
    let shallow : (t114 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a114) in
    mark_test_run 1092;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1092 failed";
    (* from (.(i).#a114) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#a114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1093;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1093 failed";
  );
  (* Deepening to (.(i).#b114) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t114 array, _) idx_mut = (.(i).#b114) in
    (* from (.(i)) *)
    let shallow : (t114 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b114) in
    mark_test_run 1094;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1094 failed";
    (* from (.(i).#b114) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#b114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1095;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1095 failed";
  );
  (* Deepening to (.(i).#a114.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t114 array, _) idx_mut = (.(i).#a114.#a28) in
    (* from (.(i)) *)
    let shallow : (t114 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a114.#a28) in
    mark_test_run 1096;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1096 failed";
    (* from (.(i).#a114) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#a114) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1097;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1097 failed";
    (* from (.(i).#a114.#a28) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#a114.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1098;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1098 failed";
  );
  (* Deepening to (.(i).#a114.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t114 array, _) idx_mut = (.(i).#a114.#b28) in
    (* from (.(i)) *)
    let shallow : (t114 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a114.#b28) in
    mark_test_run 1099;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1099 failed";
    (* from (.(i).#a114) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#a114) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1100;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1100 failed";
    (* from (.(i).#a114.#b28) *)
    let shallow : (t114 array, _) idx_mut = (.(i).#a114.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1101;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1101 failed";
  );

  (************************************)
  (*   t46 = #{ #{ float; float } }   *)
  (************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1102;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1102 failed";
  );
  (* Deepening to (.(i).#a46) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i).#a46) in
    (* from (.(i)) *)
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 1103;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1103 failed";
    (* from (.(i).#a46) *)
    let shallow : (t46 array, _) idx_mut = (.(i).#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1104;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1104 failed";
  );
  (* Deepening to (.(i).#a46.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i).#a46.#a30) in
    (* from (.(i)) *)
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a46.#a30) in
    mark_test_run 1105;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1105 failed";
    (* from (.(i).#a46) *)
    let shallow : (t46 array, _) idx_mut = (.(i).#a46) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1106;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1106 failed";
    (* from (.(i).#a46.#a30) *)
    let shallow : (t46 array, _) idx_mut = (.(i).#a46.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1107;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1107 failed";
  );
  (* Deepening to (.(i).#a46.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i).#a46.#b30) in
    (* from (.(i)) *)
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a46.#b30) in
    mark_test_run 1108;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1108 failed";
    (* from (.(i).#a46) *)
    let shallow : (t46 array, _) idx_mut = (.(i).#a46) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1109;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1109 failed";
    (* from (.(i).#a46.#b30) *)
    let shallow : (t46 array, _) idx_mut = (.(i).#a46.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1110;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1110 failed";
  );

  (******************************************)
  (*   t115 = #{ #{ float; float }; int }   *)
  (******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t115 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t115 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1111;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1111 failed";
  );
  (* Deepening to (.(i).#a115) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t115 array, _) idx_mut = (.(i).#a115) in
    (* from (.(i)) *)
    let shallow : (t115 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a115) in
    mark_test_run 1112;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1112 failed";
    (* from (.(i).#a115) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#a115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1113;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1113 failed";
  );
  (* Deepening to (.(i).#b115) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t115 array, _) idx_mut = (.(i).#b115) in
    (* from (.(i)) *)
    let shallow : (t115 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b115) in
    mark_test_run 1114;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1114 failed";
    (* from (.(i).#b115) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#b115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1115;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1115 failed";
  );
  (* Deepening to (.(i).#a115.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t115 array, _) idx_mut = (.(i).#a115.#a30) in
    (* from (.(i)) *)
    let shallow : (t115 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a115.#a30) in
    mark_test_run 1116;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1116 failed";
    (* from (.(i).#a115) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#a115) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1117;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1117 failed";
    (* from (.(i).#a115.#a30) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#a115.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1118;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1118 failed";
  );
  (* Deepening to (.(i).#a115.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t115 array, _) idx_mut = (.(i).#a115.#b30) in
    (* from (.(i)) *)
    let shallow : (t115 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a115.#b30) in
    mark_test_run 1119;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1119 failed";
    (* from (.(i).#a115) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#a115) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1120;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1120 failed";
    (* from (.(i).#a115.#b30) *)
    let shallow : (t115 array, _) idx_mut = (.(i).#a115.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1121;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1121 failed";
  );

  (********************************************)
  (*   t116 = #{ #{ float; float }; float }   *)
  (********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t116 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t116 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1122;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1122 failed";
  );
  (* Deepening to (.(i).#a116) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t116 array, _) idx_mut = (.(i).#a116) in
    (* from (.(i)) *)
    let shallow : (t116 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a116) in
    mark_test_run 1123;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1123 failed";
    (* from (.(i).#a116) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#a116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1124;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1124 failed";
  );
  (* Deepening to (.(i).#b116) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t116 array, _) idx_mut = (.(i).#b116) in
    (* from (.(i)) *)
    let shallow : (t116 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b116) in
    mark_test_run 1125;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1125 failed";
    (* from (.(i).#b116) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#b116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1126;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1126 failed";
  );
  (* Deepening to (.(i).#a116.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t116 array, _) idx_mut = (.(i).#a116.#a30) in
    (* from (.(i)) *)
    let shallow : (t116 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a116.#a30) in
    mark_test_run 1127;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1127 failed";
    (* from (.(i).#a116) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#a116) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1128;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1128 failed";
    (* from (.(i).#a116.#a30) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#a116.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1129;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1129 failed";
  );
  (* Deepening to (.(i).#a116.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t116 array, _) idx_mut = (.(i).#a116.#b30) in
    (* from (.(i)) *)
    let shallow : (t116 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a116.#b30) in
    mark_test_run 1130;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1130 failed";
    (* from (.(i).#a116) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#a116) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1131;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1131 failed";
    (* from (.(i).#a116.#b30) *)
    let shallow : (t116 array, _) idx_mut = (.(i).#a116.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1132;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1132 failed";
  );

  (*********************************************)
  (*   t117 = #{ #{ float; #{ int; int } } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1133;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1133 failed";
  );
  (* Deepening to (.(i).#a117) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i).#a117) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a117) in
    mark_test_run 1134;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1134 failed";
    (* from (.(i).#a117) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1135;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1135 failed";
  );
  (* Deepening to (.(i).#a117.#a71) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i).#a117.#a71) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a117.#a71) in
    mark_test_run 1136;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1136 failed";
    (* from (.(i).#a117) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117) in
    let deepened = (.idx_mut(shallow).#a71) in
    mark_test_run 1137;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1137 failed";
    (* from (.(i).#a117.#a71) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#a71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1138;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1138 failed";
  );
  (* Deepening to (.(i).#a117.#b71) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i).#a117.#b71) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a117.#b71) in
    mark_test_run 1139;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1139 failed";
    (* from (.(i).#a117) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117) in
    let deepened = (.idx_mut(shallow).#b71) in
    mark_test_run 1140;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1140 failed";
    (* from (.(i).#a117.#b71) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#b71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1141;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1141 failed";
  );
  (* Deepening to (.(i).#a117.#b71.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i).#a117.#b71.#a1) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a117.#b71.#a1) in
    mark_test_run 1142;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1142 failed";
    (* from (.(i).#a117) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117) in
    let deepened = (.idx_mut(shallow).#b71.#a1) in
    mark_test_run 1143;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1143 failed";
    (* from (.(i).#a117.#b71) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#b71) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 1144;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1144 failed";
    (* from (.(i).#a117.#b71.#a1) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#b71.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1145;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1145 failed";
  );
  (* Deepening to (.(i).#a117.#b71.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t117 array, _) idx_mut = (.(i).#a117.#b71.#b1) in
    (* from (.(i)) *)
    let shallow : (t117 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a117.#b71.#b1) in
    mark_test_run 1146;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1146 failed";
    (* from (.(i).#a117) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117) in
    let deepened = (.idx_mut(shallow).#b71.#b1) in
    mark_test_run 1147;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1147 failed";
    (* from (.(i).#a117.#b71) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#b71) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 1148;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1148 failed";
    (* from (.(i).#a117.#b71.#b1) *)
    let shallow : (t117 array, _) idx_mut = (.(i).#a117.#b71.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1149;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1149 failed";
  );

  (***********************************************)
  (*   t118 = #{ #{ float; #{ int; float } } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1150;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1150 failed";
  );
  (* Deepening to (.(i).#a118) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i).#a118) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a118) in
    mark_test_run 1151;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1151 failed";
    (* from (.(i).#a118) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1152;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1152 failed";
  );
  (* Deepening to (.(i).#a118.#a72) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i).#a118.#a72) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a118.#a72) in
    mark_test_run 1153;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1153 failed";
    (* from (.(i).#a118) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118) in
    let deepened = (.idx_mut(shallow).#a72) in
    mark_test_run 1154;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1154 failed";
    (* from (.(i).#a118.#a72) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#a72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1155;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1155 failed";
  );
  (* Deepening to (.(i).#a118.#b72) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i).#a118.#b72) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a118.#b72) in
    mark_test_run 1156;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1156 failed";
    (* from (.(i).#a118) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118) in
    let deepened = (.idx_mut(shallow).#b72) in
    mark_test_run 1157;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1157 failed";
    (* from (.(i).#a118.#b72) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#b72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1158;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1158 failed";
  );
  (* Deepening to (.(i).#a118.#b72.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i).#a118.#b72.#a10) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a118.#b72.#a10) in
    mark_test_run 1159;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1159 failed";
    (* from (.(i).#a118) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118) in
    let deepened = (.idx_mut(shallow).#b72.#a10) in
    mark_test_run 1160;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1160 failed";
    (* from (.(i).#a118.#b72) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#b72) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 1161;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1161 failed";
    (* from (.(i).#a118.#b72.#a10) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#b72.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1162;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1162 failed";
  );
  (* Deepening to (.(i).#a118.#b72.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t118 array, _) idx_mut = (.(i).#a118.#b72.#b10) in
    (* from (.(i)) *)
    let shallow : (t118 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a118.#b72.#b10) in
    mark_test_run 1163;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1163 failed";
    (* from (.(i).#a118) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118) in
    let deepened = (.idx_mut(shallow).#b72.#b10) in
    mark_test_run 1164;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1164 failed";
    (* from (.(i).#a118.#b72) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#b72) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 1165;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1165 failed";
    (* from (.(i).#a118.#b72.#b10) *)
    let shallow : (t118 array, _) idx_mut = (.(i).#a118.#b72.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1166;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1166 failed";
  );

  (***********************************************)
  (*   t119 = #{ #{ float; #{ float; int } } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1167;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1167 failed";
  );
  (* Deepening to (.(i).#a119) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i).#a119) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a119) in
    mark_test_run 1168;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1168 failed";
    (* from (.(i).#a119) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1169;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1169 failed";
  );
  (* Deepening to (.(i).#a119.#a75) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i).#a119.#a75) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a119.#a75) in
    mark_test_run 1170;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1170 failed";
    (* from (.(i).#a119) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119) in
    let deepened = (.idx_mut(shallow).#a75) in
    mark_test_run 1171;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1171 failed";
    (* from (.(i).#a119.#a75) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#a75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1172;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1172 failed";
  );
  (* Deepening to (.(i).#a119.#b75) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i).#a119.#b75) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a119.#b75) in
    mark_test_run 1173;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1173 failed";
    (* from (.(i).#a119) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119) in
    let deepened = (.idx_mut(shallow).#b75) in
    mark_test_run 1174;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1174 failed";
    (* from (.(i).#a119.#b75) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#b75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1175;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1175 failed";
  );
  (* Deepening to (.(i).#a119.#b75.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i).#a119.#b75.#a28) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a119.#b75.#a28) in
    mark_test_run 1176;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1176 failed";
    (* from (.(i).#a119) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119) in
    let deepened = (.idx_mut(shallow).#b75.#a28) in
    mark_test_run 1177;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1177 failed";
    (* from (.(i).#a119.#b75) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#b75) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1178;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1178 failed";
    (* from (.(i).#a119.#b75.#a28) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#b75.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1179;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1179 failed";
  );
  (* Deepening to (.(i).#a119.#b75.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t119 array, _) idx_mut = (.(i).#a119.#b75.#b28) in
    (* from (.(i)) *)
    let shallow : (t119 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a119.#b75.#b28) in
    mark_test_run 1180;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1180 failed";
    (* from (.(i).#a119) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119) in
    let deepened = (.idx_mut(shallow).#b75.#b28) in
    mark_test_run 1181;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1181 failed";
    (* from (.(i).#a119.#b75) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#b75) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1182;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1182 failed";
    (* from (.(i).#a119.#b75.#b28) *)
    let shallow : (t119 array, _) idx_mut = (.(i).#a119.#b75.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1183;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1183 failed";
  );

  (*************************************************)
  (*   t120 = #{ #{ float; #{ float; float } } }   *)
  (*************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1184;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1184 failed";
  );
  (* Deepening to (.(i).#a120) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i).#a120) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a120) in
    mark_test_run 1185;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1185 failed";
    (* from (.(i).#a120) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1186;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1186 failed";
  );
  (* Deepening to (.(i).#a120.#a76) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i).#a120.#a76) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a120.#a76) in
    mark_test_run 1187;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1187 failed";
    (* from (.(i).#a120) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120) in
    let deepened = (.idx_mut(shallow).#a76) in
    mark_test_run 1188;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1188 failed";
    (* from (.(i).#a120.#a76) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#a76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1189;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1189 failed";
  );
  (* Deepening to (.(i).#a120.#b76) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i).#a120.#b76) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a120.#b76) in
    mark_test_run 1190;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1190 failed";
    (* from (.(i).#a120) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120) in
    let deepened = (.idx_mut(shallow).#b76) in
    mark_test_run 1191;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1191 failed";
    (* from (.(i).#a120.#b76) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#b76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1192;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1192 failed";
  );
  (* Deepening to (.(i).#a120.#b76.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i).#a120.#b76.#a30) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a120.#b76.#a30) in
    mark_test_run 1193;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1193 failed";
    (* from (.(i).#a120) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120) in
    let deepened = (.idx_mut(shallow).#b76.#a30) in
    mark_test_run 1194;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1194 failed";
    (* from (.(i).#a120.#b76) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#b76) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1195;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1195 failed";
    (* from (.(i).#a120.#b76.#a30) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#b76.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1196;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1196 failed";
  );
  (* Deepening to (.(i).#a120.#b76.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t120 array, _) idx_mut = (.(i).#a120.#b76.#b30) in
    (* from (.(i)) *)
    let shallow : (t120 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a120.#b76.#b30) in
    mark_test_run 1197;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1197 failed";
    (* from (.(i).#a120) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120) in
    let deepened = (.idx_mut(shallow).#b76.#b30) in
    mark_test_run 1198;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1198 failed";
    (* from (.(i).#a120.#b76) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#b76) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1199;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1199 failed";
    (* from (.(i).#a120.#b76.#b30) *)
    let shallow : (t120 array, _) idx_mut = (.(i).#a120.#b76.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1200;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1200 failed";
  );

  (*******************************)
  (*   t121 = #{ #{ float# } }   *)
  (*******************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t121 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t121 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1201;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1201 failed";
  );
  (* Deepening to (.(i).#a121) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t121 array, _) idx_mut = (.(i).#a121) in
    (* from (.(i)) *)
    let shallow : (t121 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a121) in
    mark_test_run 1202;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1202 failed";
    (* from (.(i).#a121) *)
    let shallow : (t121 array, _) idx_mut = (.(i).#a121) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1203;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1203 failed";
  );
  (* Deepening to (.(i).#a121.#a83) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t121 array, _) idx_mut = (.(i).#a121.#a83) in
    (* from (.(i)) *)
    let shallow : (t121 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a121.#a83) in
    mark_test_run 1204;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1204 failed";
    (* from (.(i).#a121) *)
    let shallow : (t121 array, _) idx_mut = (.(i).#a121) in
    let deepened = (.idx_mut(shallow).#a83) in
    mark_test_run 1205;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1205 failed";
    (* from (.(i).#a121.#a83) *)
    let shallow : (t121 array, _) idx_mut = (.(i).#a121.#a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1206;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1206 failed";
  );

  (***************************************)
  (*   t122 = #{ #{ float# }; float# }   *)
  (***************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t122 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t122 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1207;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1207 failed";
  );
  (* Deepening to (.(i).#a122) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t122 array, _) idx_mut = (.(i).#a122) in
    (* from (.(i)) *)
    let shallow : (t122 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a122) in
    mark_test_run 1208;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1208 failed";
    (* from (.(i).#a122) *)
    let shallow : (t122 array, _) idx_mut = (.(i).#a122) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1209;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1209 failed";
  );
  (* Deepening to (.(i).#b122) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t122 array, _) idx_mut = (.(i).#b122) in
    (* from (.(i)) *)
    let shallow : (t122 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b122) in
    mark_test_run 1210;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1210 failed";
    (* from (.(i).#b122) *)
    let shallow : (t122 array, _) idx_mut = (.(i).#b122) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1211;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1211 failed";
  );
  (* Deepening to (.(i).#a122.#a83) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t122 array, _) idx_mut = (.(i).#a122.#a83) in
    (* from (.(i)) *)
    let shallow : (t122 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a122.#a83) in
    mark_test_run 1212;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1212 failed";
    (* from (.(i).#a122) *)
    let shallow : (t122 array, _) idx_mut = (.(i).#a122) in
    let deepened = (.idx_mut(shallow).#a83) in
    mark_test_run 1213;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1213 failed";
    (* from (.(i).#a122.#a83) *)
    let shallow : (t122 array, _) idx_mut = (.(i).#a122.#a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1214;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1214 failed";
  );

  (**************************************)
  (*   t89 = #{ #{ float#; float# } }   *)
  (**************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t89 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t89 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1215;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1215 failed";
  );
  (* Deepening to (.(i).#a89) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t89 array, _) idx_mut = (.(i).#a89) in
    (* from (.(i)) *)
    let shallow : (t89 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a89) in
    mark_test_run 1216;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1216 failed";
    (* from (.(i).#a89) *)
    let shallow : (t89 array, _) idx_mut = (.(i).#a89) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1217;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1217 failed";
  );
  (* Deepening to (.(i).#a89.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t89 array, _) idx_mut = (.(i).#a89.#a84) in
    (* from (.(i)) *)
    let shallow : (t89 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a89.#a84) in
    mark_test_run 1218;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1218 failed";
    (* from (.(i).#a89) *)
    let shallow : (t89 array, _) idx_mut = (.(i).#a89) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 1219;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1219 failed";
    (* from (.(i).#a89.#a84) *)
    let shallow : (t89 array, _) idx_mut = (.(i).#a89.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1220;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1220 failed";
  );
  (* Deepening to (.(i).#a89.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t89 array, _) idx_mut = (.(i).#a89.#b84) in
    (* from (.(i)) *)
    let shallow : (t89 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a89.#b84) in
    mark_test_run 1221;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1221 failed";
    (* from (.(i).#a89) *)
    let shallow : (t89 array, _) idx_mut = (.(i).#a89) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 1222;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1222 failed";
    (* from (.(i).#a89.#b84) *)
    let shallow : (t89 array, _) idx_mut = (.(i).#a89.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1223;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1223 failed";
  );

  (***********************************************)
  (*   t123 = #{ #{ float#; float# }; float# }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t123 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t123 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1224;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1224 failed";
  );
  (* Deepening to (.(i).#a123) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t123 array, _) idx_mut = (.(i).#a123) in
    (* from (.(i)) *)
    let shallow : (t123 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a123) in
    mark_test_run 1225;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1225 failed";
    (* from (.(i).#a123) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#a123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1226;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1226 failed";
  );
  (* Deepening to (.(i).#b123) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t123 array, _) idx_mut = (.(i).#b123) in
    (* from (.(i)) *)
    let shallow : (t123 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b123) in
    mark_test_run 1227;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1227 failed";
    (* from (.(i).#b123) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#b123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1228;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1228 failed";
  );
  (* Deepening to (.(i).#a123.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t123 array, _) idx_mut = (.(i).#a123.#a84) in
    (* from (.(i)) *)
    let shallow : (t123 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a123.#a84) in
    mark_test_run 1229;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1229 failed";
    (* from (.(i).#a123) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#a123) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 1230;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1230 failed";
    (* from (.(i).#a123.#a84) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#a123.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1231;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1231 failed";
  );
  (* Deepening to (.(i).#a123.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t123 array, _) idx_mut = (.(i).#a123.#b84) in
    (* from (.(i)) *)
    let shallow : (t123 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a123.#b84) in
    mark_test_run 1232;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1232 failed";
    (* from (.(i).#a123) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#a123) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 1233;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1233 failed";
    (* from (.(i).#a123.#b84) *)
    let shallow : (t123 array, _) idx_mut = (.(i).#a123.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1234;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1234 failed";
  );

  (****************************************************)
  (*   t124 = #{ #{ float#; #{ float#; float# } } }   *)
  (****************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1235;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1235 failed";
  );
  (* Deepening to (.(i).#a124) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i).#a124) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a124) in
    mark_test_run 1236;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1236 failed";
    (* from (.(i).#a124) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1237;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1237 failed";
  );
  (* Deepening to (.(i).#a124.#a87) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i).#a124.#a87) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a124.#a87) in
    mark_test_run 1238;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1238 failed";
    (* from (.(i).#a124) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124) in
    let deepened = (.idx_mut(shallow).#a87) in
    mark_test_run 1239;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1239 failed";
    (* from (.(i).#a124.#a87) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#a87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1240;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1240 failed";
  );
  (* Deepening to (.(i).#a124.#b87) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i).#a124.#b87) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a124.#b87) in
    mark_test_run 1241;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1241 failed";
    (* from (.(i).#a124) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124) in
    let deepened = (.idx_mut(shallow).#b87) in
    mark_test_run 1242;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1242 failed";
    (* from (.(i).#a124.#b87) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#b87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1243;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1243 failed";
  );
  (* Deepening to (.(i).#a124.#b87.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i).#a124.#b87.#a84) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a124.#b87.#a84) in
    mark_test_run 1244;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1244 failed";
    (* from (.(i).#a124) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124) in
    let deepened = (.idx_mut(shallow).#b87.#a84) in
    mark_test_run 1245;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1245 failed";
    (* from (.(i).#a124.#b87) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#b87) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 1246;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1246 failed";
    (* from (.(i).#a124.#b87.#a84) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#b87.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1247;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1247 failed";
  );
  (* Deepening to (.(i).#a124.#b87.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t124 array, _) idx_mut = (.(i).#a124.#b87.#b84) in
    (* from (.(i)) *)
    let shallow : (t124 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a124.#b87.#b84) in
    mark_test_run 1248;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1248 failed";
    (* from (.(i).#a124) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124) in
    let deepened = (.idx_mut(shallow).#b87.#b84) in
    mark_test_run 1249;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1249 failed";
    (* from (.(i).#a124.#b87) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#b87) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 1250;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1250 failed";
    (* from (.(i).#a124.#b87.#b84) *)
    let shallow : (t124 array, _) idx_mut = (.(i).#a124.#b87.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1251;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1251 failed";
  );

  (*******************************************)
  (*   t125 = #{ #{ #{ int; int }; int } }   *)
  (*******************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1252;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1252 failed";
  );
  (* Deepening to (.(i).#a125) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i).#a125) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a125) in
    mark_test_run 1253;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1253 failed";
    (* from (.(i).#a125) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1254;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1254 failed";
  );
  (* Deepening to (.(i).#a125.#a95) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i).#a125.#a95) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a125.#a95) in
    mark_test_run 1255;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1255 failed";
    (* from (.(i).#a125) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125) in
    let deepened = (.idx_mut(shallow).#a95) in
    mark_test_run 1256;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1256 failed";
    (* from (.(i).#a125.#a95) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#a95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1257;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1257 failed";
  );
  (* Deepening to (.(i).#a125.#b95) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i).#a125.#b95) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a125.#b95) in
    mark_test_run 1258;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1258 failed";
    (* from (.(i).#a125) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125) in
    let deepened = (.idx_mut(shallow).#b95) in
    mark_test_run 1259;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1259 failed";
    (* from (.(i).#a125.#b95) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#b95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1260;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1260 failed";
  );
  (* Deepening to (.(i).#a125.#a95.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i).#a125.#a95.#a1) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a125.#a95.#a1) in
    mark_test_run 1261;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1261 failed";
    (* from (.(i).#a125) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125) in
    let deepened = (.idx_mut(shallow).#a95.#a1) in
    mark_test_run 1262;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1262 failed";
    (* from (.(i).#a125.#a95) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#a95) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 1263;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1263 failed";
    (* from (.(i).#a125.#a95.#a1) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#a95.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1264;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1264 failed";
  );
  (* Deepening to (.(i).#a125.#a95.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t125 array, _) idx_mut = (.(i).#a125.#a95.#b1) in
    (* from (.(i)) *)
    let shallow : (t125 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a125.#a95.#b1) in
    mark_test_run 1265;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1265 failed";
    (* from (.(i).#a125) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125) in
    let deepened = (.idx_mut(shallow).#a95.#b1) in
    mark_test_run 1266;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1266 failed";
    (* from (.(i).#a125.#a95) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#a95) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 1267;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1267 failed";
    (* from (.(i).#a125.#a95.#b1) *)
    let shallow : (t125 array, _) idx_mut = (.(i).#a125.#a95.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1268;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1268 failed";
  );

  (**********************************************)
  (*   t126 = #{ #{ #{ int; int }; int32# } }   *)
  (**********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1269;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1269 failed";
  );
  (* Deepening to (.(i).#a126) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i).#a126) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a126) in
    mark_test_run 1270;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1270 failed";
    (* from (.(i).#a126) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1271;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1271 failed";
  );
  (* Deepening to (.(i).#a126.#a96) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i).#a126.#a96) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a126.#a96) in
    mark_test_run 1272;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1272 failed";
    (* from (.(i).#a126) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126) in
    let deepened = (.idx_mut(shallow).#a96) in
    mark_test_run 1273;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1273 failed";
    (* from (.(i).#a126.#a96) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#a96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1274;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1274 failed";
  );
  (* Deepening to (.(i).#a126.#b96) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i).#a126.#b96) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a126.#b96) in
    mark_test_run 1275;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1275 failed";
    (* from (.(i).#a126) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126) in
    let deepened = (.idx_mut(shallow).#b96) in
    mark_test_run 1276;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1276 failed";
    (* from (.(i).#a126.#b96) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#b96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1277;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1277 failed";
  );
  (* Deepening to (.(i).#a126.#a96.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i).#a126.#a96.#a1) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a126.#a96.#a1) in
    mark_test_run 1278;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1278 failed";
    (* from (.(i).#a126) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126) in
    let deepened = (.idx_mut(shallow).#a96.#a1) in
    mark_test_run 1279;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1279 failed";
    (* from (.(i).#a126.#a96) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#a96) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 1280;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1280 failed";
    (* from (.(i).#a126.#a96.#a1) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#a96.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1281;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1281 failed";
  );
  (* Deepening to (.(i).#a126.#a96.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t126 array, _) idx_mut = (.(i).#a126.#a96.#b1) in
    (* from (.(i)) *)
    let shallow : (t126 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a126.#a96.#b1) in
    mark_test_run 1282;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1282 failed";
    (* from (.(i).#a126) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126) in
    let deepened = (.idx_mut(shallow).#a96.#b1) in
    mark_test_run 1283;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1283 failed";
    (* from (.(i).#a126.#a96) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#a96) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 1284;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1284 failed";
    (* from (.(i).#a126.#a96.#b1) *)
    let shallow : (t126 array, _) idx_mut = (.(i).#a126.#a96.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1285;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1285 failed";
  );

  (*********************************************)
  (*   t127 = #{ #{ #{ int; int }; float } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1286;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1286 failed";
  );
  (* Deepening to (.(i).#a127) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i).#a127) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a127) in
    mark_test_run 1287;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1287 failed";
    (* from (.(i).#a127) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1288;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1288 failed";
  );
  (* Deepening to (.(i).#a127.#a97) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i).#a127.#a97) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a127.#a97) in
    mark_test_run 1289;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1289 failed";
    (* from (.(i).#a127) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127) in
    let deepened = (.idx_mut(shallow).#a97) in
    mark_test_run 1290;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1290 failed";
    (* from (.(i).#a127.#a97) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#a97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1291;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1291 failed";
  );
  (* Deepening to (.(i).#a127.#b97) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i).#a127.#b97) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a127.#b97) in
    mark_test_run 1292;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1292 failed";
    (* from (.(i).#a127) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127) in
    let deepened = (.idx_mut(shallow).#b97) in
    mark_test_run 1293;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1293 failed";
    (* from (.(i).#a127.#b97) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#b97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1294;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1294 failed";
  );
  (* Deepening to (.(i).#a127.#a97.#a1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i).#a127.#a97.#a1) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a127.#a97.#a1) in
    mark_test_run 1295;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1295 failed";
    (* from (.(i).#a127) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127) in
    let deepened = (.idx_mut(shallow).#a97.#a1) in
    mark_test_run 1296;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1296 failed";
    (* from (.(i).#a127.#a97) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#a97) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 1297;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1297 failed";
    (* from (.(i).#a127.#a97.#a1) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#a97.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1298;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1298 failed";
  );
  (* Deepening to (.(i).#a127.#a97.#b1) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t127 array, _) idx_mut = (.(i).#a127.#a97.#b1) in
    (* from (.(i)) *)
    let shallow : (t127 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a127.#a97.#b1) in
    mark_test_run 1299;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1299 failed";
    (* from (.(i).#a127) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127) in
    let deepened = (.idx_mut(shallow).#a97.#b1) in
    mark_test_run 1300;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1300 failed";
    (* from (.(i).#a127.#a97) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#a97) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 1301;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1301 failed";
    (* from (.(i).#a127.#a97.#b1) *)
    let shallow : (t127 array, _) idx_mut = (.(i).#a127.#a97.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1302;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1302 failed";
  );

  (*************************************************)
  (*   t128 = #{ #{ #{ int; int32# }; int32# } }   *)
  (*************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1303;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1303 failed";
  );
  (* Deepening to (.(i).#a128) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i).#a128) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a128) in
    mark_test_run 1304;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1304 failed";
    (* from (.(i).#a128) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1305;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1305 failed";
  );
  (* Deepening to (.(i).#a128.#a98) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i).#a128.#a98) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a128.#a98) in
    mark_test_run 1306;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1306 failed";
    (* from (.(i).#a128) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128) in
    let deepened = (.idx_mut(shallow).#a98) in
    mark_test_run 1307;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1307 failed";
    (* from (.(i).#a128.#a98) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#a98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1308;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1308 failed";
  );
  (* Deepening to (.(i).#a128.#b98) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i).#a128.#b98) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a128.#b98) in
    mark_test_run 1309;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1309 failed";
    (* from (.(i).#a128) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128) in
    let deepened = (.idx_mut(shallow).#b98) in
    mark_test_run 1310;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1310 failed";
    (* from (.(i).#a128.#b98) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#b98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1311;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1311 failed";
  );
  (* Deepening to (.(i).#a128.#a98.#a7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i).#a128.#a98.#a7) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a128.#a98.#a7) in
    mark_test_run 1312;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1312 failed";
    (* from (.(i).#a128) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128) in
    let deepened = (.idx_mut(shallow).#a98.#a7) in
    mark_test_run 1313;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1313 failed";
    (* from (.(i).#a128.#a98) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#a98) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 1314;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1314 failed";
    (* from (.(i).#a128.#a98.#a7) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#a98.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1315;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1315 failed";
  );
  (* Deepening to (.(i).#a128.#a98.#b7) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t128 array, _) idx_mut = (.(i).#a128.#a98.#b7) in
    (* from (.(i)) *)
    let shallow : (t128 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a128.#a98.#b7) in
    mark_test_run 1316;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1316 failed";
    (* from (.(i).#a128) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128) in
    let deepened = (.idx_mut(shallow).#a98.#b7) in
    mark_test_run 1317;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1317 failed";
    (* from (.(i).#a128.#a98) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#a98) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 1318;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1318 failed";
    (* from (.(i).#a128.#a98.#b7) *)
    let shallow : (t128 array, _) idx_mut = (.(i).#a128.#a98.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1319;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1319 failed";
  );

  (*********************************************)
  (*   t129 = #{ #{ #{ int; float }; int } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1320;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1320 failed";
  );
  (* Deepening to (.(i).#a129) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i).#a129) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a129) in
    mark_test_run 1321;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1321 failed";
    (* from (.(i).#a129) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1322;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1322 failed";
  );
  (* Deepening to (.(i).#a129.#a99) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i).#a129.#a99) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a129.#a99) in
    mark_test_run 1323;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1323 failed";
    (* from (.(i).#a129) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129) in
    let deepened = (.idx_mut(shallow).#a99) in
    mark_test_run 1324;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1324 failed";
    (* from (.(i).#a129.#a99) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#a99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1325;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1325 failed";
  );
  (* Deepening to (.(i).#a129.#b99) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i).#a129.#b99) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a129.#b99) in
    mark_test_run 1326;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1326 failed";
    (* from (.(i).#a129) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129) in
    let deepened = (.idx_mut(shallow).#b99) in
    mark_test_run 1327;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1327 failed";
    (* from (.(i).#a129.#b99) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#b99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1328;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1328 failed";
  );
  (* Deepening to (.(i).#a129.#a99.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i).#a129.#a99.#a10) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a129.#a99.#a10) in
    mark_test_run 1329;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1329 failed";
    (* from (.(i).#a129) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129) in
    let deepened = (.idx_mut(shallow).#a99.#a10) in
    mark_test_run 1330;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1330 failed";
    (* from (.(i).#a129.#a99) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#a99) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 1331;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1331 failed";
    (* from (.(i).#a129.#a99.#a10) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#a99.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1332;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1332 failed";
  );
  (* Deepening to (.(i).#a129.#a99.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t129 array, _) idx_mut = (.(i).#a129.#a99.#b10) in
    (* from (.(i)) *)
    let shallow : (t129 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a129.#a99.#b10) in
    mark_test_run 1333;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1333 failed";
    (* from (.(i).#a129) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129) in
    let deepened = (.idx_mut(shallow).#a99.#b10) in
    mark_test_run 1334;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1334 failed";
    (* from (.(i).#a129.#a99) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#a99) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 1335;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1335 failed";
    (* from (.(i).#a129.#a99.#b10) *)
    let shallow : (t129 array, _) idx_mut = (.(i).#a129.#a99.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1336;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1336 failed";
  );

  (***********************************************)
  (*   t130 = #{ #{ #{ int; float }; float } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1337;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1337 failed";
  );
  (* Deepening to (.(i).#a130) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i).#a130) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a130) in
    mark_test_run 1338;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1338 failed";
    (* from (.(i).#a130) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1339;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1339 failed";
  );
  (* Deepening to (.(i).#a130.#a100) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i).#a130.#a100) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a130.#a100) in
    mark_test_run 1340;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1340 failed";
    (* from (.(i).#a130) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130) in
    let deepened = (.idx_mut(shallow).#a100) in
    mark_test_run 1341;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1341 failed";
    (* from (.(i).#a130.#a100) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#a100) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1342;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1342 failed";
  );
  (* Deepening to (.(i).#a130.#b100) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i).#a130.#b100) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a130.#b100) in
    mark_test_run 1343;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1343 failed";
    (* from (.(i).#a130) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130) in
    let deepened = (.idx_mut(shallow).#b100) in
    mark_test_run 1344;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1344 failed";
    (* from (.(i).#a130.#b100) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#b100) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1345;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1345 failed";
  );
  (* Deepening to (.(i).#a130.#a100.#a10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i).#a130.#a100.#a10) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a130.#a100.#a10) in
    mark_test_run 1346;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1346 failed";
    (* from (.(i).#a130) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130) in
    let deepened = (.idx_mut(shallow).#a100.#a10) in
    mark_test_run 1347;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1347 failed";
    (* from (.(i).#a130.#a100) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#a100) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 1348;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1348 failed";
    (* from (.(i).#a130.#a100.#a10) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#a100.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1349;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1349 failed";
  );
  (* Deepening to (.(i).#a130.#a100.#b10) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t130 array, _) idx_mut = (.(i).#a130.#a100.#b10) in
    (* from (.(i)) *)
    let shallow : (t130 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a130.#a100.#b10) in
    mark_test_run 1350;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1350 failed";
    (* from (.(i).#a130) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130) in
    let deepened = (.idx_mut(shallow).#a100.#b10) in
    mark_test_run 1351;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1351 failed";
    (* from (.(i).#a130.#a100) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#a100) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 1352;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1352 failed";
    (* from (.(i).#a130.#a100.#b10) *)
    let shallow : (t130 array, _) idx_mut = (.(i).#a130.#a100.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1353;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1353 failed";
  );

  (****************************************************)
  (*   t131 = #{ #{ #{ int32#; int32# }; int32# } }   *)
  (****************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1354;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1354 failed";
  );
  (* Deepening to (.(i).#a131) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i).#a131) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a131) in
    mark_test_run 1355;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1355 failed";
    (* from (.(i).#a131) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1356;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1356 failed";
  );
  (* Deepening to (.(i).#a131.#a109) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i).#a131.#a109) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a131.#a109) in
    mark_test_run 1357;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1357 failed";
    (* from (.(i).#a131) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131) in
    let deepened = (.idx_mut(shallow).#a109) in
    mark_test_run 1358;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1358 failed";
    (* from (.(i).#a131.#a109) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#a109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1359;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1359 failed";
  );
  (* Deepening to (.(i).#a131.#b109) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i).#a131.#b109) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a131.#b109) in
    mark_test_run 1360;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1360 failed";
    (* from (.(i).#a131) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131) in
    let deepened = (.idx_mut(shallow).#b109) in
    mark_test_run 1361;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1361 failed";
    (* from (.(i).#a131.#b109) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#b109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1362;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1362 failed";
  );
  (* Deepening to (.(i).#a131.#a109.#a24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i).#a131.#a109.#a24) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a131.#a109.#a24) in
    mark_test_run 1363;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1363 failed";
    (* from (.(i).#a131) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131) in
    let deepened = (.idx_mut(shallow).#a109.#a24) in
    mark_test_run 1364;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1364 failed";
    (* from (.(i).#a131.#a109) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#a109) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1365;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1365 failed";
    (* from (.(i).#a131.#a109.#a24) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#a109.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1366;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1366 failed";
  );
  (* Deepening to (.(i).#a131.#a109.#b24) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t131 array, _) idx_mut = (.(i).#a131.#a109.#b24) in
    (* from (.(i)) *)
    let shallow : (t131 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a131.#a109.#b24) in
    mark_test_run 1367;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1367 failed";
    (* from (.(i).#a131) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131) in
    let deepened = (.idx_mut(shallow).#a109.#b24) in
    mark_test_run 1368;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1368 failed";
    (* from (.(i).#a131.#a109) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#a109) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1369;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1369 failed";
    (* from (.(i).#a131.#a109.#b24) *)
    let shallow : (t131 array, _) idx_mut = (.(i).#a131.#a109.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1370;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1370 failed";
  );

  (*********************************************)
  (*   t132 = #{ #{ #{ float; int }; int } }   *)
  (*********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1371;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1371 failed";
  );
  (* Deepening to (.(i).#a132) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i).#a132) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a132) in
    mark_test_run 1372;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1372 failed";
    (* from (.(i).#a132) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1373;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1373 failed";
  );
  (* Deepening to (.(i).#a132.#a113) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i).#a132.#a113) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a132.#a113) in
    mark_test_run 1374;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1374 failed";
    (* from (.(i).#a132) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132) in
    let deepened = (.idx_mut(shallow).#a113) in
    mark_test_run 1375;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1375 failed";
    (* from (.(i).#a132.#a113) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#a113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1376;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1376 failed";
  );
  (* Deepening to (.(i).#a132.#b113) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i).#a132.#b113) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a132.#b113) in
    mark_test_run 1377;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1377 failed";
    (* from (.(i).#a132) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132) in
    let deepened = (.idx_mut(shallow).#b113) in
    mark_test_run 1378;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1378 failed";
    (* from (.(i).#a132.#b113) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#b113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1379;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1379 failed";
  );
  (* Deepening to (.(i).#a132.#a113.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i).#a132.#a113.#a28) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a132.#a113.#a28) in
    mark_test_run 1380;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1380 failed";
    (* from (.(i).#a132) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132) in
    let deepened = (.idx_mut(shallow).#a113.#a28) in
    mark_test_run 1381;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1381 failed";
    (* from (.(i).#a132.#a113) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#a113) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1382;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1382 failed";
    (* from (.(i).#a132.#a113.#a28) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#a113.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1383;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1383 failed";
  );
  (* Deepening to (.(i).#a132.#a113.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t132 array, _) idx_mut = (.(i).#a132.#a113.#b28) in
    (* from (.(i)) *)
    let shallow : (t132 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a132.#a113.#b28) in
    mark_test_run 1384;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1384 failed";
    (* from (.(i).#a132) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132) in
    let deepened = (.idx_mut(shallow).#a113.#b28) in
    mark_test_run 1385;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1385 failed";
    (* from (.(i).#a132.#a113) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#a113) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1386;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1386 failed";
    (* from (.(i).#a132.#a113.#b28) *)
    let shallow : (t132 array, _) idx_mut = (.(i).#a132.#a113.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1387;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1387 failed";
  );

  (***********************************************)
  (*   t133 = #{ #{ #{ float; int }; float } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1388;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1388 failed";
  );
  (* Deepening to (.(i).#a133) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i).#a133) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a133) in
    mark_test_run 1389;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1389 failed";
    (* from (.(i).#a133) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1390;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1390 failed";
  );
  (* Deepening to (.(i).#a133.#a114) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i).#a133.#a114) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a133.#a114) in
    mark_test_run 1391;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1391 failed";
    (* from (.(i).#a133) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133) in
    let deepened = (.idx_mut(shallow).#a114) in
    mark_test_run 1392;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1392 failed";
    (* from (.(i).#a133.#a114) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#a114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1393;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1393 failed";
  );
  (* Deepening to (.(i).#a133.#b114) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i).#a133.#b114) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a133.#b114) in
    mark_test_run 1394;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1394 failed";
    (* from (.(i).#a133) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133) in
    let deepened = (.idx_mut(shallow).#b114) in
    mark_test_run 1395;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1395 failed";
    (* from (.(i).#a133.#b114) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#b114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1396;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1396 failed";
  );
  (* Deepening to (.(i).#a133.#a114.#a28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i).#a133.#a114.#a28) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a133.#a114.#a28) in
    mark_test_run 1397;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1397 failed";
    (* from (.(i).#a133) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133) in
    let deepened = (.idx_mut(shallow).#a114.#a28) in
    mark_test_run 1398;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1398 failed";
    (* from (.(i).#a133.#a114) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#a114) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 1399;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1399 failed";
    (* from (.(i).#a133.#a114.#a28) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#a114.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1400;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1400 failed";
  );
  (* Deepening to (.(i).#a133.#a114.#b28) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t133 array, _) idx_mut = (.(i).#a133.#a114.#b28) in
    (* from (.(i)) *)
    let shallow : (t133 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a133.#a114.#b28) in
    mark_test_run 1401;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1401 failed";
    (* from (.(i).#a133) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133) in
    let deepened = (.idx_mut(shallow).#a114.#b28) in
    mark_test_run 1402;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1402 failed";
    (* from (.(i).#a133.#a114) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#a114) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 1403;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1403 failed";
    (* from (.(i).#a133.#a114.#b28) *)
    let shallow : (t133 array, _) idx_mut = (.(i).#a133.#a114.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1404;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1404 failed";
  );

  (***********************************************)
  (*   t134 = #{ #{ #{ float; float }; int } }   *)
  (***********************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1405;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1405 failed";
  );
  (* Deepening to (.(i).#a134) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i).#a134) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a134) in
    mark_test_run 1406;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1406 failed";
    (* from (.(i).#a134) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1407;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1407 failed";
  );
  (* Deepening to (.(i).#a134.#a115) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i).#a134.#a115) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a134.#a115) in
    mark_test_run 1408;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1408 failed";
    (* from (.(i).#a134) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134) in
    let deepened = (.idx_mut(shallow).#a115) in
    mark_test_run 1409;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1409 failed";
    (* from (.(i).#a134.#a115) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#a115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1410;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1410 failed";
  );
  (* Deepening to (.(i).#a134.#b115) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i).#a134.#b115) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a134.#b115) in
    mark_test_run 1411;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1411 failed";
    (* from (.(i).#a134) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134) in
    let deepened = (.idx_mut(shallow).#b115) in
    mark_test_run 1412;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1412 failed";
    (* from (.(i).#a134.#b115) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#b115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1413;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1413 failed";
  );
  (* Deepening to (.(i).#a134.#a115.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i).#a134.#a115.#a30) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a134.#a115.#a30) in
    mark_test_run 1414;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1414 failed";
    (* from (.(i).#a134) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134) in
    let deepened = (.idx_mut(shallow).#a115.#a30) in
    mark_test_run 1415;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1415 failed";
    (* from (.(i).#a134.#a115) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#a115) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1416;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1416 failed";
    (* from (.(i).#a134.#a115.#a30) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#a115.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1417;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1417 failed";
  );
  (* Deepening to (.(i).#a134.#a115.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t134 array, _) idx_mut = (.(i).#a134.#a115.#b30) in
    (* from (.(i)) *)
    let shallow : (t134 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a134.#a115.#b30) in
    mark_test_run 1418;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1418 failed";
    (* from (.(i).#a134) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134) in
    let deepened = (.idx_mut(shallow).#a115.#b30) in
    mark_test_run 1419;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1419 failed";
    (* from (.(i).#a134.#a115) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#a115) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1420;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1420 failed";
    (* from (.(i).#a134.#a115.#b30) *)
    let shallow : (t134 array, _) idx_mut = (.(i).#a134.#a115.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1421;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1421 failed";
  );

  (*************************************************)
  (*   t135 = #{ #{ #{ float; float }; float } }   *)
  (*************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1422;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1422 failed";
  );
  (* Deepening to (.(i).#a135) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i).#a135) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a135) in
    mark_test_run 1423;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1423 failed";
    (* from (.(i).#a135) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1424;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1424 failed";
  );
  (* Deepening to (.(i).#a135.#a116) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i).#a135.#a116) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a135.#a116) in
    mark_test_run 1425;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1425 failed";
    (* from (.(i).#a135) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135) in
    let deepened = (.idx_mut(shallow).#a116) in
    mark_test_run 1426;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1426 failed";
    (* from (.(i).#a135.#a116) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#a116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1427;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1427 failed";
  );
  (* Deepening to (.(i).#a135.#b116) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i).#a135.#b116) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a135.#b116) in
    mark_test_run 1428;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1428 failed";
    (* from (.(i).#a135) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135) in
    let deepened = (.idx_mut(shallow).#b116) in
    mark_test_run 1429;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1429 failed";
    (* from (.(i).#a135.#b116) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#b116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1430;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1430 failed";
  );
  (* Deepening to (.(i).#a135.#a116.#a30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i).#a135.#a116.#a30) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a135.#a116.#a30) in
    mark_test_run 1431;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1431 failed";
    (* from (.(i).#a135) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135) in
    let deepened = (.idx_mut(shallow).#a116.#a30) in
    mark_test_run 1432;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1432 failed";
    (* from (.(i).#a135.#a116) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#a116) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1433;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1433 failed";
    (* from (.(i).#a135.#a116.#a30) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#a116.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1434;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1434 failed";
  );
  (* Deepening to (.(i).#a135.#a116.#b30) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t135 array, _) idx_mut = (.(i).#a135.#a116.#b30) in
    (* from (.(i)) *)
    let shallow : (t135 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a135.#a116.#b30) in
    mark_test_run 1435;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1435 failed";
    (* from (.(i).#a135) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135) in
    let deepened = (.idx_mut(shallow).#a116.#b30) in
    mark_test_run 1436;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1436 failed";
    (* from (.(i).#a135.#a116) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#a116) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 1437;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1437 failed";
    (* from (.(i).#a135.#a116.#b30) *)
    let shallow : (t135 array, _) idx_mut = (.(i).#a135.#a116.#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1438;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1438 failed";
  );

  (****************************************************)
  (*   t136 = #{ #{ #{ float#; float# }; float# } }   *)
  (****************************************************)
  (* Deepening to (.(i)) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i)) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1439;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1439 failed";
  );
  (* Deepening to (.(i).#a136) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i).#a136) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a136) in
    mark_test_run 1440;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1440 failed";
    (* from (.(i).#a136) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1441;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1441 failed";
  );
  (* Deepening to (.(i).#a136.#a123) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i).#a136.#a123) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a136.#a123) in
    mark_test_run 1442;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1442 failed";
    (* from (.(i).#a136) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136) in
    let deepened = (.idx_mut(shallow).#a123) in
    mark_test_run 1443;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1443 failed";
    (* from (.(i).#a136.#a123) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#a123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1444;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1444 failed";
  );
  (* Deepening to (.(i).#a136.#b123) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i).#a136.#b123) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a136.#b123) in
    mark_test_run 1445;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1445 failed";
    (* from (.(i).#a136) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136) in
    let deepened = (.idx_mut(shallow).#b123) in
    mark_test_run 1446;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1446 failed";
    (* from (.(i).#a136.#b123) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#b123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1447;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1447 failed";
  );
  (* Deepening to (.(i).#a136.#a123.#a84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i).#a136.#a123.#a84) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a136.#a123.#a84) in
    mark_test_run 1448;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1448 failed";
    (* from (.(i).#a136) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136) in
    let deepened = (.idx_mut(shallow).#a123.#a84) in
    mark_test_run 1449;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1449 failed";
    (* from (.(i).#a136.#a123) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#a123) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 1450;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1450 failed";
    (* from (.(i).#a136.#a123.#a84) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#a123.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1451;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1451 failed";
  );
  (* Deepening to (.(i).#a136.#a123.#b84) *)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t136 array, _) idx_mut = (.(i).#a136.#a123.#b84) in
    (* from (.(i)) *)
    let shallow : (t136 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a136.#a123.#b84) in
    mark_test_run 1452;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1452 failed";
    (* from (.(i).#a136) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136) in
    let deepened = (.idx_mut(shallow).#a123.#b84) in
    mark_test_run 1453;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1453 failed";
    (* from (.(i).#a136.#a123) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#a123) in
    let deepened = (.idx_mut(shallow).#b84) in
    mark_test_run 1454;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1454 failed";
    (* from (.(i).#a136.#a123.#b84) *)
    let shallow : (t136 array, _) idx_mut = (.(i).#a136.#a123.#b84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1455;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1455 failed";
  );

  ()
;;

for i = 1 to 1455 do
  if not (Int_set.mem i !tests_run) then failwithf "test %d not run" i
done;;
let () = Printf.printf "All tests passed.%!\n";;
