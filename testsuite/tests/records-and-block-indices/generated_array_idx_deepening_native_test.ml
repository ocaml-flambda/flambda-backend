(* TEST
 include stdlib_stable;
 include stdlib_upstream_compatible;
 modules = "stubs.c";
 flags = "-extension simd_beta -extension layouts_alpha";
 flambda2;
 stack-allocation;
 native;
*)
(** This is code generated by [generate_block_tests.ml]. *)

[@@@warning "-23"]
external globalize : local_ 'a -> 'a = "%obj_dup";;
external box_int64x2 : int64x2# -> int64x2 = "%box_vec128"
external unbox_int64x2 : int64x2 -> int64x2# = "%unbox_vec128"
external interleave_low_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_low_64" [@@unboxed] [@@builtin]
external interleave_high_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_high_64" [@@unboxed] [@@builtin]
external int64x2_of_int64 : int64 -> int64x2# = "caml_vec128_unreachable" "caml_int64x2_low_of_int64" [@@unboxed] [@@builtin]
external int64_of_int64x2 : int64x2# -> int64 = "caml_vec128_unreachable" "caml_int64x2_low_to_int64" [@@unboxed] [@@builtin]

let int64x2_u_equal i1 i2 =
    let a1 = int64_of_int64x2 i1 in
    let b1 = int64_of_int64x2 (interleave_high_64 i1 i1) in
    let a2 = int64_of_int64x2 i2 in
    let b2 = int64_of_int64x2 (interleave_high_64 i2 i2) in
    Int64.equal a1 a2 && Int64.equal b1 b2

open Stdlib_upstream_compatible
open Stdlib_stable

external[@layout_poly] makearray_dynamic_local :
  ('a : any_non_null) . int -> 'a -> 'a array @ local =
  "%makearray_dynamic"

external[@layout_poly] makearray_dynamic :
  ('a : any_non_null) . int -> 'a -> 'a array =
  "%makearray_dynamic"

external[@layout_poly] get :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a =
  "%array_safe_get"

external[@layout_poly] set :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a -> unit =
  "%array_safe_set"

external[@layout_poly] get_idx_imm :
  'a ('b : any). ('a [@local_opt]) -> ('a, 'b) idx_imm -> ('b [@local_opt]) =
  "%unsafe_get_idx_imm"

external[@layout_poly] get_idx_mut :
  'a ('b : any). ('a [@local_opt]) -> ('a, 'b) idx_mut -> ('b [@local_opt]) =
  "%unsafe_get_idx"

external[@layout_poly] set_idx_mut :
  'a ('b : any).
    ('a [@local_opt]) -> ('a, 'b) idx_mut -> ('b [@local_opt]) -> unit =
  "%unsafe_set_idx"

module Idx_repr : sig
  type t
  val of_idx_imm : 'a ('b : any). ('a, 'b) idx_imm -> t
  val of_idx_mut : 'a ('b : any). ('a, 'b) idx_mut -> t
  val equal : t -> t -> bool
  val debug_string : t -> string
end = struct
  (* See Note [Representation of block indices] in [lambda/translcore.ml] *)
  type t =
    | Bytecode of { path : int list }
    | Native of { offset : int; gap : int }

  external magic_box_bits64 : ('a : bits64) 'b . 'a -> 'b =
    "%box_int64"
  external lessthan_if_bytecode : int -> int -> bool =
    "caml_lessthan" "caml_greaterthan"

  let of_idx idx =
    let is_bytecode = lessthan_if_bytecode 0 1 in
    if is_bytecode then
      let r = Obj.repr (magic_box_bits64 idx) in
      let nth_idx n : int = Obj.magic (Obj.field r n) in
      let path = List.init (Obj.size r) nth_idx in
      Bytecode { path }
    else
      let i : int64 = magic_box_bits64 idx in
      let offset =
        Int64.(logand (sub (shift_left one 48) one)) i
        |> Int64.to_int
      in
      let gap =
        Int64.shift_right i 48
        |> Int64.to_int
      in
      Native { offset; gap }

  let of_idx_imm = of_idx
  let of_idx_mut = of_idx

  let equal t1 t2 =
    match t1, t2 with
    | Bytecode { path = path1 }, Bytecode { path = path2 } ->
      List.equal Int.equal path1 path2
    | Native { gap = gap1; offset = offset1 },
      Native { gap = gap2; offset = offset2 } ->
      Int.equal gap1 gap2 && Int.equal offset1 offset2
    | Bytecode _, Native _ | Native _, Bytecode _ -> assert false

  let debug_string = function
    | Bytecode { path } ->
      Printf.sprintf "{ %s }"
        (String.concat "; " (List.map Int.to_string path))
    | Native { offset; gap } ->
      Printf.sprintf "offset %d; gap %d" offset gap
end

let failwithf fmt = Printf.ksprintf failwith fmt

(* Redefine iter to infer locality *)
let rec iter ~f = function
    [] -> ()
  | a::l -> f a; iter ~f l

module Int_set = Set.Make(Int)

let tests_run = ref Int_set.empty

let mark_test_run test_id =
  tests_run := Int_set.add test_id !tests_run

(* Various interesting values *)

let sizes = [ 0; 1; 2; 30 ]

let indices_in_deepening_tests = [0; 100_000]


type t0 = #{ a0 : int }
type t1 = #{ a1 : int; b1 : int }
type t2 = #{ a2 : int; b2 : int; c2 : int }
type t3 = #{ a3 : int; b3 : int; c3 : int32# }
type t4 = #{ a4 : int; b4 : int; c4 : float }
type t5 = #{ a5 : int; b5 : int64 }
type t6 = #{ a6 : int; b6 : int64# }
type t7 = #{ a7 : int; b7 : int32# }
type t8 = #{ a8 : int; b8 : int32#; c8 : int32# }
type t9 = #{ a9 : int; b9 : nativeint# }
type t10 = #{ a10 : int; b10 : float }
type t11 = #{ a11 : int; b11 : float; c11 : int }
type t12 = #{ a12 : int; b12 : float; c12 : float }
type t13 = #{ a13 : int; b13 : t0 }
type t14 = #{ a14 : int; b14 : t1 }
type t15 = #{ a15 : int; b15 : t7 }
type t16 = #{ a16 : int; b16 : t10 }
type t17 = #{ a17 : int32# }
type t18 = #{ a18 : int; b18 : t17 }
type t19 = #{ a19 : int32#; b19 : int32# }
type t20 = #{ a20 : int; b20 : t19 }
type t21 = #{ a21 : float }
type t22 = #{ a22 : int; b22 : t21 }
type t23 = #{ a23 : float; b23 : int }
type t24 = #{ a24 : int; b24 : t23 }
type t25 = #{ a25 : float; b25 : float }
type t26 = #{ a26 : int; b26 : t25 }
type t27 = #{ a27 : int64 }
type t28 = #{ a28 : int64; b28 : int }
type t29 = #{ a29 : int64; b29 : int64 }
type t30 = #{ a30 : int64; b30 : float }
type t31 = #{ a31 : int64# }
type t32 = #{ a32 : int64#; b32 : int64# }
type t33 = #{ a33 : int64#; b33 : int32# }
type t34 = #{ a34 : int64#; b34 : nativeint# }
type t35 = #{ a35 : int32#; b35 : int64# }
type t36 = #{ a36 : int32#; b36 : int32#; c36 : int32# }
type t37 = #{ a37 : int32#; b37 : nativeint# }
type t38 = #{ a38 : int32#; b38 : t17 }
type t39 = #{ a39 : int32#; b39 : t19 }
type t40 = #{ a40 : nativeint# }
type t41 = #{ a41 : nativeint#; b41 : int64# }
type t42 = #{ a42 : nativeint#; b42 : int32# }
type t43 = #{ a43 : nativeint#; b43 : nativeint# }
type t44 = #{ a44 : float; b44 : int; c44 : int }
type t45 = #{ a45 : float; b45 : int; c45 : float }
type t46 = #{ a46 : float; b46 : int64 }
type t47 = #{ a47 : float; b47 : float; c47 : int }
type t48 = #{ a48 : float; b48 : float; c48 : float }
type t49 = #{ a49 : float; b49 : t0 }
type t50 = #{ a50 : float; b50 : t1 }
type t51 = #{ a51 : float; b51 : t10 }
type t52 = #{ a52 : float; b52 : t21 }
type t53 = #{ a53 : float; b53 : t23 }
type t54 = #{ a54 : float; b54 : t25 }
type t55 = #{ a55 : t0 }
type t56 = #{ a56 : t0; b56 : int }
type t57 = #{ a57 : t0; b57 : int32# }
type t58 = #{ a58 : t0; b58 : float }
type t59 = #{ a59 : t1 }
type t60 = #{ a60 : t1; b60 : int }
type t61 = #{ a61 : t1; b61 : int32# }
type t62 = #{ a62 : t1; b62 : float }
type t63 = #{ a63 : t7 }
type t64 = #{ a64 : t7; b64 : int32# }
type t65 = #{ a65 : t10 }
type t66 = #{ a66 : t10; b66 : int }
type t67 = #{ a67 : t10; b67 : float }
type t68 = #{ a68 : t17 }
type t69 = #{ a69 : t17; b69 : int32# }
type t70 = #{ a70 : t19 }
type t71 = #{ a71 : t19; b71 : int32# }
type t72 = #{ a72 : t21; b72 : int }
type t73 = #{ a73 : t21; b73 : float }
type t74 = #{ a74 : t23 }
type t75 = #{ a75 : t23; b75 : int }
type t76 = #{ a76 : t23; b76 : float }
type t77 = #{ a77 : t25 }
type t78 = #{ a78 : t25; b78 : int }
type t79 = #{ a79 : t25; b79 : float }

let () =
  (***********)
  (*   int   *)
  (***********)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int array, _) idx_mut = (.(i)) in
    let shallow : (int array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1 failed";
  );

  (*************)
  (*   int64   *)
  (*************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int64 array, _) idx_mut = (.(i)) in
    let shallow : (int64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 2;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 2 failed";
  );

  (**************)
  (*   int64#   *)
  (**************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int64# array, _) idx_mut = (.(i)) in
    let shallow : (int64# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 3;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 3 failed";
  );

  (**************)
  (*   int32#   *)
  (**************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (int32# array, _) idx_mut = (.(i)) in
    let shallow : (int32# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 4;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 4 failed";
  );

  (******************)
  (*   nativeint#   *)
  (******************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (nativeint# array, _) idx_mut = (.(i)) in
    let shallow : (nativeint# array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 5;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 5 failed";
  );

  (*********************)
  (*   t0 = #{ int }   *)
  (*********************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t0 array, _) idx_mut = (.(i)) in
    let shallow : (t0 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 6;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 6 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t0 array, _) idx_mut = (.(i).#a0) in
    let shallow : (t0 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 7;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 7 failed";
    let shallow : (t0 array, _) idx_mut = (.(i).#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 8;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 8 failed";
  );

  (**************************)
  (*   t1 = #{ int; int }   *)
  (**************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i)) in
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 9;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 9 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i).#a1) in
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 10;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 10 failed";
    let shallow : (t1 array, _) idx_mut = (.(i).#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 11;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 11 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t1 array, _) idx_mut = (.(i).#b1) in
    let shallow : (t1 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 12;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 12 failed";
    let shallow : (t1 array, _) idx_mut = (.(i).#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 13;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 13 failed";
  );

  (*******************************)
  (*   t2 = #{ int; int; int }   *)
  (*******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i)) in
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 14;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 14 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#a2) in
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a2) in
    mark_test_run 15;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 15 failed";
    let shallow : (t2 array, _) idx_mut = (.(i).#a2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 16;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 16 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#b2) in
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b2) in
    mark_test_run 17;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 17 failed";
    let shallow : (t2 array, _) idx_mut = (.(i).#b2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 18;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 18 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t2 array, _) idx_mut = (.(i).#c2) in
    let shallow : (t2 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c2) in
    mark_test_run 19;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 19 failed";
    let shallow : (t2 array, _) idx_mut = (.(i).#c2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 20;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 20 failed";
  );

  (**********************************)
  (*   t3 = #{ int; int; int32# }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i)) in
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 21;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 21 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#a3) in
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a3) in
    mark_test_run 22;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 22 failed";
    let shallow : (t3 array, _) idx_mut = (.(i).#a3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 23;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 23 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#b3) in
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b3) in
    mark_test_run 24;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 24 failed";
    let shallow : (t3 array, _) idx_mut = (.(i).#b3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 25;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 25 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t3 array, _) idx_mut = (.(i).#c3) in
    let shallow : (t3 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c3) in
    mark_test_run 26;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 26 failed";
    let shallow : (t3 array, _) idx_mut = (.(i).#c3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 27;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 27 failed";
  );

  (*********************************)
  (*   t4 = #{ int; int; float }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i)) in
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 28;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 28 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#a4) in
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a4) in
    mark_test_run 29;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 29 failed";
    let shallow : (t4 array, _) idx_mut = (.(i).#a4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 30;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 30 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#b4) in
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b4) in
    mark_test_run 31;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 31 failed";
    let shallow : (t4 array, _) idx_mut = (.(i).#b4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 32;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 32 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t4 array, _) idx_mut = (.(i).#c4) in
    let shallow : (t4 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c4) in
    mark_test_run 33;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 33 failed";
    let shallow : (t4 array, _) idx_mut = (.(i).#c4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 34;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 34 failed";
  );

  (****************************)
  (*   t5 = #{ int; int64 }   *)
  (****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i)) in
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 35;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 35 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i).#a5) in
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a5) in
    mark_test_run 36;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 36 failed";
    let shallow : (t5 array, _) idx_mut = (.(i).#a5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 37;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 37 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t5 array, _) idx_mut = (.(i).#b5) in
    let shallow : (t5 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b5) in
    mark_test_run 38;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 38 failed";
    let shallow : (t5 array, _) idx_mut = (.(i).#b5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 39;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 39 failed";
  );

  (*****************************)
  (*   t6 = #{ int; int64# }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i)) in
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 40;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 40 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i).#a6) in
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a6) in
    mark_test_run 41;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 41 failed";
    let shallow : (t6 array, _) idx_mut = (.(i).#a6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 42;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 42 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t6 array, _) idx_mut = (.(i).#b6) in
    let shallow : (t6 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b6) in
    mark_test_run 43;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 43 failed";
    let shallow : (t6 array, _) idx_mut = (.(i).#b6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 44;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 44 failed";
  );

  (*****************************)
  (*   t7 = #{ int; int32# }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i)) in
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 45;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 45 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i).#a7) in
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 46;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 46 failed";
    let shallow : (t7 array, _) idx_mut = (.(i).#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 47;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 47 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t7 array, _) idx_mut = (.(i).#b7) in
    let shallow : (t7 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 48;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 48 failed";
    let shallow : (t7 array, _) idx_mut = (.(i).#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 49;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 49 failed";
  );

  (*************************************)
  (*   t8 = #{ int; int32#; int32# }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i)) in
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 50;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 50 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#a8) in
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a8) in
    mark_test_run 51;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 51 failed";
    let shallow : (t8 array, _) idx_mut = (.(i).#a8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 52;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 52 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#b8) in
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b8) in
    mark_test_run 53;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 53 failed";
    let shallow : (t8 array, _) idx_mut = (.(i).#b8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 54;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 54 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t8 array, _) idx_mut = (.(i).#c8) in
    let shallow : (t8 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c8) in
    mark_test_run 55;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 55 failed";
    let shallow : (t8 array, _) idx_mut = (.(i).#c8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 56;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 56 failed";
  );

  (*********************************)
  (*   t9 = #{ int; nativeint# }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i)) in
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 57;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 57 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i).#a9) in
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a9) in
    mark_test_run 58;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 58 failed";
    let shallow : (t9 array, _) idx_mut = (.(i).#a9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 59;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 59 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t9 array, _) idx_mut = (.(i).#b9) in
    let shallow : (t9 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b9) in
    mark_test_run 60;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 60 failed";
    let shallow : (t9 array, _) idx_mut = (.(i).#b9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 61;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 61 failed";
  );

  (*****************************)
  (*   t10 = #{ int; float }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i)) in
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 62;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 62 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i).#a10) in
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 63;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 63 failed";
    let shallow : (t10 array, _) idx_mut = (.(i).#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 64;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 64 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t10 array, _) idx_mut = (.(i).#b10) in
    let shallow : (t10 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 65;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 65 failed";
    let shallow : (t10 array, _) idx_mut = (.(i).#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 66;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 66 failed";
  );

  (**********************************)
  (*   t11 = #{ int; float; int }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i)) in
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 67;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 67 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#a11) in
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a11) in
    mark_test_run 68;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 68 failed";
    let shallow : (t11 array, _) idx_mut = (.(i).#a11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 69;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 69 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#b11) in
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b11) in
    mark_test_run 70;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 70 failed";
    let shallow : (t11 array, _) idx_mut = (.(i).#b11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 71;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 71 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t11 array, _) idx_mut = (.(i).#c11) in
    let shallow : (t11 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c11) in
    mark_test_run 72;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 72 failed";
    let shallow : (t11 array, _) idx_mut = (.(i).#c11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 73;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 73 failed";
  );

  (************************************)
  (*   t12 = #{ int; float; float }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i)) in
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 74;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 74 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#a12) in
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a12) in
    mark_test_run 75;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 75 failed";
    let shallow : (t12 array, _) idx_mut = (.(i).#a12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 76;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 76 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#b12) in
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b12) in
    mark_test_run 77;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 77 failed";
    let shallow : (t12 array, _) idx_mut = (.(i).#b12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 78;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 78 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t12 array, _) idx_mut = (.(i).#c12) in
    let shallow : (t12 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c12) in
    mark_test_run 79;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 79 failed";
    let shallow : (t12 array, _) idx_mut = (.(i).#c12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 80;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 80 failed";
  );

  (********************************)
  (*   t13 = #{ int; #{ int } }   *)
  (********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i)) in
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 81;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 81 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#a13) in
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a13) in
    mark_test_run 82;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 82 failed";
    let shallow : (t13 array, _) idx_mut = (.(i).#a13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 83;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 83 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#b13) in
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b13) in
    mark_test_run 84;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 84 failed";
    let shallow : (t13 array, _) idx_mut = (.(i).#b13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 85;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 85 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t13 array, _) idx_mut = (.(i).#b13.#a0) in
    let shallow : (t13 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b13.#a0) in
    mark_test_run 86;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 86 failed";
    let shallow : (t13 array, _) idx_mut = (.(i).#b13) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 87;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 87 failed";
    let shallow : (t13 array, _) idx_mut = (.(i).#b13.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 88;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 88 failed";
  );

  (*************************************)
  (*   t14 = #{ int; #{ int; int } }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i)) in
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 89;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 89 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#a14) in
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a14) in
    mark_test_run 90;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 90 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#a14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 91;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 91 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14) in
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14) in
    mark_test_run 92;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 92 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 93;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 93 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14.#a1) in
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14.#a1) in
    mark_test_run 94;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 94 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 95;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 95 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#b14.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 96;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 96 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t14 array, _) idx_mut = (.(i).#b14.#b1) in
    let shallow : (t14 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b14.#b1) in
    mark_test_run 97;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 97 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#b14) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 98;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 98 failed";
    let shallow : (t14 array, _) idx_mut = (.(i).#b14.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 99;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 99 failed";
  );

  (****************************************)
  (*   t15 = #{ int; #{ int; int32# } }   *)
  (****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i)) in
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 100;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 100 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#a15) in
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a15) in
    mark_test_run 101;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 101 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#a15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 102;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 102 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15) in
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15) in
    mark_test_run 103;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 103 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 104;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 104 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15.#a7) in
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15.#a7) in
    mark_test_run 105;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 105 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 106;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 106 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#b15.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 107;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 107 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t15 array, _) idx_mut = (.(i).#b15.#b7) in
    let shallow : (t15 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b15.#b7) in
    mark_test_run 108;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 108 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#b15) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 109;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 109 failed";
    let shallow : (t15 array, _) idx_mut = (.(i).#b15.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 110;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 110 failed";
  );

  (***************************************)
  (*   t16 = #{ int; #{ int; float } }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i)) in
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 111;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 111 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#a16) in
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a16) in
    mark_test_run 112;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 112 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#a16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 113;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 113 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16) in
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16) in
    mark_test_run 114;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 114 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 115;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 115 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16.#a10) in
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16.#a10) in
    mark_test_run 116;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 116 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 117;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 117 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#b16.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 118;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 118 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t16 array, _) idx_mut = (.(i).#b16.#b10) in
    let shallow : (t16 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b16.#b10) in
    mark_test_run 119;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 119 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#b16) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 120;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 120 failed";
    let shallow : (t16 array, _) idx_mut = (.(i).#b16.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 121;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 121 failed";
  );

  (***********************************)
  (*   t18 = #{ int; #{ int32# } }   *)
  (***********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i)) in
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 122;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 122 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i).#a18) in
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 123;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 123 failed";
    let shallow : (t18 array, _) idx_mut = (.(i).#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 124;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 124 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i).#b18) in
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b18) in
    mark_test_run 125;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 125 failed";
    let shallow : (t18 array, _) idx_mut = (.(i).#b18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 126;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 126 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t18 array, _) idx_mut = (.(i).#b18.#a17) in
    let shallow : (t18 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b18.#a17) in
    mark_test_run 127;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 127 failed";
    let shallow : (t18 array, _) idx_mut = (.(i).#b18) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 128;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 128 failed";
    let shallow : (t18 array, _) idx_mut = (.(i).#b18.#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 129;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 129 failed";
  );

  (*******************************************)
  (*   t20 = #{ int; #{ int32#; int32# } }   *)
  (*******************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i)) in
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 130;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 130 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#a20) in
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 131;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 131 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 132;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 132 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20) in
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 133;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 133 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 134;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 134 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20.#a19) in
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20.#a19) in
    mark_test_run 135;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 135 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 136;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 136 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 137;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 137 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t20 array, _) idx_mut = (.(i).#b20.#b19) in
    let shallow : (t20 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b20.#b19) in
    mark_test_run 138;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 138 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#b20) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 139;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 139 failed";
    let shallow : (t20 array, _) idx_mut = (.(i).#b20.#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 140;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 140 failed";
  );

  (**********************************)
  (*   t22 = #{ int; #{ float } }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i)) in
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 141;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 141 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#a22) in
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 142;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 142 failed";
    let shallow : (t22 array, _) idx_mut = (.(i).#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 143;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 143 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#b22) in
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 144;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 144 failed";
    let shallow : (t22 array, _) idx_mut = (.(i).#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 145;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 145 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t22 array, _) idx_mut = (.(i).#b22.#a21) in
    let shallow : (t22 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b22.#a21) in
    mark_test_run 146;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 146 failed";
    let shallow : (t22 array, _) idx_mut = (.(i).#b22) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 147;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 147 failed";
    let shallow : (t22 array, _) idx_mut = (.(i).#b22.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 148;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 148 failed";
  );

  (***************************************)
  (*   t24 = #{ int; #{ float; int } }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i)) in
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 149;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 149 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#a24) in
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 150;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 150 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 151;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 151 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#b24) in
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 152;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 152 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 153;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 153 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#b24.#a23) in
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b24.#a23) in
    mark_test_run 154;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 154 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#b24) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 155;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 155 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#b24.#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 156;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 156 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t24 array, _) idx_mut = (.(i).#b24.#b23) in
    let shallow : (t24 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b24.#b23) in
    mark_test_run 157;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 157 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#b24) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 158;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 158 failed";
    let shallow : (t24 array, _) idx_mut = (.(i).#b24.#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 159;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 159 failed";
  );

  (*****************************************)
  (*   t26 = #{ int; #{ float; float } }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i)) in
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 160;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 160 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#a26) in
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 161;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 161 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 162;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 162 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#b26) in
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 163;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 163 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 164;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 164 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#b26.#a25) in
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b26.#a25) in
    mark_test_run 165;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 165 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#b26) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 166;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 166 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#b26.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 167;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 167 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t26 array, _) idx_mut = (.(i).#b26.#b25) in
    let shallow : (t26 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b26.#b25) in
    mark_test_run 168;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 168 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#b26) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 169;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 169 failed";
    let shallow : (t26 array, _) idx_mut = (.(i).#b26.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 170;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 170 failed";
  );

  (************************)
  (*   t27 = #{ int64 }   *)
  (************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i)) in
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 171;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 171 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t27 array, _) idx_mut = (.(i).#a27) in
    let shallow : (t27 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a27) in
    mark_test_run 172;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 172 failed";
    let shallow : (t27 array, _) idx_mut = (.(i).#a27) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 173;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 173 failed";
  );

  (*****************************)
  (*   t28 = #{ int64; int }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i)) in
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 174;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 174 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i).#a28) in
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 175;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 175 failed";
    let shallow : (t28 array, _) idx_mut = (.(i).#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 176;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 176 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t28 array, _) idx_mut = (.(i).#b28) in
    let shallow : (t28 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 177;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 177 failed";
    let shallow : (t28 array, _) idx_mut = (.(i).#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 178;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 178 failed";
  );

  (*******************************)
  (*   t29 = #{ int64; int64 }   *)
  (*******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i)) in
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 179;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 179 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#a29) in
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a29) in
    mark_test_run 180;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 180 failed";
    let shallow : (t29 array, _) idx_mut = (.(i).#a29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 181;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 181 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t29 array, _) idx_mut = (.(i).#b29) in
    let shallow : (t29 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b29) in
    mark_test_run 182;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 182 failed";
    let shallow : (t29 array, _) idx_mut = (.(i).#b29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 183;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 183 failed";
  );

  (*******************************)
  (*   t30 = #{ int64; float }   *)
  (*******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i)) in
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 184;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 184 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i).#a30) in
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 185;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 185 failed";
    let shallow : (t30 array, _) idx_mut = (.(i).#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 186;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 186 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t30 array, _) idx_mut = (.(i).#b30) in
    let shallow : (t30 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b30) in
    mark_test_run 187;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 187 failed";
    let shallow : (t30 array, _) idx_mut = (.(i).#b30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 188;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 188 failed";
  );

  (*************************)
  (*   t31 = #{ int64# }   *)
  (*************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i)) in
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 189;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 189 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t31 array, _) idx_mut = (.(i).#a31) in
    let shallow : (t31 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a31) in
    mark_test_run 190;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 190 failed";
    let shallow : (t31 array, _) idx_mut = (.(i).#a31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 191;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 191 failed";
  );

  (*********************************)
  (*   t32 = #{ int64#; int64# }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i)) in
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 192;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 192 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i).#a32) in
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a32) in
    mark_test_run 193;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 193 failed";
    let shallow : (t32 array, _) idx_mut = (.(i).#a32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 194;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 194 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t32 array, _) idx_mut = (.(i).#b32) in
    let shallow : (t32 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b32) in
    mark_test_run 195;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 195 failed";
    let shallow : (t32 array, _) idx_mut = (.(i).#b32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 196;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 196 failed";
  );

  (*********************************)
  (*   t33 = #{ int64#; int32# }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i)) in
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 197;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 197 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#a33) in
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 198;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 198 failed";
    let shallow : (t33 array, _) idx_mut = (.(i).#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 199;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 199 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t33 array, _) idx_mut = (.(i).#b33) in
    let shallow : (t33 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b33) in
    mark_test_run 200;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 200 failed";
    let shallow : (t33 array, _) idx_mut = (.(i).#b33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 201;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 201 failed";
  );

  (*************************************)
  (*   t34 = #{ int64#; nativeint# }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i)) in
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 202;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 202 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i).#a34) in
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 203;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 203 failed";
    let shallow : (t34 array, _) idx_mut = (.(i).#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 204;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 204 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t34 array, _) idx_mut = (.(i).#b34) in
    let shallow : (t34 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 205;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 205 failed";
    let shallow : (t34 array, _) idx_mut = (.(i).#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 206;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 206 failed";
  );

  (*************************)
  (*   t17 = #{ int32# }   *)
  (*************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i)) in
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 207;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 207 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t17 array, _) idx_mut = (.(i).#a17) in
    let shallow : (t17 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 208;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 208 failed";
    let shallow : (t17 array, _) idx_mut = (.(i).#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 209;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 209 failed";
  );

  (*********************************)
  (*   t35 = #{ int32#; int64# }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i)) in
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 210;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 210 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#a35) in
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a35) in
    mark_test_run 211;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 211 failed";
    let shallow : (t35 array, _) idx_mut = (.(i).#a35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 212;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 212 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t35 array, _) idx_mut = (.(i).#b35) in
    let shallow : (t35 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b35) in
    mark_test_run 213;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 213 failed";
    let shallow : (t35 array, _) idx_mut = (.(i).#b35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 214;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 214 failed";
  );

  (*********************************)
  (*   t19 = #{ int32#; int32# }   *)
  (*********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i)) in
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 215;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 215 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i).#a19) in
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 216;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 216 failed";
    let shallow : (t19 array, _) idx_mut = (.(i).#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 217;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 217 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t19 array, _) idx_mut = (.(i).#b19) in
    let shallow : (t19 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 218;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 218 failed";
    let shallow : (t19 array, _) idx_mut = (.(i).#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 219;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 219 failed";
  );

  (*****************************************)
  (*   t36 = #{ int32#; int32#; int32# }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i)) in
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 220;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 220 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#a36) in
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 221;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 221 failed";
    let shallow : (t36 array, _) idx_mut = (.(i).#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 222;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 222 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#b36) in
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b36) in
    mark_test_run 223;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 223 failed";
    let shallow : (t36 array, _) idx_mut = (.(i).#b36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 224;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 224 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t36 array, _) idx_mut = (.(i).#c36) in
    let shallow : (t36 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c36) in
    mark_test_run 225;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 225 failed";
    let shallow : (t36 array, _) idx_mut = (.(i).#c36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 226;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 226 failed";
  );

  (*************************************)
  (*   t37 = #{ int32#; nativeint# }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i)) in
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 227;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 227 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#a37) in
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a37) in
    mark_test_run 228;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 228 failed";
    let shallow : (t37 array, _) idx_mut = (.(i).#a37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 229;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 229 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t37 array, _) idx_mut = (.(i).#b37) in
    let shallow : (t37 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b37) in
    mark_test_run 230;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 230 failed";
    let shallow : (t37 array, _) idx_mut = (.(i).#b37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 231;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 231 failed";
  );

  (**************************************)
  (*   t38 = #{ int32#; #{ int32# } }   *)
  (**************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i)) in
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 232;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 232 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#a38) in
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a38) in
    mark_test_run 233;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 233 failed";
    let shallow : (t38 array, _) idx_mut = (.(i).#a38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 234;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 234 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#b38) in
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b38) in
    mark_test_run 235;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 235 failed";
    let shallow : (t38 array, _) idx_mut = (.(i).#b38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 236;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 236 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t38 array, _) idx_mut = (.(i).#b38.#a17) in
    let shallow : (t38 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b38.#a17) in
    mark_test_run 237;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 237 failed";
    let shallow : (t38 array, _) idx_mut = (.(i).#b38) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 238;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 238 failed";
    let shallow : (t38 array, _) idx_mut = (.(i).#b38.#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 239;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 239 failed";
  );

  (**********************************************)
  (*   t39 = #{ int32#; #{ int32#; int32# } }   *)
  (**********************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i)) in
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 240;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 240 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#a39) in
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a39) in
    mark_test_run 241;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 241 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#a39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 242;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 242 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39) in
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39) in
    mark_test_run 243;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 243 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 244;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 244 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39.#a19) in
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39.#a19) in
    mark_test_run 245;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 245 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 246;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 246 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 247;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 247 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t39 array, _) idx_mut = (.(i).#b39.#b19) in
    let shallow : (t39 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b39.#b19) in
    mark_test_run 248;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 248 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#b39) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 249;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 249 failed";
    let shallow : (t39 array, _) idx_mut = (.(i).#b39.#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 250;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 250 failed";
  );

  (*****************************)
  (*   t40 = #{ nativeint# }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i)) in
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 251;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 251 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t40 array, _) idx_mut = (.(i).#a40) in
    let shallow : (t40 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 252;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 252 failed";
    let shallow : (t40 array, _) idx_mut = (.(i).#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 253;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 253 failed";
  );

  (*************************************)
  (*   t41 = #{ nativeint#; int64# }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i)) in
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 254;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 254 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#a41) in
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a41) in
    mark_test_run 255;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 255 failed";
    let shallow : (t41 array, _) idx_mut = (.(i).#a41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 256;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 256 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t41 array, _) idx_mut = (.(i).#b41) in
    let shallow : (t41 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b41) in
    mark_test_run 257;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 257 failed";
    let shallow : (t41 array, _) idx_mut = (.(i).#b41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 258;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 258 failed";
  );

  (*************************************)
  (*   t42 = #{ nativeint#; int32# }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i)) in
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 259;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 259 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i).#a42) in
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 260;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 260 failed";
    let shallow : (t42 array, _) idx_mut = (.(i).#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 261;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 261 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t42 array, _) idx_mut = (.(i).#b42) in
    let shallow : (t42 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 262;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 262 failed";
    let shallow : (t42 array, _) idx_mut = (.(i).#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 263;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 263 failed";
  );

  (*****************************************)
  (*   t43 = #{ nativeint#; nativeint# }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i)) in
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 264;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 264 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#a43) in
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a43) in
    mark_test_run 265;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 265 failed";
    let shallow : (t43 array, _) idx_mut = (.(i).#a43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 266;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 266 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t43 array, _) idx_mut = (.(i).#b43) in
    let shallow : (t43 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b43) in
    mark_test_run 267;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 267 failed";
    let shallow : (t43 array, _) idx_mut = (.(i).#b43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 268;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 268 failed";
  );

  (*****************************)
  (*   t23 = #{ float; int }   *)
  (*****************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i)) in
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 269;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 269 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#a23) in
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 270;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 270 failed";
    let shallow : (t23 array, _) idx_mut = (.(i).#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 271;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 271 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t23 array, _) idx_mut = (.(i).#b23) in
    let shallow : (t23 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 272;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 272 failed";
    let shallow : (t23 array, _) idx_mut = (.(i).#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 273;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 273 failed";
  );

  (**********************************)
  (*   t44 = #{ float; int; int }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i)) in
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 274;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 274 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#a44) in
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 275;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 275 failed";
    let shallow : (t44 array, _) idx_mut = (.(i).#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 276;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 276 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#b44) in
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b44) in
    mark_test_run 277;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 277 failed";
    let shallow : (t44 array, _) idx_mut = (.(i).#b44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 278;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 278 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t44 array, _) idx_mut = (.(i).#c44) in
    let shallow : (t44 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c44) in
    mark_test_run 279;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 279 failed";
    let shallow : (t44 array, _) idx_mut = (.(i).#c44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 280;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 280 failed";
  );

  (************************************)
  (*   t45 = #{ float; int; float }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i)) in
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 281;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 281 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#a45) in
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a45) in
    mark_test_run 282;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 282 failed";
    let shallow : (t45 array, _) idx_mut = (.(i).#a45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 283;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 283 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#b45) in
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b45) in
    mark_test_run 284;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 284 failed";
    let shallow : (t45 array, _) idx_mut = (.(i).#b45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 285;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 285 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t45 array, _) idx_mut = (.(i).#c45) in
    let shallow : (t45 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c45) in
    mark_test_run 286;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 286 failed";
    let shallow : (t45 array, _) idx_mut = (.(i).#c45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 287;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 287 failed";
  );

  (*******************************)
  (*   t46 = #{ float; int64 }   *)
  (*******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i)) in
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 288;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 288 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i).#a46) in
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 289;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 289 failed";
    let shallow : (t46 array, _) idx_mut = (.(i).#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 290;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 290 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t46 array, _) idx_mut = (.(i).#b46) in
    let shallow : (t46 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b46) in
    mark_test_run 291;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 291 failed";
    let shallow : (t46 array, _) idx_mut = (.(i).#b46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 292;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 292 failed";
  );

  (*******************************)
  (*   t25 = #{ float; float }   *)
  (*******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i)) in
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 293;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 293 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#a25) in
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 294;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 294 failed";
    let shallow : (t25 array, _) idx_mut = (.(i).#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 295;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 295 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t25 array, _) idx_mut = (.(i).#b25) in
    let shallow : (t25 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 296;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 296 failed";
    let shallow : (t25 array, _) idx_mut = (.(i).#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 297;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 297 failed";
  );

  (************************************)
  (*   t47 = #{ float; float; int }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i)) in
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 298;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 298 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#a47) in
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a47) in
    mark_test_run 299;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 299 failed";
    let shallow : (t47 array, _) idx_mut = (.(i).#a47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 300;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 300 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#b47) in
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b47) in
    mark_test_run 301;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 301 failed";
    let shallow : (t47 array, _) idx_mut = (.(i).#b47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 302;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 302 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t47 array, _) idx_mut = (.(i).#c47) in
    let shallow : (t47 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c47) in
    mark_test_run 303;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 303 failed";
    let shallow : (t47 array, _) idx_mut = (.(i).#c47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 304;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 304 failed";
  );

  (**************************************)
  (*   t48 = #{ float; float; float }   *)
  (**************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i)) in
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 305;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 305 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i).#a48) in
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a48) in
    mark_test_run 306;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 306 failed";
    let shallow : (t48 array, _) idx_mut = (.(i).#a48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 307;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 307 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i).#b48) in
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b48) in
    mark_test_run 308;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 308 failed";
    let shallow : (t48 array, _) idx_mut = (.(i).#b48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 309;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 309 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t48 array, _) idx_mut = (.(i).#c48) in
    let shallow : (t48 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#c48) in
    mark_test_run 310;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 310 failed";
    let shallow : (t48 array, _) idx_mut = (.(i).#c48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 311;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 311 failed";
  );

  (**********************************)
  (*   t49 = #{ float; #{ int } }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i)) in
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 312;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 312 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i).#a49) in
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 313;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 313 failed";
    let shallow : (t49 array, _) idx_mut = (.(i).#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 314;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 314 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i).#b49) in
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 315;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 315 failed";
    let shallow : (t49 array, _) idx_mut = (.(i).#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 316;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 316 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t49 array, _) idx_mut = (.(i).#b49.#a0) in
    let shallow : (t49 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b49.#a0) in
    mark_test_run 317;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 317 failed";
    let shallow : (t49 array, _) idx_mut = (.(i).#b49) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 318;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 318 failed";
    let shallow : (t49 array, _) idx_mut = (.(i).#b49.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 319;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 319 failed";
  );

  (***************************************)
  (*   t50 = #{ float; #{ int; int } }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i)) in
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 320;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 320 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#a50) in
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a50) in
    mark_test_run 321;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 321 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#a50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 322;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 322 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#b50) in
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b50) in
    mark_test_run 323;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 323 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#b50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 324;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 324 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#b50.#a1) in
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b50.#a1) in
    mark_test_run 325;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 325 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#b50) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 326;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 326 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#b50.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 327;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 327 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t50 array, _) idx_mut = (.(i).#b50.#b1) in
    let shallow : (t50 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b50.#b1) in
    mark_test_run 328;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 328 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#b50) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 329;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 329 failed";
    let shallow : (t50 array, _) idx_mut = (.(i).#b50.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 330;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 330 failed";
  );

  (*****************************************)
  (*   t51 = #{ float; #{ int; float } }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i)) in
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 331;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 331 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#a51) in
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 332;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 332 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 333;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 333 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#b51) in
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 334;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 334 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 335;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 335 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#b51.#a10) in
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b51.#a10) in
    mark_test_run 336;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 336 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#b51) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 337;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 337 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#b51.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 338;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 338 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t51 array, _) idx_mut = (.(i).#b51.#b10) in
    let shallow : (t51 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b51.#b10) in
    mark_test_run 339;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 339 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#b51) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 340;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 340 failed";
    let shallow : (t51 array, _) idx_mut = (.(i).#b51.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 341;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 341 failed";
  );

  (************************************)
  (*   t52 = #{ float; #{ float } }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i)) in
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 342;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 342 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i).#a52) in
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a52) in
    mark_test_run 343;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 343 failed";
    let shallow : (t52 array, _) idx_mut = (.(i).#a52) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 344;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 344 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i).#b52) in
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b52) in
    mark_test_run 345;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 345 failed";
    let shallow : (t52 array, _) idx_mut = (.(i).#b52) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 346;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 346 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t52 array, _) idx_mut = (.(i).#b52.#a21) in
    let shallow : (t52 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b52.#a21) in
    mark_test_run 347;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 347 failed";
    let shallow : (t52 array, _) idx_mut = (.(i).#b52) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 348;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 348 failed";
    let shallow : (t52 array, _) idx_mut = (.(i).#b52.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 349;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 349 failed";
  );

  (*****************************************)
  (*   t53 = #{ float; #{ float; int } }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i)) in
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 350;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 350 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#a53) in
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a53) in
    mark_test_run 351;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 351 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#a53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 352;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 352 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#b53) in
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b53) in
    mark_test_run 353;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 353 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#b53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 354;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 354 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#b53.#a23) in
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b53.#a23) in
    mark_test_run 355;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 355 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#b53) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 356;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 356 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#b53.#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 357;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 357 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t53 array, _) idx_mut = (.(i).#b53.#b23) in
    let shallow : (t53 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b53.#b23) in
    mark_test_run 358;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 358 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#b53) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 359;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 359 failed";
    let shallow : (t53 array, _) idx_mut = (.(i).#b53.#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 360;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 360 failed";
  );

  (*******************************************)
  (*   t54 = #{ float; #{ float; float } }   *)
  (*******************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i)) in
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 361;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 361 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#a54) in
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a54) in
    mark_test_run 362;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 362 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#a54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 363;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 363 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#b54) in
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b54) in
    mark_test_run 364;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 364 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#b54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 365;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 365 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#b54.#a25) in
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b54.#a25) in
    mark_test_run 366;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 366 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#b54) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 367;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 367 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#b54.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 368;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 368 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t54 array, _) idx_mut = (.(i).#b54.#b25) in
    let shallow : (t54 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b54.#b25) in
    mark_test_run 369;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 369 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#b54) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 370;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 370 failed";
    let shallow : (t54 array, _) idx_mut = (.(i).#b54.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 371;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 371 failed";
  );

  (***************************)
  (*   t55 = #{ #{ int } }   *)
  (***************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i)) in
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 372;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 372 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i).#a55) in
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a55) in
    mark_test_run 373;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 373 failed";
    let shallow : (t55 array, _) idx_mut = (.(i).#a55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 374;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 374 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t55 array, _) idx_mut = (.(i).#a55.#a0) in
    let shallow : (t55 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a55.#a0) in
    mark_test_run 375;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 375 failed";
    let shallow : (t55 array, _) idx_mut = (.(i).#a55) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 376;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 376 failed";
    let shallow : (t55 array, _) idx_mut = (.(i).#a55.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 377;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 377 failed";
  );

  (********************************)
  (*   t56 = #{ #{ int }; int }   *)
  (********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i)) in
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 378;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 378 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i).#a56) in
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a56) in
    mark_test_run 379;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 379 failed";
    let shallow : (t56 array, _) idx_mut = (.(i).#a56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 380;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 380 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i).#b56) in
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b56) in
    mark_test_run 381;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 381 failed";
    let shallow : (t56 array, _) idx_mut = (.(i).#b56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 382;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 382 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t56 array, _) idx_mut = (.(i).#a56.#a0) in
    let shallow : (t56 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a56.#a0) in
    mark_test_run 383;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 383 failed";
    let shallow : (t56 array, _) idx_mut = (.(i).#a56) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 384;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 384 failed";
    let shallow : (t56 array, _) idx_mut = (.(i).#a56.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 385;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 385 failed";
  );

  (***********************************)
  (*   t57 = #{ #{ int }; int32# }   *)
  (***********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i)) in
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 386;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 386 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#a57) in
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a57) in
    mark_test_run 387;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 387 failed";
    let shallow : (t57 array, _) idx_mut = (.(i).#a57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 388;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 388 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#b57) in
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b57) in
    mark_test_run 389;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 389 failed";
    let shallow : (t57 array, _) idx_mut = (.(i).#b57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 390;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 390 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t57 array, _) idx_mut = (.(i).#a57.#a0) in
    let shallow : (t57 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a57.#a0) in
    mark_test_run 391;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 391 failed";
    let shallow : (t57 array, _) idx_mut = (.(i).#a57) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 392;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 392 failed";
    let shallow : (t57 array, _) idx_mut = (.(i).#a57.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 393;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 393 failed";
  );

  (**********************************)
  (*   t58 = #{ #{ int }; float }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i)) in
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 394;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 394 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i).#a58) in
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 395;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 395 failed";
    let shallow : (t58 array, _) idx_mut = (.(i).#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 396;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 396 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i).#b58) in
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 397;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 397 failed";
    let shallow : (t58 array, _) idx_mut = (.(i).#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 398;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 398 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t58 array, _) idx_mut = (.(i).#a58.#a0) in
    let shallow : (t58 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a58.#a0) in
    mark_test_run 399;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 399 failed";
    let shallow : (t58 array, _) idx_mut = (.(i).#a58) in
    let deepened = (.idx_mut(shallow).#a0) in
    mark_test_run 400;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 400 failed";
    let shallow : (t58 array, _) idx_mut = (.(i).#a58.#a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 401;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 401 failed";
  );

  (********************************)
  (*   t59 = #{ #{ int; int } }   *)
  (********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i)) in
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 402;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 402 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#a59) in
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a59) in
    mark_test_run 403;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 403 failed";
    let shallow : (t59 array, _) idx_mut = (.(i).#a59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 404;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 404 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#a59.#a1) in
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a59.#a1) in
    mark_test_run 405;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 405 failed";
    let shallow : (t59 array, _) idx_mut = (.(i).#a59) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 406;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 406 failed";
    let shallow : (t59 array, _) idx_mut = (.(i).#a59.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 407;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 407 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t59 array, _) idx_mut = (.(i).#a59.#b1) in
    let shallow : (t59 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a59.#b1) in
    mark_test_run 408;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 408 failed";
    let shallow : (t59 array, _) idx_mut = (.(i).#a59) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 409;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 409 failed";
    let shallow : (t59 array, _) idx_mut = (.(i).#a59.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 410;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 410 failed";
  );

  (*************************************)
  (*   t60 = #{ #{ int; int }; int }   *)
  (*************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i)) in
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 411;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 411 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#a60) in
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 412;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 412 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 413;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 413 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#b60) in
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 414;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 414 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 415;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 415 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#a60.#a1) in
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a60.#a1) in
    mark_test_run 416;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 416 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#a60) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 417;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 417 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#a60.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 418;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 418 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t60 array, _) idx_mut = (.(i).#a60.#b1) in
    let shallow : (t60 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a60.#b1) in
    mark_test_run 419;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 419 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#a60) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 420;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 420 failed";
    let shallow : (t60 array, _) idx_mut = (.(i).#a60.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 421;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 421 failed";
  );

  (****************************************)
  (*   t61 = #{ #{ int; int }; int32# }   *)
  (****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i)) in
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 422;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 422 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#a61) in
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a61) in
    mark_test_run 423;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 423 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#a61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 424;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 424 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#b61) in
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b61) in
    mark_test_run 425;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 425 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#b61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 426;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 426 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#a61.#a1) in
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a61.#a1) in
    mark_test_run 427;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 427 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#a61) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 428;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 428 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#a61.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 429;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 429 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t61 array, _) idx_mut = (.(i).#a61.#b1) in
    let shallow : (t61 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a61.#b1) in
    mark_test_run 430;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 430 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#a61) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 431;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 431 failed";
    let shallow : (t61 array, _) idx_mut = (.(i).#a61.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 432;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 432 failed";
  );

  (***************************************)
  (*   t62 = #{ #{ int; int }; float }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i)) in
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 433;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 433 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i).#a62) in
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a62) in
    mark_test_run 434;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 434 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#a62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 435;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 435 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i).#b62) in
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b62) in
    mark_test_run 436;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 436 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#b62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 437;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 437 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i).#a62.#a1) in
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a62.#a1) in
    mark_test_run 438;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 438 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#a62) in
    let deepened = (.idx_mut(shallow).#a1) in
    mark_test_run 439;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 439 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#a62.#a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 440;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 440 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t62 array, _) idx_mut = (.(i).#a62.#b1) in
    let shallow : (t62 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a62.#b1) in
    mark_test_run 441;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 441 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#a62) in
    let deepened = (.idx_mut(shallow).#b1) in
    mark_test_run 442;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 442 failed";
    let shallow : (t62 array, _) idx_mut = (.(i).#a62.#b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 443;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 443 failed";
  );

  (***********************************)
  (*   t63 = #{ #{ int; int32# } }   *)
  (***********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i)) in
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 444;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 444 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i).#a63) in
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a63) in
    mark_test_run 445;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 445 failed";
    let shallow : (t63 array, _) idx_mut = (.(i).#a63) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 446;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 446 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i).#a63.#a7) in
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a63.#a7) in
    mark_test_run 447;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 447 failed";
    let shallow : (t63 array, _) idx_mut = (.(i).#a63) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 448;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 448 failed";
    let shallow : (t63 array, _) idx_mut = (.(i).#a63.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 449;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 449 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t63 array, _) idx_mut = (.(i).#a63.#b7) in
    let shallow : (t63 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a63.#b7) in
    mark_test_run 450;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 450 failed";
    let shallow : (t63 array, _) idx_mut = (.(i).#a63) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 451;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 451 failed";
    let shallow : (t63 array, _) idx_mut = (.(i).#a63.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 452;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 452 failed";
  );

  (*******************************************)
  (*   t64 = #{ #{ int; int32# }; int32# }   *)
  (*******************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i)) in
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 453;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 453 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#a64) in
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a64) in
    mark_test_run 454;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 454 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#a64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 455;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 455 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#b64) in
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b64) in
    mark_test_run 456;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 456 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#b64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 457;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 457 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#a64.#a7) in
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a64.#a7) in
    mark_test_run 458;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 458 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#a64) in
    let deepened = (.idx_mut(shallow).#a7) in
    mark_test_run 459;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 459 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#a64.#a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 460;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 460 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t64 array, _) idx_mut = (.(i).#a64.#b7) in
    let shallow : (t64 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a64.#b7) in
    mark_test_run 461;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 461 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#a64) in
    let deepened = (.idx_mut(shallow).#b7) in
    mark_test_run 462;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 462 failed";
    let shallow : (t64 array, _) idx_mut = (.(i).#a64.#b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 463;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 463 failed";
  );

  (**********************************)
  (*   t65 = #{ #{ int; float } }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i)) in
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 464;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 464 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i).#a65) in
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a65) in
    mark_test_run 465;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 465 failed";
    let shallow : (t65 array, _) idx_mut = (.(i).#a65) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 466;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 466 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i).#a65.#a10) in
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a65.#a10) in
    mark_test_run 467;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 467 failed";
    let shallow : (t65 array, _) idx_mut = (.(i).#a65) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 468;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 468 failed";
    let shallow : (t65 array, _) idx_mut = (.(i).#a65.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 469;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 469 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t65 array, _) idx_mut = (.(i).#a65.#b10) in
    let shallow : (t65 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a65.#b10) in
    mark_test_run 470;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 470 failed";
    let shallow : (t65 array, _) idx_mut = (.(i).#a65) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 471;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 471 failed";
    let shallow : (t65 array, _) idx_mut = (.(i).#a65.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 472;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 472 failed";
  );

  (***************************************)
  (*   t66 = #{ #{ int; float }; int }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i)) in
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 473;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 473 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#a66) in
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 474;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 474 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 475;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 475 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#b66) in
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b66) in
    mark_test_run 476;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 476 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#b66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 477;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 477 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#a66.#a10) in
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a66.#a10) in
    mark_test_run 478;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 478 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#a66) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 479;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 479 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#a66.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 480;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 480 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t66 array, _) idx_mut = (.(i).#a66.#b10) in
    let shallow : (t66 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a66.#b10) in
    mark_test_run 481;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 481 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#a66) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 482;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 482 failed";
    let shallow : (t66 array, _) idx_mut = (.(i).#a66.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 483;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 483 failed";
  );

  (*****************************************)
  (*   t67 = #{ #{ int; float }; float }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i)) in
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 484;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 484 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#a67) in
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a67) in
    mark_test_run 485;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 485 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#a67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 486;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 486 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#b67) in
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b67) in
    mark_test_run 487;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 487 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#b67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 488;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 488 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#a67.#a10) in
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a67.#a10) in
    mark_test_run 489;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 489 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#a67) in
    let deepened = (.idx_mut(shallow).#a10) in
    mark_test_run 490;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 490 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#a67.#a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 491;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 491 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t67 array, _) idx_mut = (.(i).#a67.#b10) in
    let shallow : (t67 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a67.#b10) in
    mark_test_run 492;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 492 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#a67) in
    let deepened = (.idx_mut(shallow).#b10) in
    mark_test_run 493;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 493 failed";
    let shallow : (t67 array, _) idx_mut = (.(i).#a67.#b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 494;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 494 failed";
  );

  (******************************)
  (*   t68 = #{ #{ int32# } }   *)
  (******************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i)) in
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 495;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 495 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i).#a68) in
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a68) in
    mark_test_run 496;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 496 failed";
    let shallow : (t68 array, _) idx_mut = (.(i).#a68) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 497;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 497 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t68 array, _) idx_mut = (.(i).#a68.#a17) in
    let shallow : (t68 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a68.#a17) in
    mark_test_run 498;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 498 failed";
    let shallow : (t68 array, _) idx_mut = (.(i).#a68) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 499;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 499 failed";
    let shallow : (t68 array, _) idx_mut = (.(i).#a68.#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 500;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 500 failed";
  );

  (**************************************)
  (*   t69 = #{ #{ int32# }; int32# }   *)
  (**************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i)) in
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 501;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 501 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#a69) in
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a69) in
    mark_test_run 502;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 502 failed";
    let shallow : (t69 array, _) idx_mut = (.(i).#a69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 503;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 503 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#b69) in
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b69) in
    mark_test_run 504;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 504 failed";
    let shallow : (t69 array, _) idx_mut = (.(i).#b69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 505;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 505 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t69 array, _) idx_mut = (.(i).#a69.#a17) in
    let shallow : (t69 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a69.#a17) in
    mark_test_run 506;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 506 failed";
    let shallow : (t69 array, _) idx_mut = (.(i).#a69) in
    let deepened = (.idx_mut(shallow).#a17) in
    mark_test_run 507;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 507 failed";
    let shallow : (t69 array, _) idx_mut = (.(i).#a69.#a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 508;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 508 failed";
  );

  (**************************************)
  (*   t70 = #{ #{ int32#; int32# } }   *)
  (**************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i)) in
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 509;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 509 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#a70) in
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a70) in
    mark_test_run 510;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 510 failed";
    let shallow : (t70 array, _) idx_mut = (.(i).#a70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 511;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 511 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#a70.#a19) in
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a70.#a19) in
    mark_test_run 512;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 512 failed";
    let shallow : (t70 array, _) idx_mut = (.(i).#a70) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 513;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 513 failed";
    let shallow : (t70 array, _) idx_mut = (.(i).#a70.#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 514;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 514 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t70 array, _) idx_mut = (.(i).#a70.#b19) in
    let shallow : (t70 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a70.#b19) in
    mark_test_run 515;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 515 failed";
    let shallow : (t70 array, _) idx_mut = (.(i).#a70) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 516;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 516 failed";
    let shallow : (t70 array, _) idx_mut = (.(i).#a70.#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 517;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 517 failed";
  );

  (**********************************************)
  (*   t71 = #{ #{ int32#; int32# }; int32# }   *)
  (**********************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i)) in
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 518;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 518 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#a71) in
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a71) in
    mark_test_run 519;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 519 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#a71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 520;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 520 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#b71) in
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b71) in
    mark_test_run 521;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 521 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#b71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 522;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 522 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#a71.#a19) in
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a71.#a19) in
    mark_test_run 523;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 523 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#a71) in
    let deepened = (.idx_mut(shallow).#a19) in
    mark_test_run 524;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 524 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#a71.#a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 525;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 525 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t71 array, _) idx_mut = (.(i).#a71.#b19) in
    let shallow : (t71 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a71.#b19) in
    mark_test_run 526;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 526 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#a71) in
    let deepened = (.idx_mut(shallow).#b19) in
    mark_test_run 527;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 527 failed";
    let shallow : (t71 array, _) idx_mut = (.(i).#a71.#b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 528;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 528 failed";
  );

  (**********************************)
  (*   t72 = #{ #{ float }; int }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i)) in
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 529;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 529 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#a72) in
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a72) in
    mark_test_run 530;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 530 failed";
    let shallow : (t72 array, _) idx_mut = (.(i).#a72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 531;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 531 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#b72) in
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b72) in
    mark_test_run 532;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 532 failed";
    let shallow : (t72 array, _) idx_mut = (.(i).#b72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 533;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 533 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t72 array, _) idx_mut = (.(i).#a72.#a21) in
    let shallow : (t72 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a72.#a21) in
    mark_test_run 534;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 534 failed";
    let shallow : (t72 array, _) idx_mut = (.(i).#a72) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 535;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 535 failed";
    let shallow : (t72 array, _) idx_mut = (.(i).#a72.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 536;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 536 failed";
  );

  (************************************)
  (*   t73 = #{ #{ float }; float }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i)) in
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 537;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 537 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#a73) in
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a73) in
    mark_test_run 538;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 538 failed";
    let shallow : (t73 array, _) idx_mut = (.(i).#a73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 539;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 539 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#b73) in
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b73) in
    mark_test_run 540;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 540 failed";
    let shallow : (t73 array, _) idx_mut = (.(i).#b73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 541;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 541 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t73 array, _) idx_mut = (.(i).#a73.#a21) in
    let shallow : (t73 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a73.#a21) in
    mark_test_run 542;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 542 failed";
    let shallow : (t73 array, _) idx_mut = (.(i).#a73) in
    let deepened = (.idx_mut(shallow).#a21) in
    mark_test_run 543;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 543 failed";
    let shallow : (t73 array, _) idx_mut = (.(i).#a73.#a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 544;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 544 failed";
  );

  (**********************************)
  (*   t74 = #{ #{ float; int } }   *)
  (**********************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i)) in
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 545;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 545 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#a74) in
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a74) in
    mark_test_run 546;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 546 failed";
    let shallow : (t74 array, _) idx_mut = (.(i).#a74) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 547;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 547 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#a74.#a23) in
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a74.#a23) in
    mark_test_run 548;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 548 failed";
    let shallow : (t74 array, _) idx_mut = (.(i).#a74) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 549;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 549 failed";
    let shallow : (t74 array, _) idx_mut = (.(i).#a74.#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 550;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 550 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t74 array, _) idx_mut = (.(i).#a74.#b23) in
    let shallow : (t74 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a74.#b23) in
    mark_test_run 551;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 551 failed";
    let shallow : (t74 array, _) idx_mut = (.(i).#a74) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 552;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 552 failed";
    let shallow : (t74 array, _) idx_mut = (.(i).#a74.#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 553;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 553 failed";
  );

  (***************************************)
  (*   t75 = #{ #{ float; int }; int }   *)
  (***************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i)) in
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 554;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 554 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#a75) in
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a75) in
    mark_test_run 555;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 555 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#a75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 556;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 556 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#b75) in
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b75) in
    mark_test_run 557;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 557 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#b75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 558;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 558 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#a75.#a23) in
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a75.#a23) in
    mark_test_run 559;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 559 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#a75) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 560;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 560 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#a75.#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 561;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 561 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t75 array, _) idx_mut = (.(i).#a75.#b23) in
    let shallow : (t75 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a75.#b23) in
    mark_test_run 562;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 562 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#a75) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 563;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 563 failed";
    let shallow : (t75 array, _) idx_mut = (.(i).#a75.#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 564;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 564 failed";
  );

  (*****************************************)
  (*   t76 = #{ #{ float; int }; float }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i)) in
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 565;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 565 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#a76) in
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a76) in
    mark_test_run 566;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 566 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#a76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 567;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 567 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#b76) in
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b76) in
    mark_test_run 568;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 568 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#b76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 569;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 569 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#a76.#a23) in
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a76.#a23) in
    mark_test_run 570;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 570 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#a76) in
    let deepened = (.idx_mut(shallow).#a23) in
    mark_test_run 571;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 571 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#a76.#a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 572;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 572 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t76 array, _) idx_mut = (.(i).#a76.#b23) in
    let shallow : (t76 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a76.#b23) in
    mark_test_run 573;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 573 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#a76) in
    let deepened = (.idx_mut(shallow).#b23) in
    mark_test_run 574;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 574 failed";
    let shallow : (t76 array, _) idx_mut = (.(i).#a76.#b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 575;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 575 failed";
  );

  (************************************)
  (*   t77 = #{ #{ float; float } }   *)
  (************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i)) in
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 576;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 576 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#a77) in
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a77) in
    mark_test_run 577;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 577 failed";
    let shallow : (t77 array, _) idx_mut = (.(i).#a77) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 578;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 578 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#a77.#a25) in
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a77.#a25) in
    mark_test_run 579;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 579 failed";
    let shallow : (t77 array, _) idx_mut = (.(i).#a77) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 580;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 580 failed";
    let shallow : (t77 array, _) idx_mut = (.(i).#a77.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 581;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 581 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t77 array, _) idx_mut = (.(i).#a77.#b25) in
    let shallow : (t77 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a77.#b25) in
    mark_test_run 582;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 582 failed";
    let shallow : (t77 array, _) idx_mut = (.(i).#a77) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 583;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 583 failed";
    let shallow : (t77 array, _) idx_mut = (.(i).#a77.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 584;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 584 failed";
  );

  (*****************************************)
  (*   t78 = #{ #{ float; float }; int }   *)
  (*****************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i)) in
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 585;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 585 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#a78) in
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a78) in
    mark_test_run 586;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 586 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#a78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 587;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 587 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#b78) in
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b78) in
    mark_test_run 588;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 588 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#b78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 589;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 589 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#a78.#a25) in
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a78.#a25) in
    mark_test_run 590;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 590 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#a78) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 591;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 591 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#a78.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 592;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 592 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t78 array, _) idx_mut = (.(i).#a78.#b25) in
    let shallow : (t78 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a78.#b25) in
    mark_test_run 593;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 593 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#a78) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 594;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 594 failed";
    let shallow : (t78 array, _) idx_mut = (.(i).#a78.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 595;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 595 failed";
  );

  (*******************************************)
  (*   t79 = #{ #{ float; float }; float }   *)
  (*******************************************)
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i)) in
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 596;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 596 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#a79) in
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a79) in
    mark_test_run 597;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 597 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#a79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 598;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 598 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#b79) in
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#b79) in
    mark_test_run 599;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 599 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#b79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 600;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 600 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#a79.#a25) in
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a79.#a25) in
    mark_test_run 601;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 601 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#a79) in
    let deepened = (.idx_mut(shallow).#a25) in
    mark_test_run 602;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 602 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#a79.#a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 603;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 603 failed";
  );
  iter indices_in_deepening_tests ~f:(fun i ->
    let unboxed_path : (t79 array, _) idx_mut = (.(i).#a79.#b25) in
    let shallow : (t79 array, _) idx_mut = (.(i)) in
    let deepened = (.idx_mut(shallow).#a79.#b25) in
    mark_test_run 604;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 604 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#a79) in
    let deepened = (.idx_mut(shallow).#b25) in
    mark_test_run 605;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 605 failed";
    let shallow : (t79 array, _) idx_mut = (.(i).#a79.#b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 606;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut unboxed_path) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 606 failed";
  );

  ()
;;

for i = 1 to 606 do
  if not (Int_set.mem i !tests_run) then failwithf "test %d not run" i
done;;
let () = Printf.printf "All tests passed.%!\n";;
