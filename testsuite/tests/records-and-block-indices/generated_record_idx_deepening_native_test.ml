(* TEST
 include stdlib_stable;
 include stdlib_beta;
 include stdlib_upstream_compatible;
 modules = "stubs.c";
 flags = "-extension simd_beta -extension layouts_alpha";
 flambda2;
 stack-allocation;
 native;
*)
(** This is code generated by [test_generation.ml]. *)

[@@@warning "-23"]
external globalize : local_ 'a -> 'a = "%obj_dup";;
external box_int64x2 : int64x2# -> int64x2 = "%box_vec128"
external unbox_int64x2 : int64x2 -> int64x2# = "%unbox_vec128"
external interleave_low_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_low_64" [@@unboxed] [@@builtin]
external interleave_high_64 : int64x2# -> int64x2# -> int64x2# = "caml_vec128_unreachable" "caml_simd_vec128_interleave_high_64" [@@unboxed] [@@builtin]
external int64x2_of_int64 : int64 -> int64x2# = "caml_vec128_unreachable" "caml_int64x2_low_of_int64" [@@unboxed] [@@builtin]
external int64_of_int64x2 : int64x2# -> int64 = "caml_vec128_unreachable" "caml_int64x2_low_to_int64" [@@unboxed] [@@builtin]

let int64x2_u_equal i1 i2 =
    let a1 = int64_of_int64x2 i1 in
    let b1 = int64_of_int64x2 (interleave_high_64 i1 i1) in
    let a2 = int64_of_int64x2 i2 in
    let b2 = int64_of_int64x2 (interleave_high_64 i2 i2) in
    Int64.equal a1 a2 && Int64.equal b1 b2

open Stdlib_upstream_compatible
open Stdlib_stable
open Stdlib_beta

external[@layout_poly] makearray_dynamic_local :
  ('a : any_non_null) . int -> 'a -> 'a array @ local =
  "%makearray_dynamic"

external[@layout_poly] makearray_dynamic :
  ('a : any_non_null) . int -> 'a -> 'a array =
  "%makearray_dynamic"

external[@layout_poly] get :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a =
  "%array_safe_get"

external[@layout_poly] set :
  ('a : any_non_null) . ('a array[@local_opt]) -> (int[@local_opt]) -> 'a -> unit =
  "%array_safe_set"

module Idx_repr : sig
  type t
  val of_idx_imm : 'a ('b : any). ('a, 'b) idx_imm -> t
  val of_idx_mut : 'a ('b : any). ('a, 'b) idx_mut -> t
  val equal : t -> t -> bool
  val debug_string : t -> string
end = struct
  (* See [jane/doc/extensions/_02-unboxed-types/block-indices.md] *)
  type t =
    | Bytecode of { path : int list }
    | Native of { offset : int; gap : int }

  external magic_box_bits64 : ('a : bits64) 'b . 'a -> 'b =
    "%box_int64"
  external lessthan_if_bytecode : int -> int -> bool =
    "caml_lessthan" "caml_greaterthan"

  let of_idx idx =
    let is_bytecode = lessthan_if_bytecode 0 1 in
    if is_bytecode then
      let r = Obj.repr (magic_box_bits64 idx) in
      let nth_idx n : int = Obj.magic (Obj.field r n) in
      let path = List.init (Obj.size r) nth_idx in
      Bytecode { path }
    else
      let i : int64 = magic_box_bits64 idx in
      let offset =
        Int64.(logand (sub (shift_left one 48) one)) i
        |> Int64.to_int
      in
      let gap =
        Int64.shift_right i 48
        |> Int64.to_int
      in
      Native { offset; gap }

  let of_idx_imm = of_idx
  let of_idx_mut = of_idx

  let equal t1 t2 =
    match t1, t2 with
    | Bytecode { path = path1 }, Bytecode { path = path2 } ->
      List.equal Int.equal path1 path2
    | Native { gap = gap1; offset = offset1 },
      Native { gap = gap2; offset = offset2 } ->
      Int.equal gap1 gap2 && Int.equal offset1 offset2
    | Bytecode _, Native _ | Native _, Bytecode _ -> assert false

  let debug_string = function
    | Bytecode { path } ->
      Printf.sprintf "{ %s }"
        (String.concat "; " (List.map Int.to_string path))
    | Native { offset; gap } ->
      Printf.sprintf "offset %d; gap %d" offset gap
end

let failwithf fmt = Printf.ksprintf failwith fmt

(* Redefine iter to infer locality *)
let rec iter ~f = function
    [] -> ()
  | a::l -> f a; iter ~f l

module Int_set = Set.Make(Int)

let tests_run = ref Int_set.empty

let mark_test_run test_id =
  tests_run := Int_set.add test_id !tests_run

(* Various interesting values *)

let sizes = [ 0; 1; 2; 30 ]

let indices_in_deepening_tests = [0; 100_000]

type packed = P : 'a -> packed
let ref_to_force_heap_allocation : packed ref = ref (P 0)

type t0 = { mutable a0 : int } (* { int } *)
type t1 = { mutable a1 : int; mutable b1 : int } (* { int; int } *)
type t2 = { mutable a2 : int; mutable b2 : int; mutable c2 : int } (* { int; int; int } *)
type t3 = { mutable a3 : int; mutable b3 : int; mutable c3 : int32# } (* { int; int; int32# } *)
type t4 = { mutable a4 : int; mutable b4 : int; mutable c4 : float } (* { int; int; float } *)
type t5 = { mutable a5 : int; mutable b5 : int; mutable c5 : int64x2# } (* { int; int; int64x2# } *)
type t6 = { mutable a6 : int; mutable b6 : int64 } (* { int; int64 } *)
type t7 = { mutable a7 : int; mutable b7 : int64# } (* { int; int64# } *)
type t8 = { mutable a8 : int; mutable b8 : int32# } (* { int; int32# } *)
type t9 = { mutable a9 : int; mutable b9 : int32#; mutable c9 : int } (* { int; int32#; int } *)
type t10 = { mutable a10 : int; mutable b10 : int32#; mutable c10 : int32# } (* { int; int32#; int32# } *)
type t11 = { mutable a11 : int; mutable b11 : nativeint# } (* { int; nativeint# } *)
type t12 = { mutable a12 : int; mutable b12 : float } (* { int; float } *)
type t13 = { mutable a13 : int; mutable b13 : float; mutable c13 : int } (* { int; float; int } *)
type t14 = { mutable a14 : int; mutable b14 : float; mutable c14 : float } (* { int; float; float } *)
type t15 = { mutable a15 : int; mutable b15 : int64x2# } (* { int; int64x2# } *)
type t16 = { mutable a16 : int; mutable b16 : int64x2#; mutable c16 : int } (* { int; int64x2#; int } *)
type t17 = { mutable a17 : int; mutable b17 : int64x2#; mutable c17 : int64x2# } (* { int; int64x2#; int64x2# } *)
type t18 = #{ a18 : int } (* #{ int } *)
type t19 = { mutable a19 : int; mutable b19 : t18 } (* { int; #{ int } } *)
type t20 = #{ a20 : int; b20 : int } (* #{ int; int } *)
type t21 = { mutable a21 : int; mutable b21 : t20 } (* { int; #{ int; int } } *)
type t22 = #{ a22 : int; b22 : int32# } (* #{ int; int32# } *)
type t23 = { mutable a23 : int; mutable b23 : t22 } (* { int; #{ int; int32# } } *)
type t24 = #{ a24 : int; b24 : float } (* #{ int; float } *)
type t25 = { mutable a25 : int; mutable b25 : t24 } (* { int; #{ int; float } } *)
type t26 = #{ a26 : int; b26 : int64x2# } (* #{ int; int64x2# } *)
type t27 = { mutable a27 : int; mutable b27 : t26 } (* { int; #{ int; int64x2# } } *)
type t28 = #{ a28 : int; b28 : t18 } (* #{ int; #{ int } } *)
type t29 = { mutable a29 : int; mutable b29 : t28 } (* { int; #{ int; #{ int } } } *)
type t30 = #{ a30 : int32# } (* #{ int32# } *)
type t31 = #{ a31 : int; b31 : t30 } (* #{ int; #{ int32# } } *)
type t32 = { mutable a32 : int; mutable b32 : t31 } (* { int; #{ int; #{ int32# } } } *)
type t33 = #{ a33 : float } (* #{ float } *)
type t34 = #{ a34 : int; b34 : t33 } (* #{ int; #{ float } } *)
type t35 = { mutable a35 : int; mutable b35 : t34 } (* { int; #{ int; #{ float } } } *)
type t36 = #{ a36 : int64x2# } (* #{ int64x2# } *)
type t37 = #{ a37 : int; b37 : t36 } (* #{ int; #{ int64x2# } } *)
type t38 = { mutable a38 : int; mutable b38 : t37 } (* { int; #{ int; #{ int64x2# } } } *)
type t39 = { mutable a39 : int; mutable b39 : t30 } (* { int; #{ int32# } } *)
type t40 = #{ a40 : int32#; b40 : int } (* #{ int32#; int } *)
type t41 = { mutable a41 : int; mutable b41 : t40 } (* { int; #{ int32#; int } } *)
type t42 = #{ a42 : int32#; b42 : int32# } (* #{ int32#; int32# } *)
type t43 = { mutable a43 : int; mutable b43 : t42 } (* { int; #{ int32#; int32# } } *)
type t44 = #{ a44 : int32#; b44 : t18 } (* #{ int32#; #{ int } } *)
type t45 = { mutable a45 : int; mutable b45 : t44 } (* { int; #{ int32#; #{ int } } } *)
type t46 = #{ a46 : int32#; b46 : t30 } (* #{ int32#; #{ int32# } } *)
type t47 = { mutable a47 : int; mutable b47 : t46 } (* { int; #{ int32#; #{ int32# } } } *)
type t48 = { mutable a48 : int; mutable b48 : t33 } (* { int; #{ float } } *)
type t49 = #{ a49 : float; b49 : int } (* #{ float; int } *)
type t50 = { mutable a50 : int; mutable b50 : t49 } (* { int; #{ float; int } } *)
type t51 = #{ a51 : float; b51 : float } (* #{ float; float } *)
type t52 = { mutable a52 : int; mutable b52 : t51 } (* { int; #{ float; float } } *)
type t53 = #{ a53 : float; b53 : t18 } (* #{ float; #{ int } } *)
type t54 = { mutable a54 : int; mutable b54 : t53 } (* { int; #{ float; #{ int } } } *)
type t55 = #{ a55 : float; b55 : t33 } (* #{ float; #{ float } } *)
type t56 = { mutable a56 : int; mutable b56 : t55 } (* { int; #{ float; #{ float } } } *)
type t57 = { mutable a57 : int; mutable b57 : t36 } (* { int; #{ int64x2# } } *)
type t58 = #{ a58 : int64x2#; b58 : int } (* #{ int64x2#; int } *)
type t59 = { mutable a59 : int; mutable b59 : t58 } (* { int; #{ int64x2#; int } } *)
type t60 = #{ a60 : int64x2#; b60 : int64x2# } (* #{ int64x2#; int64x2# } *)
type t61 = { mutable a61 : int; mutable b61 : t60 } (* { int; #{ int64x2#; int64x2# } } *)
type t62 = #{ a62 : int64x2#; b62 : t18 } (* #{ int64x2#; #{ int } } *)
type t63 = { mutable a63 : int; mutable b63 : t62 } (* { int; #{ int64x2#; #{ int } } } *)
type t64 = #{ a64 : int64x2#; b64 : t36 } (* #{ int64x2#; #{ int64x2# } } *)
type t65 = { mutable a65 : int; mutable b65 : t64 } (* { int; #{ int64x2#; #{ int64x2# } } } *)
type t66 = #{ a66 : t20 } (* #{ #{ int; int } } *)
type t67 = { mutable a67 : int; mutable b67 : t66 } (* { int; #{ #{ int; int } } } *)
type t68 = #{ a68 : t22 } (* #{ #{ int; int32# } } *)
type t69 = { mutable a69 : int; mutable b69 : t68 } (* { int; #{ #{ int; int32# } } } *)
type t70 = #{ a70 : t24 } (* #{ #{ int; float } } *)
type t71 = { mutable a71 : int; mutable b71 : t70 } (* { int; #{ #{ int; float } } } *)
type t72 = #{ a72 : t26 } (* #{ #{ int; int64x2# } } *)
type t73 = { mutable a73 : int; mutable b73 : t72 } (* { int; #{ #{ int; int64x2# } } } *)
type t74 = #{ a74 : t40 } (* #{ #{ int32#; int } } *)
type t75 = { mutable a75 : int; mutable b75 : t74 } (* { int; #{ #{ int32#; int } } } *)
type t76 = #{ a76 : t42 } (* #{ #{ int32#; int32# } } *)
type t77 = { mutable a77 : int; mutable b77 : t76 } (* { int; #{ #{ int32#; int32# } } } *)
type t78 = #{ a78 : t49 } (* #{ #{ float; int } } *)
type t79 = { mutable a79 : int; mutable b79 : t78 } (* { int; #{ #{ float; int } } } *)
type t80 = #{ a80 : t51 } (* #{ #{ float; float } } *)
type t81 = { mutable a81 : int; mutable b81 : t80 } (* { int; #{ #{ float; float } } } *)
type t82 = #{ a82 : t58 } (* #{ #{ int64x2#; int } } *)
type t83 = { mutable a83 : int; mutable b83 : t82 } (* { int; #{ #{ int64x2#; int } } } *)
type t84 = #{ a84 : t60 } (* #{ #{ int64x2#; int64x2# } } *)
type t85 = { mutable a85 : int; mutable b85 : t84 } (* { int; #{ #{ int64x2#; int64x2# } } } *)
type t86 = { mutable a86 : int64 } (* { int64 } *)
type t87 = { mutable a87 : int64; mutable b87 : int } (* { int64; int } *)
type t88 = { mutable a88 : int64; mutable b88 : int64 } (* { int64; int64 } *)
type t89 = { mutable a89 : int64; mutable b89 : int64# } (* { int64; int64# } *)
type t90 = { mutable a90 : int64; mutable b90 : int32# } (* { int64; int32# } *)
type t91 = { mutable a91 : int64; mutable b91 : nativeint# } (* { int64; nativeint# } *)
type t92 = { mutable a92 : int64; mutable b92 : float } (* { int64; float } *)
type t93 = { mutable a93 : int64# } (* { int64# } *)
type t94 = { mutable a94 : int64#; mutable b94 : int } (* { int64#; int } *)
type t95 = { mutable a95 : int64#; mutable b95 : int64 } (* { int64#; int64 } *)
type t96 = { mutable a96 : int64#; mutable b96 : int64# } (* { int64#; int64# } *)
type t97 = { mutable a97 : int64#; mutable b97 : int32# } (* { int64#; int32# } *)
type t98 = { mutable a98 : int64#; mutable b98 : nativeint# } (* { int64#; nativeint# } *)
type t99 = { mutable a99 : int64#; mutable b99 : float } (* { int64#; float } *)
type t100 = { mutable a100 : int32# } (* { int32# } *)
type t101 = { mutable a101 : int32#; mutable b101 : int } (* { int32#; int } *)
type t102 = { mutable a102 : int32#; mutable b102 : int; mutable c102 : int } (* { int32#; int; int } *)
type t103 = { mutable a103 : int32#; mutable b103 : int; mutable c103 : int32# } (* { int32#; int; int32# } *)
type t104 = { mutable a104 : int32#; mutable b104 : int64 } (* { int32#; int64 } *)
type t105 = { mutable a105 : int32#; mutable b105 : int64# } (* { int32#; int64# } *)
type t106 = { mutable a106 : int32#; mutable b106 : int32# } (* { int32#; int32# } *)
type t107 = { mutable a107 : int32#; mutable b107 : int32#; mutable c107 : int } (* { int32#; int32#; int } *)
type t108 = { mutable a108 : int32#; mutable b108 : int32#; mutable c108 : int32# } (* { int32#; int32#; int32# } *)
type t109 = { mutable a109 : int32#; mutable b109 : nativeint# } (* { int32#; nativeint# } *)
type t110 = { mutable a110 : int32#; mutable b110 : float } (* { int32#; float } *)
type t111 = { mutable a111 : int32#; mutable b111 : t18 } (* { int32#; #{ int } } *)
type t112 = { mutable a112 : int32#; mutable b112 : t20 } (* { int32#; #{ int; int } } *)
type t113 = { mutable a113 : int32#; mutable b113 : t22 } (* { int32#; #{ int; int32# } } *)
type t114 = { mutable a114 : int32#; mutable b114 : t28 } (* { int32#; #{ int; #{ int } } } *)
type t115 = { mutable a115 : int32#; mutable b115 : t31 } (* { int32#; #{ int; #{ int32# } } } *)
type t116 = { mutable a116 : int32#; mutable b116 : t30 } (* { int32#; #{ int32# } } *)
type t117 = { mutable a117 : int32#; mutable b117 : t40 } (* { int32#; #{ int32#; int } } *)
type t118 = { mutable a118 : int32#; mutable b118 : t42 } (* { int32#; #{ int32#; int32# } } *)
type t119 = { mutable a119 : int32#; mutable b119 : t44 } (* { int32#; #{ int32#; #{ int } } } *)
type t120 = { mutable a120 : int32#; mutable b120 : t46 } (* { int32#; #{ int32#; #{ int32# } } } *)
type t121 = { mutable a121 : int32#; mutable b121 : t66 } (* { int32#; #{ #{ int; int } } } *)
type t122 = { mutable a122 : int32#; mutable b122 : t68 } (* { int32#; #{ #{ int; int32# } } } *)
type t123 = { mutable a123 : int32#; mutable b123 : t74 } (* { int32#; #{ #{ int32#; int } } } *)
type t124 = { mutable a124 : int32#; mutable b124 : t76 } (* { int32#; #{ #{ int32#; int32# } } } *)
type t125 = { mutable a125 : nativeint# } (* { nativeint# } *)
type t126 = { mutable a126 : nativeint#; mutable b126 : int } (* { nativeint#; int } *)
type t127 = { mutable a127 : nativeint#; mutable b127 : int64 } (* { nativeint#; int64 } *)
type t128 = { mutable a128 : nativeint#; mutable b128 : int64# } (* { nativeint#; int64# } *)
type t129 = { mutable a129 : nativeint#; mutable b129 : int32# } (* { nativeint#; int32# } *)
type t130 = { mutable a130 : nativeint#; mutable b130 : nativeint# } (* { nativeint#; nativeint# } *)
type t131 = { mutable a131 : nativeint#; mutable b131 : float } (* { nativeint#; float } *)
type t132 = { mutable a132 : float } (* { float } *)
type t133 = { mutable a133 : float; mutable b133 : int } (* { float; int } *)
type t134 = { mutable a134 : float; mutable b134 : int; mutable c134 : int } (* { float; int; int } *)
type t135 = { mutable a135 : float; mutable b135 : int; mutable c135 : float } (* { float; int; float } *)
type t136 = { mutable a136 : float; mutable b136 : int64 } (* { float; int64 } *)
type t137 = { mutable a137 : float; mutable b137 : int64# } (* { float; int64# } *)
type t138 = { mutable a138 : float; mutable b138 : int32# } (* { float; int32# } *)
type t139 = { mutable a139 : float; mutable b139 : nativeint# } (* { float; nativeint# } *)
type t140 = { mutable a140 : float; mutable b140 : float } (* { float; float } *)
type t141 = { mutable a141 : float; mutable b141 : float; mutable c141 : int } (* { float; float; int } *)
type t142 = { mutable a142 : float; mutable b142 : float; mutable c142 : float } (* { float; float; float } *)
type t143 = { mutable a143 : float; mutable b143 : float; mutable c143 : float# } (* { float; float; float# } *)
type t144 = { mutable a144 : float; mutable b144 : float# } (* { float; float# } *)
type t145 = { mutable a145 : float; mutable b145 : float#; mutable c145 : float } (* { float; float#; float } *)
type t146 = { mutable a146 : float; mutable b146 : float#; mutable c146 : float# } (* { float; float#; float# } *)
type t147 = { mutable a147 : float; mutable b147 : t18 } (* { float; #{ int } } *)
type t148 = { mutable a148 : float; mutable b148 : t20 } (* { float; #{ int; int } } *)
type t149 = { mutable a149 : float; mutable b149 : t24 } (* { float; #{ int; float } } *)
type t150 = { mutable a150 : float; mutable b150 : t28 } (* { float; #{ int; #{ int } } } *)
type t151 = { mutable a151 : float; mutable b151 : t34 } (* { float; #{ int; #{ float } } } *)
type t152 = { mutable a152 : float; mutable b152 : t33 } (* { float; #{ float } } *)
type t153 = { mutable a153 : float; mutable b153 : t49 } (* { float; #{ float; int } } *)
type t154 = { mutable a154 : float; mutable b154 : t51 } (* { float; #{ float; float } } *)
type t155 = #{ a155 : float; b155 : float# } (* #{ float; float# } *)
type t156 = { mutable a156 : float; mutable b156 : t155 } (* { float; #{ float; float# } } *)
type t157 = { mutable a157 : float; mutable b157 : t53 } (* { float; #{ float; #{ int } } } *)
type t158 = { mutable a158 : float; mutable b158 : t55 } (* { float; #{ float; #{ float } } } *)
type t159 = #{ a159 : float# } (* #{ float# } *)
type t160 = #{ a160 : float; b160 : t159 } (* #{ float; #{ float# } } *)
type t161 = { mutable a161 : float; mutable b161 : t160 } (* { float; #{ float; #{ float# } } } *)
type t162 = { mutable a162 : float; mutable b162 : t159 } (* { float; #{ float# } } *)
type t163 = #{ a163 : float#; b163 : float } (* #{ float#; float } *)
type t164 = { mutable a164 : float; mutable b164 : t163 } (* { float; #{ float#; float } } *)
type t165 = #{ a165 : float#; b165 : float# } (* #{ float#; float# } *)
type t166 = { mutable a166 : float; mutable b166 : t165 } (* { float; #{ float#; float# } } *)
type t167 = #{ a167 : float#; b167 : t33 } (* #{ float#; #{ float } } *)
type t168 = { mutable a168 : float; mutable b168 : t167 } (* { float; #{ float#; #{ float } } } *)
type t169 = #{ a169 : float#; b169 : t159 } (* #{ float#; #{ float# } } *)
type t170 = { mutable a170 : float; mutable b170 : t169 } (* { float; #{ float#; #{ float# } } } *)
type t171 = { mutable a171 : float; mutable b171 : t66 } (* { float; #{ #{ int; int } } } *)
type t172 = { mutable a172 : float; mutable b172 : t70 } (* { float; #{ #{ int; float } } } *)
type t173 = { mutable a173 : float; mutable b173 : t78 } (* { float; #{ #{ float; int } } } *)
type t174 = { mutable a174 : float; mutable b174 : t80 } (* { float; #{ #{ float; float } } } *)
type t175 = #{ a175 : t155 } (* #{ #{ float; float# } } *)
type t176 = { mutable a176 : float; mutable b176 : t175 } (* { float; #{ #{ float; float# } } } *)
type t177 = #{ a177 : t163 } (* #{ #{ float#; float } } *)
type t178 = { mutable a178 : float; mutable b178 : t177 } (* { float; #{ #{ float#; float } } } *)
type t179 = #{ a179 : t165 } (* #{ #{ float#; float# } } *)
type t180 = { mutable a180 : float; mutable b180 : t179 } (* { float; #{ #{ float#; float# } } } *)
type t181 = { mutable a181 : float# } (* { float# } *)
type t182 = { mutable a182 : float#; mutable b182 : float } (* { float#; float } *)
type t183 = { mutable a183 : float#; mutable b183 : float; mutable c183 : float } (* { float#; float; float } *)
type t184 = { mutable a184 : float#; mutable b184 : float; mutable c184 : float# } (* { float#; float; float# } *)
type t185 = { mutable a185 : float#; mutable b185 : float# } (* { float#; float# } *)
type t186 = { mutable a186 : float#; mutable b186 : float#; mutable c186 : float } (* { float#; float#; float } *)
type t187 = { mutable a187 : float#; mutable b187 : float#; mutable c187 : float# } (* { float#; float#; float# } *)
type t188 = { mutable a188 : float#; mutable b188 : t33 } (* { float#; #{ float } } *)
type t189 = { mutable a189 : float#; mutable b189 : t51 } (* { float#; #{ float; float } } *)
type t190 = { mutable a190 : float#; mutable b190 : t155 } (* { float#; #{ float; float# } } *)
type t191 = { mutable a191 : float#; mutable b191 : t55 } (* { float#; #{ float; #{ float } } } *)
type t192 = { mutable a192 : float#; mutable b192 : t160 } (* { float#; #{ float; #{ float# } } } *)
type t193 = { mutable a193 : float#; mutable b193 : t159 } (* { float#; #{ float# } } *)
type t194 = { mutable a194 : float#; mutable b194 : t163 } (* { float#; #{ float#; float } } *)
type t195 = { mutable a195 : float#; mutable b195 : t165 } (* { float#; #{ float#; float# } } *)
type t196 = { mutable a196 : float#; mutable b196 : t167 } (* { float#; #{ float#; #{ float } } } *)
type t197 = { mutable a197 : float#; mutable b197 : t169 } (* { float#; #{ float#; #{ float# } } } *)
type t198 = { mutable a198 : float#; mutable b198 : t80 } (* { float#; #{ #{ float; float } } } *)
type t199 = { mutable a199 : float#; mutable b199 : t175 } (* { float#; #{ #{ float; float# } } } *)
type t200 = { mutable a200 : float#; mutable b200 : t177 } (* { float#; #{ #{ float#; float } } } *)
type t201 = { mutable a201 : float#; mutable b201 : t179 } (* { float#; #{ #{ float#; float# } } } *)
type t202 = { mutable a202 : int64x2# } (* { int64x2# } *)
type t203 = { mutable a203 : int64x2#; mutable b203 : int } (* { int64x2#; int } *)
type t204 = { mutable a204 : int64x2#; mutable b204 : int; mutable c204 : int } (* { int64x2#; int; int } *)
type t205 = { mutable a205 : int64x2#; mutable b205 : int; mutable c205 : int64x2# } (* { int64x2#; int; int64x2# } *)
type t206 = { mutable a206 : int64x2#; mutable b206 : int64x2# } (* { int64x2#; int64x2# } *)
type t207 = { mutable a207 : int64x2#; mutable b207 : int64x2#; mutable c207 : int } (* { int64x2#; int64x2#; int } *)
type t208 = { mutable a208 : int64x2#; mutable b208 : int64x2#; mutable c208 : int64x2# } (* { int64x2#; int64x2#; int64x2# } *)
type t209 = { mutable a209 : int64x2#; mutable b209 : t18 } (* { int64x2#; #{ int } } *)
type t210 = { mutable a210 : int64x2#; mutable b210 : t20 } (* { int64x2#; #{ int; int } } *)
type t211 = { mutable a211 : int64x2#; mutable b211 : t26 } (* { int64x2#; #{ int; int64x2# } } *)
type t212 = { mutable a212 : int64x2#; mutable b212 : t28 } (* { int64x2#; #{ int; #{ int } } } *)
type t213 = { mutable a213 : int64x2#; mutable b213 : t37 } (* { int64x2#; #{ int; #{ int64x2# } } } *)
type t214 = #{ a214 : string; b214 : float# } (* #{ string; float# } *)
type t215 = { mutable a215 : int64x2#; mutable b215 : t214 } (* { int64x2#; #{ string; float# } } *)
type t216 = { mutable a216 : int64x2#; mutable b216 : t36 } (* { int64x2#; #{ int64x2# } } *)
type t217 = { mutable a217 : int64x2#; mutable b217 : t58 } (* { int64x2#; #{ int64x2#; int } } *)
type t218 = { mutable a218 : int64x2#; mutable b218 : t60 } (* { int64x2#; #{ int64x2#; int64x2# } } *)
type t219 = { mutable a219 : int64x2#; mutable b219 : t62 } (* { int64x2#; #{ int64x2#; #{ int } } } *)
type t220 = { mutable a220 : int64x2#; mutable b220 : t64 } (* { int64x2#; #{ int64x2#; #{ int64x2# } } } *)
type t221 = { mutable a221 : int64x2#; mutable b221 : t66 } (* { int64x2#; #{ #{ int; int } } } *)
type t222 = { mutable a222 : int64x2#; mutable b222 : t72 } (* { int64x2#; #{ #{ int; int64x2# } } } *)
type t223 = { mutable a223 : int64x2#; mutable b223 : t82 } (* { int64x2#; #{ #{ int64x2#; int } } } *)
type t224 = { mutable a224 : int64x2#; mutable b224 : t84 } (* { int64x2#; #{ #{ int64x2#; int64x2# } } } *)
type t225 = { mutable a225 : t18 } (* { #{ int } } *)
type t226 = { mutable a226 : t18; mutable b226 : int } (* { #{ int }; int } *)
type t227 = { mutable a227 : t18; mutable b227 : int32# } (* { #{ int }; int32# } *)
type t228 = { mutable a228 : t18; mutable b228 : float } (* { #{ int }; float } *)
type t229 = { mutable a229 : t18; mutable b229 : int64x2# } (* { #{ int }; int64x2# } *)
type t230 = { mutable a230 : t20 } (* { #{ int; int } } *)
type t231 = { mutable a231 : t20; mutable b231 : int } (* { #{ int; int }; int } *)
type t232 = { mutable a232 : t20; mutable b232 : int32# } (* { #{ int; int }; int32# } *)
type t233 = { mutable a233 : t20; mutable b233 : float } (* { #{ int; int }; float } *)
type t234 = { mutable a234 : t20; mutable b234 : int64x2# } (* { #{ int; int }; int64x2# } *)
type t235 = { mutable a235 : t22 } (* { #{ int; int32# } } *)
type t236 = { mutable a236 : t22; mutable b236 : int } (* { #{ int; int32# }; int } *)
type t237 = { mutable a237 : t22; mutable b237 : int32# } (* { #{ int; int32# }; int32# } *)
type t238 = { mutable a238 : t24 } (* { #{ int; float } } *)
type t239 = { mutable a239 : t24; mutable b239 : int } (* { #{ int; float }; int } *)
type t240 = { mutable a240 : t24; mutable b240 : float } (* { #{ int; float }; float } *)
type t241 = { mutable a241 : t26 } (* { #{ int; int64x2# } } *)
type t242 = { mutable a242 : t26; mutable b242 : int } (* { #{ int; int64x2# }; int } *)
type t243 = { mutable a243 : t26; mutable b243 : int64x2# } (* { #{ int; int64x2# }; int64x2# } *)
type t244 = #{ a244 : int; b244 : t20 } (* #{ int; #{ int; int } } *)
type t245 = { mutable a245 : t244 } (* { #{ int; #{ int; int } } } *)
type t246 = #{ a246 : int; b246 : t22 } (* #{ int; #{ int; int32# } } *)
type t247 = { mutable a247 : t246 } (* { #{ int; #{ int; int32# } } } *)
type t248 = #{ a248 : int; b248 : t24 } (* #{ int; #{ int; float } } *)
type t249 = { mutable a249 : t248 } (* { #{ int; #{ int; float } } } *)
type t250 = #{ a250 : int; b250 : t26 } (* #{ int; #{ int; int64x2# } } *)
type t251 = { mutable a251 : t250 } (* { #{ int; #{ int; int64x2# } } } *)
type t252 = #{ a252 : int; b252 : t40 } (* #{ int; #{ int32#; int } } *)
type t253 = { mutable a253 : t252 } (* { #{ int; #{ int32#; int } } } *)
type t254 = #{ a254 : int; b254 : t42 } (* #{ int; #{ int32#; int32# } } *)
type t255 = { mutable a255 : t254 } (* { #{ int; #{ int32#; int32# } } } *)
type t256 = #{ a256 : int; b256 : t49 } (* #{ int; #{ float; int } } *)
type t257 = { mutable a257 : t256 } (* { #{ int; #{ float; int } } } *)
type t258 = #{ a258 : int; b258 : t51 } (* #{ int; #{ float; float } } *)
type t259 = { mutable a259 : t258 } (* { #{ int; #{ float; float } } } *)
type t260 = #{ a260 : int; b260 : t58 } (* #{ int; #{ int64x2#; int } } *)
type t261 = { mutable a261 : t260 } (* { #{ int; #{ int64x2#; int } } } *)
type t262 = #{ a262 : int; b262 : t60 } (* #{ int; #{ int64x2#; int64x2# } } *)
type t263 = { mutable a263 : t262 } (* { #{ int; #{ int64x2#; int64x2# } } } *)
type t264 = #{ a264 : int64; b264 : int64# } (* #{ int64; int64# } *)
type t265 = #{ a265 : int64#; b265 : float# } (* #{ int64#; float# } *)
type t266 = { mutable a266 : t264; mutable b266 : t265 } (* { #{ int64; int64# }; #{ int64#; float# } } *)
type t267 = #{ a267 : int64; b267 : string } (* #{ int64; string } *)
type t268 = #{ a268 : int64#; b268 : string } (* #{ int64#; string } *)
type t269 = { mutable a269 : t267; mutable b269 : t268 } (* { #{ int64; string }; #{ int64#; string } } *)
type t270 = #{ a270 : int64#; b270 : int64 } (* #{ int64#; int64 } *)
type t271 = #{ a271 : int64; b271 : int64 } (* #{ int64; int64 } *)
type t272 = { mutable a272 : t270; mutable b272 : t271 } (* { #{ int64#; int64 }; #{ int64; int64 } } *)
type t273 = #{ a273 : float32#; b273 : float } (* #{ float32#; float } *)
type t274 = { mutable a274 : t270; mutable b274 : t273 } (* { #{ int64#; int64 }; #{ float32#; float } } *)
type t275 = { mutable a275 : t30 } (* { #{ int32# } } *)
type t276 = { mutable a276 : t30; mutable b276 : int } (* { #{ int32# }; int } *)
type t277 = { mutable a277 : t30; mutable b277 : int32# } (* { #{ int32# }; int32# } *)
type t278 = { mutable a278 : t40 } (* { #{ int32#; int } } *)
type t279 = { mutable a279 : t40; mutable b279 : int } (* { #{ int32#; int }; int } *)
type t280 = { mutable a280 : t40; mutable b280 : int32# } (* { #{ int32#; int }; int32# } *)
type t281 = { mutable a281 : t42 } (* { #{ int32#; int32# } } *)
type t282 = { mutable a282 : t42; mutable b282 : int } (* { #{ int32#; int32# }; int } *)
type t283 = { mutable a283 : t42; mutable b283 : int32# } (* { #{ int32#; int32# }; int32# } *)
type t284 = #{ a284 : int32#; b284 : t20 } (* #{ int32#; #{ int; int } } *)
type t285 = { mutable a285 : t284 } (* { #{ int32#; #{ int; int } } } *)
type t286 = #{ a286 : int32#; b286 : t22 } (* #{ int32#; #{ int; int32# } } *)
type t287 = { mutable a287 : t286 } (* { #{ int32#; #{ int; int32# } } } *)
type t288 = #{ a288 : int32#; b288 : t40 } (* #{ int32#; #{ int32#; int } } *)
type t289 = { mutable a289 : t288 } (* { #{ int32#; #{ int32#; int } } } *)
type t290 = #{ a290 : int32#; b290 : t42 } (* #{ int32#; #{ int32#; int32# } } *)
type t291 = { mutable a291 : t290 } (* { #{ int32#; #{ int32#; int32# } } } *)
type t292 = { mutable a292 : t33 } (* { #{ float } } *)
type t293 = { mutable a293 : t33; mutable b293 : int } (* { #{ float }; int } *)
type t294 = { mutable a294 : t33; mutable b294 : float } (* { #{ float }; float } *)
type t295 = { mutable a295 : t33; mutable b295 : float# } (* { #{ float }; float# } *)
type t296 = { mutable a296 : t49 } (* { #{ float; int } } *)
type t297 = { mutable a297 : t49; mutable b297 : int } (* { #{ float; int }; int } *)
type t298 = { mutable a298 : t49; mutable b298 : float } (* { #{ float; int }; float } *)
type t299 = { mutable a299 : t51 } (* { #{ float; float } } *)
type t300 = { mutable a300 : t51; mutable b300 : int } (* { #{ float; float }; int } *)
type t301 = { mutable a301 : t51; mutable b301 : float } (* { #{ float; float }; float } *)
type t302 = { mutable a302 : t51; mutable b302 : float# } (* { #{ float; float }; float# } *)
type t303 = { mutable a303 : t155 } (* { #{ float; float# } } *)
type t304 = { mutable a304 : t155; mutable b304 : float } (* { #{ float; float# }; float } *)
type t305 = { mutable a305 : t155; mutable b305 : float# } (* { #{ float; float# }; float# } *)
type t306 = #{ a306 : float; b306 : t20 } (* #{ float; #{ int; int } } *)
type t307 = { mutable a307 : t306 } (* { #{ float; #{ int; int } } } *)
type t308 = #{ a308 : float; b308 : t24 } (* #{ float; #{ int; float } } *)
type t309 = { mutable a309 : t308 } (* { #{ float; #{ int; float } } } *)
type t310 = #{ a310 : float; b310 : t49 } (* #{ float; #{ float; int } } *)
type t311 = { mutable a311 : t310 } (* { #{ float; #{ float; int } } } *)
type t312 = #{ a312 : float; b312 : t51 } (* #{ float; #{ float; float } } *)
type t313 = { mutable a313 : t312 } (* { #{ float; #{ float; float } } } *)
type t314 = #{ a314 : float; b314 : t155 } (* #{ float; #{ float; float# } } *)
type t315 = { mutable a315 : t314 } (* { #{ float; #{ float; float# } } } *)
type t316 = #{ a316 : float; b316 : t163 } (* #{ float; #{ float#; float } } *)
type t317 = { mutable a317 : t316 } (* { #{ float; #{ float#; float } } } *)
type t318 = #{ a318 : float; b318 : t165 } (* #{ float; #{ float#; float# } } *)
type t319 = { mutable a319 : t318 } (* { #{ float; #{ float#; float# } } } *)
type t320 = { mutable a320 : t159 } (* { #{ float# } } *)
type t321 = { mutable a321 : t159; mutable b321 : float } (* { #{ float# }; float } *)
type t322 = { mutable a322 : t159; mutable b322 : float# } (* { #{ float# }; float# } *)
type t323 = { mutable a323 : t163 } (* { #{ float#; float } } *)
type t324 = { mutable a324 : t163; mutable b324 : float } (* { #{ float#; float }; float } *)
type t325 = { mutable a325 : t163; mutable b325 : float# } (* { #{ float#; float }; float# } *)
type t326 = { mutable a326 : t165 } (* { #{ float#; float# } } *)
type t327 = { mutable a327 : t165; mutable b327 : float } (* { #{ float#; float# }; float } *)
type t328 = { mutable a328 : t165; mutable b328 : float# } (* { #{ float#; float# }; float# } *)
type t329 = #{ a329 : float#; b329 : t51 } (* #{ float#; #{ float; float } } *)
type t330 = { mutable a330 : t329 } (* { #{ float#; #{ float; float } } } *)
type t331 = #{ a331 : float#; b331 : t155 } (* #{ float#; #{ float; float# } } *)
type t332 = { mutable a332 : t331 } (* { #{ float#; #{ float; float# } } } *)
type t333 = #{ a333 : float#; b333 : t163 } (* #{ float#; #{ float#; float } } *)
type t334 = { mutable a334 : t333 } (* { #{ float#; #{ float#; float } } } *)
type t335 = #{ a335 : float#; b335 : t165 } (* #{ float#; #{ float#; float# } } *)
type t336 = { mutable a336 : t335 } (* { #{ float#; #{ float#; float# } } } *)
type t337 = #{ a337 : float32#; b337 : int64# } (* #{ float32#; int64# } *)
type t338 = #{ a338 : string; b338 : int64# } (* #{ string; int64# } *)
type t339 = { mutable a339 : t337; mutable b339 : t338 } (* { #{ float32#; int64# }; #{ string; int64# } } *)
type t340 = { mutable a340 : t36 } (* { #{ int64x2# } } *)
type t341 = { mutable a341 : t36; mutable b341 : int } (* { #{ int64x2# }; int } *)
type t342 = { mutable a342 : t36; mutable b342 : int64x2# } (* { #{ int64x2# }; int64x2# } *)
type t343 = { mutable a343 : t58 } (* { #{ int64x2#; int } } *)
type t344 = { mutable a344 : t58; mutable b344 : int } (* { #{ int64x2#; int }; int } *)
type t345 = { mutable a345 : t58; mutable b345 : int64x2# } (* { #{ int64x2#; int }; int64x2# } *)
type t346 = #{ a346 : int64x2#; b346 : string } (* #{ int64x2#; string } *)
type t347 = #{ a347 : int64; b347 : float# } (* #{ int64; float# } *)
type t348 = { mutable a348 : t346; mutable b348 : t347 } (* { #{ int64x2#; string }; #{ int64; float# } } *)
type t349 = { mutable a349 : t60 } (* { #{ int64x2#; int64x2# } } *)
type t350 = { mutable a350 : t60; mutable b350 : int } (* { #{ int64x2#; int64x2# }; int } *)
type t351 = { mutable a351 : t60; mutable b351 : int64x2# } (* { #{ int64x2#; int64x2# }; int64x2# } *)
type t352 = #{ a352 : int64x2#; b352 : t20 } (* #{ int64x2#; #{ int; int } } *)
type t353 = { mutable a353 : t352 } (* { #{ int64x2#; #{ int; int } } } *)
type t354 = #{ a354 : int64x2#; b354 : t26 } (* #{ int64x2#; #{ int; int64x2# } } *)
type t355 = { mutable a355 : t354 } (* { #{ int64x2#; #{ int; int64x2# } } } *)
type t356 = #{ a356 : int64x2#; b356 : t58 } (* #{ int64x2#; #{ int64x2#; int } } *)
type t357 = { mutable a357 : t356 } (* { #{ int64x2#; #{ int64x2#; int } } } *)
type t358 = #{ a358 : int64x2#; b358 : t60 } (* #{ int64x2#; #{ int64x2#; int64x2# } } *)
type t359 = { mutable a359 : t358 } (* { #{ int64x2#; #{ int64x2#; int64x2# } } } *)
type t360 = #{ a360 : t20; b360 : int } (* #{ #{ int; int }; int } *)
type t361 = { mutable a361 : t360 } (* { #{ #{ int; int }; int } } *)
type t362 = #{ a362 : t20; b362 : int32# } (* #{ #{ int; int }; int32# } *)
type t363 = { mutable a363 : t362 } (* { #{ #{ int; int }; int32# } } *)
type t364 = #{ a364 : t20; b364 : float } (* #{ #{ int; int }; float } *)
type t365 = { mutable a365 : t364 } (* { #{ #{ int; int }; float } } *)
type t366 = #{ a366 : t20; b366 : int64x2# } (* #{ #{ int; int }; int64x2# } *)
type t367 = { mutable a367 : t366 } (* { #{ #{ int; int }; int64x2# } } *)
type t368 = #{ a368 : t22; b368 : int } (* #{ #{ int; int32# }; int } *)
type t369 = { mutable a369 : t368 } (* { #{ #{ int; int32# }; int } } *)
type t370 = #{ a370 : t22; b370 : int32# } (* #{ #{ int; int32# }; int32# } *)
type t371 = { mutable a371 : t370 } (* { #{ #{ int; int32# }; int32# } } *)
type t372 = #{ a372 : t24; b372 : int } (* #{ #{ int; float }; int } *)
type t373 = { mutable a373 : t372 } (* { #{ #{ int; float }; int } } *)
type t374 = #{ a374 : t24; b374 : float } (* #{ #{ int; float }; float } *)
type t375 = { mutable a375 : t374 } (* { #{ #{ int; float }; float } } *)
type t376 = #{ a376 : t26; b376 : int } (* #{ #{ int; int64x2# }; int } *)
type t377 = { mutable a377 : t376 } (* { #{ #{ int; int64x2# }; int } } *)
type t378 = #{ a378 : t26; b378 : int64x2# } (* #{ #{ int; int64x2# }; int64x2# } *)
type t379 = { mutable a379 : t378 } (* { #{ #{ int; int64x2# }; int64x2# } } *)
type t380 = #{ a380 : t40; b380 : int } (* #{ #{ int32#; int }; int } *)
type t381 = { mutable a381 : t380 } (* { #{ #{ int32#; int }; int } } *)
type t382 = #{ a382 : t40; b382 : int32# } (* #{ #{ int32#; int }; int32# } *)
type t383 = { mutable a383 : t382 } (* { #{ #{ int32#; int }; int32# } } *)
type t384 = #{ a384 : t42; b384 : int } (* #{ #{ int32#; int32# }; int } *)
type t385 = { mutable a385 : t384 } (* { #{ #{ int32#; int32# }; int } } *)
type t386 = #{ a386 : t42; b386 : int32# } (* #{ #{ int32#; int32# }; int32# } *)
type t387 = { mutable a387 : t386 } (* { #{ #{ int32#; int32# }; int32# } } *)
type t388 = #{ a388 : t49; b388 : int } (* #{ #{ float; int }; int } *)
type t389 = { mutable a389 : t388 } (* { #{ #{ float; int }; int } } *)
type t390 = #{ a390 : t49; b390 : float } (* #{ #{ float; int }; float } *)
type t391 = { mutable a391 : t390 } (* { #{ #{ float; int }; float } } *)
type t392 = #{ a392 : t51; b392 : int } (* #{ #{ float; float }; int } *)
type t393 = { mutable a393 : t392 } (* { #{ #{ float; float }; int } } *)
type t394 = #{ a394 : t51; b394 : float } (* #{ #{ float; float }; float } *)
type t395 = { mutable a395 : t394 } (* { #{ #{ float; float }; float } } *)
type t396 = #{ a396 : t51; b396 : float# } (* #{ #{ float; float }; float# } *)
type t397 = { mutable a397 : t396 } (* { #{ #{ float; float }; float# } } *)
type t398 = #{ a398 : t155; b398 : float } (* #{ #{ float; float# }; float } *)
type t399 = { mutable a399 : t398 } (* { #{ #{ float; float# }; float } } *)
type t400 = #{ a400 : t155; b400 : float# } (* #{ #{ float; float# }; float# } *)
type t401 = { mutable a401 : t400 } (* { #{ #{ float; float# }; float# } } *)
type t402 = #{ a402 : t163; b402 : float } (* #{ #{ float#; float }; float } *)
type t403 = { mutable a403 : t402 } (* { #{ #{ float#; float }; float } } *)
type t404 = #{ a404 : t163; b404 : float# } (* #{ #{ float#; float }; float# } *)
type t405 = { mutable a405 : t404 } (* { #{ #{ float#; float }; float# } } *)
type t406 = #{ a406 : t165; b406 : float } (* #{ #{ float#; float# }; float } *)
type t407 = { mutable a407 : t406 } (* { #{ #{ float#; float# }; float } } *)
type t408 = #{ a408 : t165; b408 : float# } (* #{ #{ float#; float# }; float# } *)
type t409 = { mutable a409 : t408 } (* { #{ #{ float#; float# }; float# } } *)
type t410 = #{ a410 : t58; b410 : int } (* #{ #{ int64x2#; int }; int } *)
type t411 = { mutable a411 : t410 } (* { #{ #{ int64x2#; int }; int } } *)
type t412 = #{ a412 : t58; b412 : int64x2# } (* #{ #{ int64x2#; int }; int64x2# } *)
type t413 = { mutable a413 : t412 } (* { #{ #{ int64x2#; int }; int64x2# } } *)
type t414 = #{ a414 : t60; b414 : int } (* #{ #{ int64x2#; int64x2# }; int } *)
type t415 = { mutable a415 : t414 } (* { #{ #{ int64x2#; int64x2# }; int } } *)
type t416 = #{ a416 : t60; b416 : int64x2# } (* #{ #{ int64x2#; int64x2# }; int64x2# } *)
type t417 = { mutable a417 : t416 } (* { #{ #{ int64x2#; int64x2# }; int64x2# } } *)

let () =
  (********************)
  (*   t0 = { int }   *)
  (********************)
  (* Deepening to (.a0) *)
  let idx : (t0, _) idx_mut = (.a0) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a0) *)
    let shallow : (t0, _) idx_mut = (.a0) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1 failed %d" i;
  );

  (*************************)
  (*   t1 = { int; int }   *)
  (*************************)
  (* Deepening to (.a1) *)
  let idx : (t1, _) idx_mut = (.a1) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a1) *)
    let shallow : (t1, _) idx_mut = (.a1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 2;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 2 failed %d" i;
  );
  (* Deepening to (.b1) *)
  let idx : (t1, _) idx_mut = (.b1) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b1) *)
    let shallow : (t1, _) idx_mut = (.b1) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 3;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 3 failed %d" i;
  );

  (******************************)
  (*   t2 = { int; int; int }   *)
  (******************************)
  (* Deepening to (.a2) *)
  let idx : (t2, _) idx_mut = (.a2) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a2) *)
    let shallow : (t2, _) idx_mut = (.a2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 4;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 4 failed %d" i;
  );
  (* Deepening to (.b2) *)
  let idx : (t2, _) idx_mut = (.b2) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b2) *)
    let shallow : (t2, _) idx_mut = (.b2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 5;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 5 failed %d" i;
  );
  (* Deepening to (.c2) *)
  let idx : (t2, _) idx_mut = (.c2) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c2) *)
    let shallow : (t2, _) idx_mut = (.c2) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 6;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 6 failed %d" i;
  );

  (*********************************)
  (*   t3 = { int; int; int32# }   *)
  (*********************************)
  (* Deepening to (.a3) *)
  let idx : (t3, _) idx_mut = (.a3) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a3) *)
    let shallow : (t3, _) idx_mut = (.a3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 7;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 7 failed %d" i;
  );
  (* Deepening to (.b3) *)
  let idx : (t3, _) idx_mut = (.b3) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b3) *)
    let shallow : (t3, _) idx_mut = (.b3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 8;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 8 failed %d" i;
  );
  (* Deepening to (.c3) *)
  let idx : (t3, _) idx_mut = (.c3) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c3) *)
    let shallow : (t3, _) idx_mut = (.c3) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 9;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 9 failed %d" i;
  );

  (********************************)
  (*   t4 = { int; int; float }   *)
  (********************************)
  (* Deepening to (.a4) *)
  let idx : (t4, _) idx_mut = (.a4) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a4) *)
    let shallow : (t4, _) idx_mut = (.a4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 10;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 10 failed %d" i;
  );
  (* Deepening to (.b4) *)
  let idx : (t4, _) idx_mut = (.b4) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b4) *)
    let shallow : (t4, _) idx_mut = (.b4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 11;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 11 failed %d" i;
  );
  (* Deepening to (.c4) *)
  let idx : (t4, _) idx_mut = (.c4) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c4) *)
    let shallow : (t4, _) idx_mut = (.c4) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 12;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 12 failed %d" i;
  );

  (***********************************)
  (*   t5 = { int; int; int64x2# }   *)
  (***********************************)
  (* Deepening to (.a5) *)
  let idx : (t5, _) idx_mut = (.a5) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a5) *)
    let shallow : (t5, _) idx_mut = (.a5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 13;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 13 failed %d" i;
  );
  (* Deepening to (.b5) *)
  let idx : (t5, _) idx_mut = (.b5) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b5) *)
    let shallow : (t5, _) idx_mut = (.b5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 14;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 14 failed %d" i;
  );
  (* Deepening to (.c5) *)
  let idx : (t5, _) idx_mut = (.c5) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c5) *)
    let shallow : (t5, _) idx_mut = (.c5) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 15;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 15 failed %d" i;
  );

  (***************************)
  (*   t6 = { int; int64 }   *)
  (***************************)
  (* Deepening to (.a6) *)
  let idx : (t6, _) idx_mut = (.a6) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a6) *)
    let shallow : (t6, _) idx_mut = (.a6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 16;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 16 failed %d" i;
  );
  (* Deepening to (.b6) *)
  let idx : (t6, _) idx_mut = (.b6) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b6) *)
    let shallow : (t6, _) idx_mut = (.b6) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 17;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 17 failed %d" i;
  );

  (****************************)
  (*   t7 = { int; int64# }   *)
  (****************************)
  (* Deepening to (.a7) *)
  let idx : (t7, _) idx_mut = (.a7) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a7) *)
    let shallow : (t7, _) idx_mut = (.a7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 18;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 18 failed %d" i;
  );
  (* Deepening to (.b7) *)
  let idx : (t7, _) idx_mut = (.b7) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b7) *)
    let shallow : (t7, _) idx_mut = (.b7) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 19;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 19 failed %d" i;
  );

  (****************************)
  (*   t8 = { int; int32# }   *)
  (****************************)
  (* Deepening to (.a8) *)
  let idx : (t8, _) idx_mut = (.a8) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a8) *)
    let shallow : (t8, _) idx_mut = (.a8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 20;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 20 failed %d" i;
  );
  (* Deepening to (.b8) *)
  let idx : (t8, _) idx_mut = (.b8) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b8) *)
    let shallow : (t8, _) idx_mut = (.b8) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 21;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 21 failed %d" i;
  );

  (*********************************)
  (*   t9 = { int; int32#; int }   *)
  (*********************************)
  (* Deepening to (.a9) *)
  let idx : (t9, _) idx_mut = (.a9) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a9) *)
    let shallow : (t9, _) idx_mut = (.a9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 22;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 22 failed %d" i;
  );
  (* Deepening to (.b9) *)
  let idx : (t9, _) idx_mut = (.b9) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b9) *)
    let shallow : (t9, _) idx_mut = (.b9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 23;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 23 failed %d" i;
  );
  (* Deepening to (.c9) *)
  let idx : (t9, _) idx_mut = (.c9) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c9) *)
    let shallow : (t9, _) idx_mut = (.c9) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 24;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 24 failed %d" i;
  );

  (*************************************)
  (*   t10 = { int; int32#; int32# }   *)
  (*************************************)
  (* Deepening to (.a10) *)
  let idx : (t10, _) idx_mut = (.a10) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a10) *)
    let shallow : (t10, _) idx_mut = (.a10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 25;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 25 failed %d" i;
  );
  (* Deepening to (.b10) *)
  let idx : (t10, _) idx_mut = (.b10) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b10) *)
    let shallow : (t10, _) idx_mut = (.b10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 26;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 26 failed %d" i;
  );
  (* Deepening to (.c10) *)
  let idx : (t10, _) idx_mut = (.c10) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c10) *)
    let shallow : (t10, _) idx_mut = (.c10) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 27;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 27 failed %d" i;
  );

  (*********************************)
  (*   t11 = { int; nativeint# }   *)
  (*********************************)
  (* Deepening to (.a11) *)
  let idx : (t11, _) idx_mut = (.a11) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a11) *)
    let shallow : (t11, _) idx_mut = (.a11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 28;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 28 failed %d" i;
  );
  (* Deepening to (.b11) *)
  let idx : (t11, _) idx_mut = (.b11) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b11) *)
    let shallow : (t11, _) idx_mut = (.b11) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 29;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 29 failed %d" i;
  );

  (****************************)
  (*   t12 = { int; float }   *)
  (****************************)
  (* Deepening to (.a12) *)
  let idx : (t12, _) idx_mut = (.a12) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a12) *)
    let shallow : (t12, _) idx_mut = (.a12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 30;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 30 failed %d" i;
  );
  (* Deepening to (.b12) *)
  let idx : (t12, _) idx_mut = (.b12) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b12) *)
    let shallow : (t12, _) idx_mut = (.b12) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 31;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 31 failed %d" i;
  );

  (*********************************)
  (*   t13 = { int; float; int }   *)
  (*********************************)
  (* Deepening to (.a13) *)
  let idx : (t13, _) idx_mut = (.a13) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a13) *)
    let shallow : (t13, _) idx_mut = (.a13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 32;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 32 failed %d" i;
  );
  (* Deepening to (.b13) *)
  let idx : (t13, _) idx_mut = (.b13) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b13) *)
    let shallow : (t13, _) idx_mut = (.b13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 33;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 33 failed %d" i;
  );
  (* Deepening to (.c13) *)
  let idx : (t13, _) idx_mut = (.c13) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c13) *)
    let shallow : (t13, _) idx_mut = (.c13) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 34;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 34 failed %d" i;
  );

  (***********************************)
  (*   t14 = { int; float; float }   *)
  (***********************************)
  (* Deepening to (.a14) *)
  let idx : (t14, _) idx_mut = (.a14) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a14) *)
    let shallow : (t14, _) idx_mut = (.a14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 35;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 35 failed %d" i;
  );
  (* Deepening to (.b14) *)
  let idx : (t14, _) idx_mut = (.b14) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b14) *)
    let shallow : (t14, _) idx_mut = (.b14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 36;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 36 failed %d" i;
  );
  (* Deepening to (.c14) *)
  let idx : (t14, _) idx_mut = (.c14) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c14) *)
    let shallow : (t14, _) idx_mut = (.c14) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 37;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 37 failed %d" i;
  );

  (*******************************)
  (*   t15 = { int; int64x2# }   *)
  (*******************************)
  (* Deepening to (.a15) *)
  let idx : (t15, _) idx_mut = (.a15) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a15) *)
    let shallow : (t15, _) idx_mut = (.a15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 38;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 38 failed %d" i;
  );
  (* Deepening to (.b15) *)
  let idx : (t15, _) idx_mut = (.b15) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b15) *)
    let shallow : (t15, _) idx_mut = (.b15) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 39;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 39 failed %d" i;
  );

  (************************************)
  (*   t16 = { int; int64x2#; int }   *)
  (************************************)
  (* Deepening to (.a16) *)
  let idx : (t16, _) idx_mut = (.a16) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a16) *)
    let shallow : (t16, _) idx_mut = (.a16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 40;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 40 failed %d" i;
  );
  (* Deepening to (.b16) *)
  let idx : (t16, _) idx_mut = (.b16) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b16) *)
    let shallow : (t16, _) idx_mut = (.b16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 41;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 41 failed %d" i;
  );
  (* Deepening to (.c16) *)
  let idx : (t16, _) idx_mut = (.c16) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c16) *)
    let shallow : (t16, _) idx_mut = (.c16) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 42;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 42 failed %d" i;
  );

  (*****************************************)
  (*   t17 = { int; int64x2#; int64x2# }   *)
  (*****************************************)
  (* Deepening to (.a17) *)
  let idx : (t17, _) idx_mut = (.a17) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a17) *)
    let shallow : (t17, _) idx_mut = (.a17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 43;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 43 failed %d" i;
  );
  (* Deepening to (.b17) *)
  let idx : (t17, _) idx_mut = (.b17) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b17) *)
    let shallow : (t17, _) idx_mut = (.b17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 44;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 44 failed %d" i;
  );
  (* Deepening to (.c17) *)
  let idx : (t17, _) idx_mut = (.c17) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c17) *)
    let shallow : (t17, _) idx_mut = (.c17) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 45;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 45 failed %d" i;
  );

  (*******************************)
  (*   t19 = { int; #{ int } }   *)
  (*******************************)
  (* Deepening to (.a19) *)
  let idx : (t19, _) idx_mut = (.a19) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a19) *)
    let shallow : (t19, _) idx_mut = (.a19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 46;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 46 failed %d" i;
  );
  (* Deepening to (.b19) *)
  let idx : (t19, _) idx_mut = (.b19) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b19) *)
    let shallow : (t19, _) idx_mut = (.b19) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 47;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 47 failed %d" i;
  );
  (* Deepening to (.b19.#a18) *)
  let idx : (t19, _) idx_mut = (.b19.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b19) *)
    let shallow : (t19, _) idx_mut = (.b19) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 48;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 48 failed %d" i;
    (* from (.b19.#a18) *)
    let shallow : (t19, _) idx_mut = (.b19.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 49;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 49 failed %d" i;
  );

  (************************************)
  (*   t21 = { int; #{ int; int } }   *)
  (************************************)
  (* Deepening to (.a21) *)
  let idx : (t21, _) idx_mut = (.a21) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a21) *)
    let shallow : (t21, _) idx_mut = (.a21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 50;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 50 failed %d" i;
  );
  (* Deepening to (.b21) *)
  let idx : (t21, _) idx_mut = (.b21) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b21) *)
    let shallow : (t21, _) idx_mut = (.b21) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 51;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 51 failed %d" i;
  );
  (* Deepening to (.b21.#a20) *)
  let idx : (t21, _) idx_mut = (.b21.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b21) *)
    let shallow : (t21, _) idx_mut = (.b21) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 52;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 52 failed %d" i;
    (* from (.b21.#a20) *)
    let shallow : (t21, _) idx_mut = (.b21.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 53;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 53 failed %d" i;
  );
  (* Deepening to (.b21.#b20) *)
  let idx : (t21, _) idx_mut = (.b21.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b21) *)
    let shallow : (t21, _) idx_mut = (.b21) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 54;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 54 failed %d" i;
    (* from (.b21.#b20) *)
    let shallow : (t21, _) idx_mut = (.b21.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 55;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 55 failed %d" i;
  );

  (***************************************)
  (*   t23 = { int; #{ int; int32# } }   *)
  (***************************************)
  (* Deepening to (.a23) *)
  let idx : (t23, _) idx_mut = (.a23) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a23) *)
    let shallow : (t23, _) idx_mut = (.a23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 56;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 56 failed %d" i;
  );
  (* Deepening to (.b23) *)
  let idx : (t23, _) idx_mut = (.b23) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b23) *)
    let shallow : (t23, _) idx_mut = (.b23) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 57;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 57 failed %d" i;
  );
  (* Deepening to (.b23.#a22) *)
  let idx : (t23, _) idx_mut = (.b23.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b23) *)
    let shallow : (t23, _) idx_mut = (.b23) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 58;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 58 failed %d" i;
    (* from (.b23.#a22) *)
    let shallow : (t23, _) idx_mut = (.b23.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 59;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 59 failed %d" i;
  );
  (* Deepening to (.b23.#b22) *)
  let idx : (t23, _) idx_mut = (.b23.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b23) *)
    let shallow : (t23, _) idx_mut = (.b23) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 60;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 60 failed %d" i;
    (* from (.b23.#b22) *)
    let shallow : (t23, _) idx_mut = (.b23.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 61;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 61 failed %d" i;
  );

  (**************************************)
  (*   t25 = { int; #{ int; float } }   *)
  (**************************************)
  (* Deepening to (.a25) *)
  let idx : (t25, _) idx_mut = (.a25) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a25) *)
    let shallow : (t25, _) idx_mut = (.a25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 62;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 62 failed %d" i;
  );
  (* Deepening to (.b25) *)
  let idx : (t25, _) idx_mut = (.b25) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b25) *)
    let shallow : (t25, _) idx_mut = (.b25) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 63;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 63 failed %d" i;
  );
  (* Deepening to (.b25.#a24) *)
  let idx : (t25, _) idx_mut = (.b25.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b25) *)
    let shallow : (t25, _) idx_mut = (.b25) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 64;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 64 failed %d" i;
    (* from (.b25.#a24) *)
    let shallow : (t25, _) idx_mut = (.b25.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 65;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 65 failed %d" i;
  );
  (* Deepening to (.b25.#b24) *)
  let idx : (t25, _) idx_mut = (.b25.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b25) *)
    let shallow : (t25, _) idx_mut = (.b25) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 66;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 66 failed %d" i;
    (* from (.b25.#b24) *)
    let shallow : (t25, _) idx_mut = (.b25.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 67;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 67 failed %d" i;
  );

  (*****************************************)
  (*   t27 = { int; #{ int; int64x2# } }   *)
  (*****************************************)
  (* Deepening to (.a27) *)
  let idx : (t27, _) idx_mut = (.a27) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a27) *)
    let shallow : (t27, _) idx_mut = (.a27) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 68;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 68 failed %d" i;
  );
  (* Deepening to (.b27) *)
  let idx : (t27, _) idx_mut = (.b27) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b27) *)
    let shallow : (t27, _) idx_mut = (.b27) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 69;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 69 failed %d" i;
  );
  (* Deepening to (.b27.#a26) *)
  let idx : (t27, _) idx_mut = (.b27.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b27) *)
    let shallow : (t27, _) idx_mut = (.b27) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 70;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 70 failed %d" i;
    (* from (.b27.#a26) *)
    let shallow : (t27, _) idx_mut = (.b27.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 71;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 71 failed %d" i;
  );
  (* Deepening to (.b27.#b26) *)
  let idx : (t27, _) idx_mut = (.b27.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b27) *)
    let shallow : (t27, _) idx_mut = (.b27) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 72;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 72 failed %d" i;
    (* from (.b27.#b26) *)
    let shallow : (t27, _) idx_mut = (.b27.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 73;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 73 failed %d" i;
  );

  (*****************************************)
  (*   t29 = { int; #{ int; #{ int } } }   *)
  (*****************************************)
  (* Deepening to (.a29) *)
  let idx : (t29, _) idx_mut = (.a29) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a29) *)
    let shallow : (t29, _) idx_mut = (.a29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 74;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 74 failed %d" i;
  );
  (* Deepening to (.b29) *)
  let idx : (t29, _) idx_mut = (.b29) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b29) *)
    let shallow : (t29, _) idx_mut = (.b29) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 75;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 75 failed %d" i;
  );
  (* Deepening to (.b29.#a28) *)
  let idx : (t29, _) idx_mut = (.b29.#a28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b29) *)
    let shallow : (t29, _) idx_mut = (.b29) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 76;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 76 failed %d" i;
    (* from (.b29.#a28) *)
    let shallow : (t29, _) idx_mut = (.b29.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 77;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 77 failed %d" i;
  );
  (* Deepening to (.b29.#b28) *)
  let idx : (t29, _) idx_mut = (.b29.#b28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b29) *)
    let shallow : (t29, _) idx_mut = (.b29) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 78;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 78 failed %d" i;
    (* from (.b29.#b28) *)
    let shallow : (t29, _) idx_mut = (.b29.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 79;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 79 failed %d" i;
  );
  (* Deepening to (.b29.#b28.#a18) *)
  let idx : (t29, _) idx_mut = (.b29.#b28.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b29) *)
    let shallow : (t29, _) idx_mut = (.b29) in
    let deepened = (.idx_mut(shallow).#b28.#a18) in
    mark_test_run 80;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 80 failed %d" i;
    (* from (.b29.#b28) *)
    let shallow : (t29, _) idx_mut = (.b29.#b28) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 81;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 81 failed %d" i;
    (* from (.b29.#b28.#a18) *)
    let shallow : (t29, _) idx_mut = (.b29.#b28.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 82;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 82 failed %d" i;
  );

  (********************************************)
  (*   t32 = { int; #{ int; #{ int32# } } }   *)
  (********************************************)
  (* Deepening to (.a32) *)
  let idx : (t32, _) idx_mut = (.a32) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a32) *)
    let shallow : (t32, _) idx_mut = (.a32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 83;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 83 failed %d" i;
  );
  (* Deepening to (.b32) *)
  let idx : (t32, _) idx_mut = (.b32) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b32) *)
    let shallow : (t32, _) idx_mut = (.b32) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 84;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 84 failed %d" i;
  );
  (* Deepening to (.b32.#a31) *)
  let idx : (t32, _) idx_mut = (.b32.#a31) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b32) *)
    let shallow : (t32, _) idx_mut = (.b32) in
    let deepened = (.idx_mut(shallow).#a31) in
    mark_test_run 85;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 85 failed %d" i;
    (* from (.b32.#a31) *)
    let shallow : (t32, _) idx_mut = (.b32.#a31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 86;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 86 failed %d" i;
  );
  (* Deepening to (.b32.#b31) *)
  let idx : (t32, _) idx_mut = (.b32.#b31) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b32) *)
    let shallow : (t32, _) idx_mut = (.b32) in
    let deepened = (.idx_mut(shallow).#b31) in
    mark_test_run 87;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 87 failed %d" i;
    (* from (.b32.#b31) *)
    let shallow : (t32, _) idx_mut = (.b32.#b31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 88;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 88 failed %d" i;
  );
  (* Deepening to (.b32.#b31.#a30) *)
  let idx : (t32, _) idx_mut = (.b32.#b31.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b32) *)
    let shallow : (t32, _) idx_mut = (.b32) in
    let deepened = (.idx_mut(shallow).#b31.#a30) in
    mark_test_run 89;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 89 failed %d" i;
    (* from (.b32.#b31) *)
    let shallow : (t32, _) idx_mut = (.b32.#b31) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 90;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 90 failed %d" i;
    (* from (.b32.#b31.#a30) *)
    let shallow : (t32, _) idx_mut = (.b32.#b31.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 91;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 91 failed %d" i;
  );

  (*******************************************)
  (*   t35 = { int; #{ int; #{ float } } }   *)
  (*******************************************)
  (* Deepening to (.a35) *)
  let idx : (t35, _) idx_mut = (.a35) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a35) *)
    let shallow : (t35, _) idx_mut = (.a35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 92;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 92 failed %d" i;
  );
  (* Deepening to (.b35) *)
  let idx : (t35, _) idx_mut = (.b35) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b35) *)
    let shallow : (t35, _) idx_mut = (.b35) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 93;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 93 failed %d" i;
  );
  (* Deepening to (.b35.#a34) *)
  let idx : (t35, _) idx_mut = (.b35.#a34) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b35) *)
    let shallow : (t35, _) idx_mut = (.b35) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 94;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 94 failed %d" i;
    (* from (.b35.#a34) *)
    let shallow : (t35, _) idx_mut = (.b35.#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 95;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 95 failed %d" i;
  );
  (* Deepening to (.b35.#b34) *)
  let idx : (t35, _) idx_mut = (.b35.#b34) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b35) *)
    let shallow : (t35, _) idx_mut = (.b35) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 96;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 96 failed %d" i;
    (* from (.b35.#b34) *)
    let shallow : (t35, _) idx_mut = (.b35.#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 97;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 97 failed %d" i;
  );
  (* Deepening to (.b35.#b34.#a33) *)
  let idx : (t35, _) idx_mut = (.b35.#b34.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b35) *)
    let shallow : (t35, _) idx_mut = (.b35) in
    let deepened = (.idx_mut(shallow).#b34.#a33) in
    mark_test_run 98;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 98 failed %d" i;
    (* from (.b35.#b34) *)
    let shallow : (t35, _) idx_mut = (.b35.#b34) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 99;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 99 failed %d" i;
    (* from (.b35.#b34.#a33) *)
    let shallow : (t35, _) idx_mut = (.b35.#b34.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 100;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 100 failed %d" i;
  );

  (**********************************************)
  (*   t38 = { int; #{ int; #{ int64x2# } } }   *)
  (**********************************************)
  (* Deepening to (.a38) *)
  let idx : (t38, _) idx_mut = (.a38) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a38) *)
    let shallow : (t38, _) idx_mut = (.a38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 101;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 101 failed %d" i;
  );
  (* Deepening to (.b38) *)
  let idx : (t38, _) idx_mut = (.b38) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b38) *)
    let shallow : (t38, _) idx_mut = (.b38) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 102;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 102 failed %d" i;
  );
  (* Deepening to (.b38.#a37) *)
  let idx : (t38, _) idx_mut = (.b38.#a37) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b38) *)
    let shallow : (t38, _) idx_mut = (.b38) in
    let deepened = (.idx_mut(shallow).#a37) in
    mark_test_run 103;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 103 failed %d" i;
    (* from (.b38.#a37) *)
    let shallow : (t38, _) idx_mut = (.b38.#a37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 104;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 104 failed %d" i;
  );
  (* Deepening to (.b38.#b37) *)
  let idx : (t38, _) idx_mut = (.b38.#b37) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b38) *)
    let shallow : (t38, _) idx_mut = (.b38) in
    let deepened = (.idx_mut(shallow).#b37) in
    mark_test_run 105;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 105 failed %d" i;
    (* from (.b38.#b37) *)
    let shallow : (t38, _) idx_mut = (.b38.#b37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 106;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 106 failed %d" i;
  );
  (* Deepening to (.b38.#b37.#a36) *)
  let idx : (t38, _) idx_mut = (.b38.#b37.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b38) *)
    let shallow : (t38, _) idx_mut = (.b38) in
    let deepened = (.idx_mut(shallow).#b37.#a36) in
    mark_test_run 107;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 107 failed %d" i;
    (* from (.b38.#b37) *)
    let shallow : (t38, _) idx_mut = (.b38.#b37) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 108;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 108 failed %d" i;
    (* from (.b38.#b37.#a36) *)
    let shallow : (t38, _) idx_mut = (.b38.#b37.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 109;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 109 failed %d" i;
  );

  (**********************************)
  (*   t39 = { int; #{ int32# } }   *)
  (**********************************)
  (* Deepening to (.a39) *)
  let idx : (t39, _) idx_mut = (.a39) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a39) *)
    let shallow : (t39, _) idx_mut = (.a39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 110;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 110 failed %d" i;
  );
  (* Deepening to (.b39) *)
  let idx : (t39, _) idx_mut = (.b39) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b39) *)
    let shallow : (t39, _) idx_mut = (.b39) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 111;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 111 failed %d" i;
  );
  (* Deepening to (.b39.#a30) *)
  let idx : (t39, _) idx_mut = (.b39.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b39) *)
    let shallow : (t39, _) idx_mut = (.b39) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 112;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 112 failed %d" i;
    (* from (.b39.#a30) *)
    let shallow : (t39, _) idx_mut = (.b39.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 113;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 113 failed %d" i;
  );

  (***************************************)
  (*   t41 = { int; #{ int32#; int } }   *)
  (***************************************)
  (* Deepening to (.a41) *)
  let idx : (t41, _) idx_mut = (.a41) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a41) *)
    let shallow : (t41, _) idx_mut = (.a41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 114;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 114 failed %d" i;
  );
  (* Deepening to (.b41) *)
  let idx : (t41, _) idx_mut = (.b41) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b41) *)
    let shallow : (t41, _) idx_mut = (.b41) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 115;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 115 failed %d" i;
  );
  (* Deepening to (.b41.#a40) *)
  let idx : (t41, _) idx_mut = (.b41.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b41) *)
    let shallow : (t41, _) idx_mut = (.b41) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 116;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 116 failed %d" i;
    (* from (.b41.#a40) *)
    let shallow : (t41, _) idx_mut = (.b41.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 117;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 117 failed %d" i;
  );
  (* Deepening to (.b41.#b40) *)
  let idx : (t41, _) idx_mut = (.b41.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b41) *)
    let shallow : (t41, _) idx_mut = (.b41) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 118;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 118 failed %d" i;
    (* from (.b41.#b40) *)
    let shallow : (t41, _) idx_mut = (.b41.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 119;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 119 failed %d" i;
  );

  (******************************************)
  (*   t43 = { int; #{ int32#; int32# } }   *)
  (******************************************)
  (* Deepening to (.a43) *)
  let idx : (t43, _) idx_mut = (.a43) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a43) *)
    let shallow : (t43, _) idx_mut = (.a43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 120;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 120 failed %d" i;
  );
  (* Deepening to (.b43) *)
  let idx : (t43, _) idx_mut = (.b43) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b43) *)
    let shallow : (t43, _) idx_mut = (.b43) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 121;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 121 failed %d" i;
  );
  (* Deepening to (.b43.#a42) *)
  let idx : (t43, _) idx_mut = (.b43.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b43) *)
    let shallow : (t43, _) idx_mut = (.b43) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 122;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 122 failed %d" i;
    (* from (.b43.#a42) *)
    let shallow : (t43, _) idx_mut = (.b43.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 123;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 123 failed %d" i;
  );
  (* Deepening to (.b43.#b42) *)
  let idx : (t43, _) idx_mut = (.b43.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b43) *)
    let shallow : (t43, _) idx_mut = (.b43) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 124;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 124 failed %d" i;
    (* from (.b43.#b42) *)
    let shallow : (t43, _) idx_mut = (.b43.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 125;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 125 failed %d" i;
  );

  (********************************************)
  (*   t45 = { int; #{ int32#; #{ int } } }   *)
  (********************************************)
  (* Deepening to (.a45) *)
  let idx : (t45, _) idx_mut = (.a45) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a45) *)
    let shallow : (t45, _) idx_mut = (.a45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 126;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 126 failed %d" i;
  );
  (* Deepening to (.b45) *)
  let idx : (t45, _) idx_mut = (.b45) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b45) *)
    let shallow : (t45, _) idx_mut = (.b45) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 127;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 127 failed %d" i;
  );
  (* Deepening to (.b45.#a44) *)
  let idx : (t45, _) idx_mut = (.b45.#a44) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b45) *)
    let shallow : (t45, _) idx_mut = (.b45) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 128;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 128 failed %d" i;
    (* from (.b45.#a44) *)
    let shallow : (t45, _) idx_mut = (.b45.#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 129;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 129 failed %d" i;
  );
  (* Deepening to (.b45.#b44) *)
  let idx : (t45, _) idx_mut = (.b45.#b44) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b45) *)
    let shallow : (t45, _) idx_mut = (.b45) in
    let deepened = (.idx_mut(shallow).#b44) in
    mark_test_run 130;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 130 failed %d" i;
    (* from (.b45.#b44) *)
    let shallow : (t45, _) idx_mut = (.b45.#b44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 131;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 131 failed %d" i;
  );
  (* Deepening to (.b45.#b44.#a18) *)
  let idx : (t45, _) idx_mut = (.b45.#b44.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b45) *)
    let shallow : (t45, _) idx_mut = (.b45) in
    let deepened = (.idx_mut(shallow).#b44.#a18) in
    mark_test_run 132;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 132 failed %d" i;
    (* from (.b45.#b44) *)
    let shallow : (t45, _) idx_mut = (.b45.#b44) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 133;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 133 failed %d" i;
    (* from (.b45.#b44.#a18) *)
    let shallow : (t45, _) idx_mut = (.b45.#b44.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 134;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 134 failed %d" i;
  );

  (***********************************************)
  (*   t47 = { int; #{ int32#; #{ int32# } } }   *)
  (***********************************************)
  (* Deepening to (.a47) *)
  let idx : (t47, _) idx_mut = (.a47) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a47) *)
    let shallow : (t47, _) idx_mut = (.a47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 135;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 135 failed %d" i;
  );
  (* Deepening to (.b47) *)
  let idx : (t47, _) idx_mut = (.b47) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b47) *)
    let shallow : (t47, _) idx_mut = (.b47) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 136;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 136 failed %d" i;
  );
  (* Deepening to (.b47.#a46) *)
  let idx : (t47, _) idx_mut = (.b47.#a46) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b47) *)
    let shallow : (t47, _) idx_mut = (.b47) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 137;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 137 failed %d" i;
    (* from (.b47.#a46) *)
    let shallow : (t47, _) idx_mut = (.b47.#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 138;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 138 failed %d" i;
  );
  (* Deepening to (.b47.#b46) *)
  let idx : (t47, _) idx_mut = (.b47.#b46) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b47) *)
    let shallow : (t47, _) idx_mut = (.b47) in
    let deepened = (.idx_mut(shallow).#b46) in
    mark_test_run 139;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 139 failed %d" i;
    (* from (.b47.#b46) *)
    let shallow : (t47, _) idx_mut = (.b47.#b46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 140;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 140 failed %d" i;
  );
  (* Deepening to (.b47.#b46.#a30) *)
  let idx : (t47, _) idx_mut = (.b47.#b46.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b47) *)
    let shallow : (t47, _) idx_mut = (.b47) in
    let deepened = (.idx_mut(shallow).#b46.#a30) in
    mark_test_run 141;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 141 failed %d" i;
    (* from (.b47.#b46) *)
    let shallow : (t47, _) idx_mut = (.b47.#b46) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 142;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 142 failed %d" i;
    (* from (.b47.#b46.#a30) *)
    let shallow : (t47, _) idx_mut = (.b47.#b46.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 143;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 143 failed %d" i;
  );

  (*********************************)
  (*   t48 = { int; #{ float } }   *)
  (*********************************)
  (* Deepening to (.a48) *)
  let idx : (t48, _) idx_mut = (.a48) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a48) *)
    let shallow : (t48, _) idx_mut = (.a48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 144;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 144 failed %d" i;
  );
  (* Deepening to (.b48) *)
  let idx : (t48, _) idx_mut = (.b48) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b48) *)
    let shallow : (t48, _) idx_mut = (.b48) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 145;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 145 failed %d" i;
  );
  (* Deepening to (.b48.#a33) *)
  let idx : (t48, _) idx_mut = (.b48.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b48) *)
    let shallow : (t48, _) idx_mut = (.b48) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 146;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 146 failed %d" i;
    (* from (.b48.#a33) *)
    let shallow : (t48, _) idx_mut = (.b48.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 147;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 147 failed %d" i;
  );

  (**************************************)
  (*   t50 = { int; #{ float; int } }   *)
  (**************************************)
  (* Deepening to (.a50) *)
  let idx : (t50, _) idx_mut = (.a50) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a50) *)
    let shallow : (t50, _) idx_mut = (.a50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 148;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 148 failed %d" i;
  );
  (* Deepening to (.b50) *)
  let idx : (t50, _) idx_mut = (.b50) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b50) *)
    let shallow : (t50, _) idx_mut = (.b50) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 149;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 149 failed %d" i;
  );
  (* Deepening to (.b50.#a49) *)
  let idx : (t50, _) idx_mut = (.b50.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b50) *)
    let shallow : (t50, _) idx_mut = (.b50) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 150;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 150 failed %d" i;
    (* from (.b50.#a49) *)
    let shallow : (t50, _) idx_mut = (.b50.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 151;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 151 failed %d" i;
  );
  (* Deepening to (.b50.#b49) *)
  let idx : (t50, _) idx_mut = (.b50.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b50) *)
    let shallow : (t50, _) idx_mut = (.b50) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 152;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 152 failed %d" i;
    (* from (.b50.#b49) *)
    let shallow : (t50, _) idx_mut = (.b50.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 153;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 153 failed %d" i;
  );

  (****************************************)
  (*   t52 = { int; #{ float; float } }   *)
  (****************************************)
  (* Deepening to (.a52) *)
  let idx : (t52, _) idx_mut = (.a52) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a52) *)
    let shallow : (t52, _) idx_mut = (.a52) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 154;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 154 failed %d" i;
  );
  (* Deepening to (.b52) *)
  let idx : (t52, _) idx_mut = (.b52) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b52) *)
    let shallow : (t52, _) idx_mut = (.b52) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 155;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 155 failed %d" i;
  );
  (* Deepening to (.b52.#a51) *)
  let idx : (t52, _) idx_mut = (.b52.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b52) *)
    let shallow : (t52, _) idx_mut = (.b52) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 156;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 156 failed %d" i;
    (* from (.b52.#a51) *)
    let shallow : (t52, _) idx_mut = (.b52.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 157;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 157 failed %d" i;
  );
  (* Deepening to (.b52.#b51) *)
  let idx : (t52, _) idx_mut = (.b52.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b52) *)
    let shallow : (t52, _) idx_mut = (.b52) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 158;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 158 failed %d" i;
    (* from (.b52.#b51) *)
    let shallow : (t52, _) idx_mut = (.b52.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 159;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 159 failed %d" i;
  );

  (*******************************************)
  (*   t54 = { int; #{ float; #{ int } } }   *)
  (*******************************************)
  (* Deepening to (.a54) *)
  let idx : (t54, _) idx_mut = (.a54) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a54) *)
    let shallow : (t54, _) idx_mut = (.a54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 160;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 160 failed %d" i;
  );
  (* Deepening to (.b54) *)
  let idx : (t54, _) idx_mut = (.b54) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b54) *)
    let shallow : (t54, _) idx_mut = (.b54) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 161;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 161 failed %d" i;
  );
  (* Deepening to (.b54.#a53) *)
  let idx : (t54, _) idx_mut = (.b54.#a53) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b54) *)
    let shallow : (t54, _) idx_mut = (.b54) in
    let deepened = (.idx_mut(shallow).#a53) in
    mark_test_run 162;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 162 failed %d" i;
    (* from (.b54.#a53) *)
    let shallow : (t54, _) idx_mut = (.b54.#a53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 163;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 163 failed %d" i;
  );
  (* Deepening to (.b54.#b53) *)
  let idx : (t54, _) idx_mut = (.b54.#b53) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b54) *)
    let shallow : (t54, _) idx_mut = (.b54) in
    let deepened = (.idx_mut(shallow).#b53) in
    mark_test_run 164;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 164 failed %d" i;
    (* from (.b54.#b53) *)
    let shallow : (t54, _) idx_mut = (.b54.#b53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 165;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 165 failed %d" i;
  );
  (* Deepening to (.b54.#b53.#a18) *)
  let idx : (t54, _) idx_mut = (.b54.#b53.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b54) *)
    let shallow : (t54, _) idx_mut = (.b54) in
    let deepened = (.idx_mut(shallow).#b53.#a18) in
    mark_test_run 166;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 166 failed %d" i;
    (* from (.b54.#b53) *)
    let shallow : (t54, _) idx_mut = (.b54.#b53) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 167;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 167 failed %d" i;
    (* from (.b54.#b53.#a18) *)
    let shallow : (t54, _) idx_mut = (.b54.#b53.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 168;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 168 failed %d" i;
  );

  (*********************************************)
  (*   t56 = { int; #{ float; #{ float } } }   *)
  (*********************************************)
  (* Deepening to (.a56) *)
  let idx : (t56, _) idx_mut = (.a56) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a56) *)
    let shallow : (t56, _) idx_mut = (.a56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 169;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 169 failed %d" i;
  );
  (* Deepening to (.b56) *)
  let idx : (t56, _) idx_mut = (.b56) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b56) *)
    let shallow : (t56, _) idx_mut = (.b56) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 170;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 170 failed %d" i;
  );
  (* Deepening to (.b56.#a55) *)
  let idx : (t56, _) idx_mut = (.b56.#a55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b56) *)
    let shallow : (t56, _) idx_mut = (.b56) in
    let deepened = (.idx_mut(shallow).#a55) in
    mark_test_run 171;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 171 failed %d" i;
    (* from (.b56.#a55) *)
    let shallow : (t56, _) idx_mut = (.b56.#a55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 172;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 172 failed %d" i;
  );
  (* Deepening to (.b56.#b55) *)
  let idx : (t56, _) idx_mut = (.b56.#b55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b56) *)
    let shallow : (t56, _) idx_mut = (.b56) in
    let deepened = (.idx_mut(shallow).#b55) in
    mark_test_run 173;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 173 failed %d" i;
    (* from (.b56.#b55) *)
    let shallow : (t56, _) idx_mut = (.b56.#b55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 174;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 174 failed %d" i;
  );
  (* Deepening to (.b56.#b55.#a33) *)
  let idx : (t56, _) idx_mut = (.b56.#b55.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b56) *)
    let shallow : (t56, _) idx_mut = (.b56) in
    let deepened = (.idx_mut(shallow).#b55.#a33) in
    mark_test_run 175;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 175 failed %d" i;
    (* from (.b56.#b55) *)
    let shallow : (t56, _) idx_mut = (.b56.#b55) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 176;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 176 failed %d" i;
    (* from (.b56.#b55.#a33) *)
    let shallow : (t56, _) idx_mut = (.b56.#b55.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 177;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 177 failed %d" i;
  );

  (************************************)
  (*   t57 = { int; #{ int64x2# } }   *)
  (************************************)
  (* Deepening to (.a57) *)
  let idx : (t57, _) idx_mut = (.a57) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a57) *)
    let shallow : (t57, _) idx_mut = (.a57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 178;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 178 failed %d" i;
  );
  (* Deepening to (.b57) *)
  let idx : (t57, _) idx_mut = (.b57) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b57) *)
    let shallow : (t57, _) idx_mut = (.b57) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 179;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 179 failed %d" i;
  );
  (* Deepening to (.b57.#a36) *)
  let idx : (t57, _) idx_mut = (.b57.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b57) *)
    let shallow : (t57, _) idx_mut = (.b57) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 180;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 180 failed %d" i;
    (* from (.b57.#a36) *)
    let shallow : (t57, _) idx_mut = (.b57.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 181;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 181 failed %d" i;
  );

  (*****************************************)
  (*   t59 = { int; #{ int64x2#; int } }   *)
  (*****************************************)
  (* Deepening to (.a59) *)
  let idx : (t59, _) idx_mut = (.a59) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a59) *)
    let shallow : (t59, _) idx_mut = (.a59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 182;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 182 failed %d" i;
  );
  (* Deepening to (.b59) *)
  let idx : (t59, _) idx_mut = (.b59) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b59) *)
    let shallow : (t59, _) idx_mut = (.b59) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 183;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 183 failed %d" i;
  );
  (* Deepening to (.b59.#a58) *)
  let idx : (t59, _) idx_mut = (.b59.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b59) *)
    let shallow : (t59, _) idx_mut = (.b59) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 184;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 184 failed %d" i;
    (* from (.b59.#a58) *)
    let shallow : (t59, _) idx_mut = (.b59.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 185;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 185 failed %d" i;
  );
  (* Deepening to (.b59.#b58) *)
  let idx : (t59, _) idx_mut = (.b59.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b59) *)
    let shallow : (t59, _) idx_mut = (.b59) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 186;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 186 failed %d" i;
    (* from (.b59.#b58) *)
    let shallow : (t59, _) idx_mut = (.b59.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 187;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 187 failed %d" i;
  );

  (**********************************************)
  (*   t61 = { int; #{ int64x2#; int64x2# } }   *)
  (**********************************************)
  (* Deepening to (.a61) *)
  let idx : (t61, _) idx_mut = (.a61) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a61) *)
    let shallow : (t61, _) idx_mut = (.a61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 188;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 188 failed %d" i;
  );
  (* Deepening to (.b61) *)
  let idx : (t61, _) idx_mut = (.b61) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b61) *)
    let shallow : (t61, _) idx_mut = (.b61) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 189;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 189 failed %d" i;
  );
  (* Deepening to (.b61.#a60) *)
  let idx : (t61, _) idx_mut = (.b61.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b61) *)
    let shallow : (t61, _) idx_mut = (.b61) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 190;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 190 failed %d" i;
    (* from (.b61.#a60) *)
    let shallow : (t61, _) idx_mut = (.b61.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 191;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 191 failed %d" i;
  );
  (* Deepening to (.b61.#b60) *)
  let idx : (t61, _) idx_mut = (.b61.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b61) *)
    let shallow : (t61, _) idx_mut = (.b61) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 192;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 192 failed %d" i;
    (* from (.b61.#b60) *)
    let shallow : (t61, _) idx_mut = (.b61.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 193;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 193 failed %d" i;
  );

  (**********************************************)
  (*   t63 = { int; #{ int64x2#; #{ int } } }   *)
  (**********************************************)
  (* Deepening to (.a63) *)
  let idx : (t63, _) idx_mut = (.a63) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a63) *)
    let shallow : (t63, _) idx_mut = (.a63) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 194;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 194 failed %d" i;
  );
  (* Deepening to (.b63) *)
  let idx : (t63, _) idx_mut = (.b63) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b63) *)
    let shallow : (t63, _) idx_mut = (.b63) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 195;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 195 failed %d" i;
  );
  (* Deepening to (.b63.#a62) *)
  let idx : (t63, _) idx_mut = (.b63.#a62) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b63) *)
    let shallow : (t63, _) idx_mut = (.b63) in
    let deepened = (.idx_mut(shallow).#a62) in
    mark_test_run 196;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 196 failed %d" i;
    (* from (.b63.#a62) *)
    let shallow : (t63, _) idx_mut = (.b63.#a62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 197;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 197 failed %d" i;
  );
  (* Deepening to (.b63.#b62) *)
  let idx : (t63, _) idx_mut = (.b63.#b62) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b63) *)
    let shallow : (t63, _) idx_mut = (.b63) in
    let deepened = (.idx_mut(shallow).#b62) in
    mark_test_run 198;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 198 failed %d" i;
    (* from (.b63.#b62) *)
    let shallow : (t63, _) idx_mut = (.b63.#b62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 199;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 199 failed %d" i;
  );
  (* Deepening to (.b63.#b62.#a18) *)
  let idx : (t63, _) idx_mut = (.b63.#b62.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b63) *)
    let shallow : (t63, _) idx_mut = (.b63) in
    let deepened = (.idx_mut(shallow).#b62.#a18) in
    mark_test_run 200;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 200 failed %d" i;
    (* from (.b63.#b62) *)
    let shallow : (t63, _) idx_mut = (.b63.#b62) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 201;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 201 failed %d" i;
    (* from (.b63.#b62.#a18) *)
    let shallow : (t63, _) idx_mut = (.b63.#b62.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 202;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 202 failed %d" i;
  );

  (***************************************************)
  (*   t65 = { int; #{ int64x2#; #{ int64x2# } } }   *)
  (***************************************************)
  (* Deepening to (.a65) *)
  let idx : (t65, _) idx_mut = (.a65) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a65) *)
    let shallow : (t65, _) idx_mut = (.a65) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 203;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 203 failed %d" i;
  );
  (* Deepening to (.b65) *)
  let idx : (t65, _) idx_mut = (.b65) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b65) *)
    let shallow : (t65, _) idx_mut = (.b65) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 204;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 204 failed %d" i;
  );
  (* Deepening to (.b65.#a64) *)
  let idx : (t65, _) idx_mut = (.b65.#a64) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b65) *)
    let shallow : (t65, _) idx_mut = (.b65) in
    let deepened = (.idx_mut(shallow).#a64) in
    mark_test_run 205;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 205 failed %d" i;
    (* from (.b65.#a64) *)
    let shallow : (t65, _) idx_mut = (.b65.#a64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 206;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 206 failed %d" i;
  );
  (* Deepening to (.b65.#b64) *)
  let idx : (t65, _) idx_mut = (.b65.#b64) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b65) *)
    let shallow : (t65, _) idx_mut = (.b65) in
    let deepened = (.idx_mut(shallow).#b64) in
    mark_test_run 207;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 207 failed %d" i;
    (* from (.b65.#b64) *)
    let shallow : (t65, _) idx_mut = (.b65.#b64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 208;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 208 failed %d" i;
  );
  (* Deepening to (.b65.#b64.#a36) *)
  let idx : (t65, _) idx_mut = (.b65.#b64.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b65) *)
    let shallow : (t65, _) idx_mut = (.b65) in
    let deepened = (.idx_mut(shallow).#b64.#a36) in
    mark_test_run 209;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 209 failed %d" i;
    (* from (.b65.#b64) *)
    let shallow : (t65, _) idx_mut = (.b65.#b64) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 210;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 210 failed %d" i;
    (* from (.b65.#b64.#a36) *)
    let shallow : (t65, _) idx_mut = (.b65.#b64.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 211;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 211 failed %d" i;
  );

  (*****************************************)
  (*   t67 = { int; #{ #{ int; int } } }   *)
  (*****************************************)
  (* Deepening to (.a67) *)
  let idx : (t67, _) idx_mut = (.a67) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a67) *)
    let shallow : (t67, _) idx_mut = (.a67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 212;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 212 failed %d" i;
  );
  (* Deepening to (.b67) *)
  let idx : (t67, _) idx_mut = (.b67) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b67) *)
    let shallow : (t67, _) idx_mut = (.b67) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 213;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 213 failed %d" i;
  );
  (* Deepening to (.b67.#a66) *)
  let idx : (t67, _) idx_mut = (.b67.#a66) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b67) *)
    let shallow : (t67, _) idx_mut = (.b67) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 214;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 214 failed %d" i;
    (* from (.b67.#a66) *)
    let shallow : (t67, _) idx_mut = (.b67.#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 215;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 215 failed %d" i;
  );
  (* Deepening to (.b67.#a66.#a20) *)
  let idx : (t67, _) idx_mut = (.b67.#a66.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b67) *)
    let shallow : (t67, _) idx_mut = (.b67) in
    let deepened = (.idx_mut(shallow).#a66.#a20) in
    mark_test_run 216;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 216 failed %d" i;
    (* from (.b67.#a66) *)
    let shallow : (t67, _) idx_mut = (.b67.#a66) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 217;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 217 failed %d" i;
    (* from (.b67.#a66.#a20) *)
    let shallow : (t67, _) idx_mut = (.b67.#a66.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 218;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 218 failed %d" i;
  );
  (* Deepening to (.b67.#a66.#b20) *)
  let idx : (t67, _) idx_mut = (.b67.#a66.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b67) *)
    let shallow : (t67, _) idx_mut = (.b67) in
    let deepened = (.idx_mut(shallow).#a66.#b20) in
    mark_test_run 219;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 219 failed %d" i;
    (* from (.b67.#a66) *)
    let shallow : (t67, _) idx_mut = (.b67.#a66) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 220;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 220 failed %d" i;
    (* from (.b67.#a66.#b20) *)
    let shallow : (t67, _) idx_mut = (.b67.#a66.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 221;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 221 failed %d" i;
  );

  (********************************************)
  (*   t69 = { int; #{ #{ int; int32# } } }   *)
  (********************************************)
  (* Deepening to (.a69) *)
  let idx : (t69, _) idx_mut = (.a69) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a69) *)
    let shallow : (t69, _) idx_mut = (.a69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 222;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 222 failed %d" i;
  );
  (* Deepening to (.b69) *)
  let idx : (t69, _) idx_mut = (.b69) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b69) *)
    let shallow : (t69, _) idx_mut = (.b69) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 223;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 223 failed %d" i;
  );
  (* Deepening to (.b69.#a68) *)
  let idx : (t69, _) idx_mut = (.b69.#a68) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b69) *)
    let shallow : (t69, _) idx_mut = (.b69) in
    let deepened = (.idx_mut(shallow).#a68) in
    mark_test_run 224;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 224 failed %d" i;
    (* from (.b69.#a68) *)
    let shallow : (t69, _) idx_mut = (.b69.#a68) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 225;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 225 failed %d" i;
  );
  (* Deepening to (.b69.#a68.#a22) *)
  let idx : (t69, _) idx_mut = (.b69.#a68.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b69) *)
    let shallow : (t69, _) idx_mut = (.b69) in
    let deepened = (.idx_mut(shallow).#a68.#a22) in
    mark_test_run 226;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 226 failed %d" i;
    (* from (.b69.#a68) *)
    let shallow : (t69, _) idx_mut = (.b69.#a68) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 227;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 227 failed %d" i;
    (* from (.b69.#a68.#a22) *)
    let shallow : (t69, _) idx_mut = (.b69.#a68.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 228;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 228 failed %d" i;
  );
  (* Deepening to (.b69.#a68.#b22) *)
  let idx : (t69, _) idx_mut = (.b69.#a68.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b69) *)
    let shallow : (t69, _) idx_mut = (.b69) in
    let deepened = (.idx_mut(shallow).#a68.#b22) in
    mark_test_run 229;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 229 failed %d" i;
    (* from (.b69.#a68) *)
    let shallow : (t69, _) idx_mut = (.b69.#a68) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 230;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 230 failed %d" i;
    (* from (.b69.#a68.#b22) *)
    let shallow : (t69, _) idx_mut = (.b69.#a68.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 231;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 231 failed %d" i;
  );

  (*******************************************)
  (*   t71 = { int; #{ #{ int; float } } }   *)
  (*******************************************)
  (* Deepening to (.a71) *)
  let idx : (t71, _) idx_mut = (.a71) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a71) *)
    let shallow : (t71, _) idx_mut = (.a71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 232;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 232 failed %d" i;
  );
  (* Deepening to (.b71) *)
  let idx : (t71, _) idx_mut = (.b71) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b71) *)
    let shallow : (t71, _) idx_mut = (.b71) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 233;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 233 failed %d" i;
  );
  (* Deepening to (.b71.#a70) *)
  let idx : (t71, _) idx_mut = (.b71.#a70) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b71) *)
    let shallow : (t71, _) idx_mut = (.b71) in
    let deepened = (.idx_mut(shallow).#a70) in
    mark_test_run 234;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 234 failed %d" i;
    (* from (.b71.#a70) *)
    let shallow : (t71, _) idx_mut = (.b71.#a70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 235;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 235 failed %d" i;
  );
  (* Deepening to (.b71.#a70.#a24) *)
  let idx : (t71, _) idx_mut = (.b71.#a70.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b71) *)
    let shallow : (t71, _) idx_mut = (.b71) in
    let deepened = (.idx_mut(shallow).#a70.#a24) in
    mark_test_run 236;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 236 failed %d" i;
    (* from (.b71.#a70) *)
    let shallow : (t71, _) idx_mut = (.b71.#a70) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 237;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 237 failed %d" i;
    (* from (.b71.#a70.#a24) *)
    let shallow : (t71, _) idx_mut = (.b71.#a70.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 238;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 238 failed %d" i;
  );
  (* Deepening to (.b71.#a70.#b24) *)
  let idx : (t71, _) idx_mut = (.b71.#a70.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b71) *)
    let shallow : (t71, _) idx_mut = (.b71) in
    let deepened = (.idx_mut(shallow).#a70.#b24) in
    mark_test_run 239;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 239 failed %d" i;
    (* from (.b71.#a70) *)
    let shallow : (t71, _) idx_mut = (.b71.#a70) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 240;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 240 failed %d" i;
    (* from (.b71.#a70.#b24) *)
    let shallow : (t71, _) idx_mut = (.b71.#a70.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 241;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 241 failed %d" i;
  );

  (**********************************************)
  (*   t73 = { int; #{ #{ int; int64x2# } } }   *)
  (**********************************************)
  (* Deepening to (.a73) *)
  let idx : (t73, _) idx_mut = (.a73) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a73) *)
    let shallow : (t73, _) idx_mut = (.a73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 242;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 242 failed %d" i;
  );
  (* Deepening to (.b73) *)
  let idx : (t73, _) idx_mut = (.b73) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b73) *)
    let shallow : (t73, _) idx_mut = (.b73) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 243;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 243 failed %d" i;
  );
  (* Deepening to (.b73.#a72) *)
  let idx : (t73, _) idx_mut = (.b73.#a72) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b73) *)
    let shallow : (t73, _) idx_mut = (.b73) in
    let deepened = (.idx_mut(shallow).#a72) in
    mark_test_run 244;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 244 failed %d" i;
    (* from (.b73.#a72) *)
    let shallow : (t73, _) idx_mut = (.b73.#a72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 245;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 245 failed %d" i;
  );
  (* Deepening to (.b73.#a72.#a26) *)
  let idx : (t73, _) idx_mut = (.b73.#a72.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b73) *)
    let shallow : (t73, _) idx_mut = (.b73) in
    let deepened = (.idx_mut(shallow).#a72.#a26) in
    mark_test_run 246;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 246 failed %d" i;
    (* from (.b73.#a72) *)
    let shallow : (t73, _) idx_mut = (.b73.#a72) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 247;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 247 failed %d" i;
    (* from (.b73.#a72.#a26) *)
    let shallow : (t73, _) idx_mut = (.b73.#a72.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 248;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 248 failed %d" i;
  );
  (* Deepening to (.b73.#a72.#b26) *)
  let idx : (t73, _) idx_mut = (.b73.#a72.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b73) *)
    let shallow : (t73, _) idx_mut = (.b73) in
    let deepened = (.idx_mut(shallow).#a72.#b26) in
    mark_test_run 249;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 249 failed %d" i;
    (* from (.b73.#a72) *)
    let shallow : (t73, _) idx_mut = (.b73.#a72) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 250;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 250 failed %d" i;
    (* from (.b73.#a72.#b26) *)
    let shallow : (t73, _) idx_mut = (.b73.#a72.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 251;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 251 failed %d" i;
  );

  (********************************************)
  (*   t75 = { int; #{ #{ int32#; int } } }   *)
  (********************************************)
  (* Deepening to (.a75) *)
  let idx : (t75, _) idx_mut = (.a75) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a75) *)
    let shallow : (t75, _) idx_mut = (.a75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 252;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 252 failed %d" i;
  );
  (* Deepening to (.b75) *)
  let idx : (t75, _) idx_mut = (.b75) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b75) *)
    let shallow : (t75, _) idx_mut = (.b75) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 253;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 253 failed %d" i;
  );
  (* Deepening to (.b75.#a74) *)
  let idx : (t75, _) idx_mut = (.b75.#a74) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b75) *)
    let shallow : (t75, _) idx_mut = (.b75) in
    let deepened = (.idx_mut(shallow).#a74) in
    mark_test_run 254;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 254 failed %d" i;
    (* from (.b75.#a74) *)
    let shallow : (t75, _) idx_mut = (.b75.#a74) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 255;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 255 failed %d" i;
  );
  (* Deepening to (.b75.#a74.#a40) *)
  let idx : (t75, _) idx_mut = (.b75.#a74.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b75) *)
    let shallow : (t75, _) idx_mut = (.b75) in
    let deepened = (.idx_mut(shallow).#a74.#a40) in
    mark_test_run 256;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 256 failed %d" i;
    (* from (.b75.#a74) *)
    let shallow : (t75, _) idx_mut = (.b75.#a74) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 257;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 257 failed %d" i;
    (* from (.b75.#a74.#a40) *)
    let shallow : (t75, _) idx_mut = (.b75.#a74.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 258;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 258 failed %d" i;
  );
  (* Deepening to (.b75.#a74.#b40) *)
  let idx : (t75, _) idx_mut = (.b75.#a74.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b75) *)
    let shallow : (t75, _) idx_mut = (.b75) in
    let deepened = (.idx_mut(shallow).#a74.#b40) in
    mark_test_run 259;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 259 failed %d" i;
    (* from (.b75.#a74) *)
    let shallow : (t75, _) idx_mut = (.b75.#a74) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 260;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 260 failed %d" i;
    (* from (.b75.#a74.#b40) *)
    let shallow : (t75, _) idx_mut = (.b75.#a74.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 261;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 261 failed %d" i;
  );

  (***********************************************)
  (*   t77 = { int; #{ #{ int32#; int32# } } }   *)
  (***********************************************)
  (* Deepening to (.a77) *)
  let idx : (t77, _) idx_mut = (.a77) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a77) *)
    let shallow : (t77, _) idx_mut = (.a77) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 262;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 262 failed %d" i;
  );
  (* Deepening to (.b77) *)
  let idx : (t77, _) idx_mut = (.b77) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b77) *)
    let shallow : (t77, _) idx_mut = (.b77) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 263;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 263 failed %d" i;
  );
  (* Deepening to (.b77.#a76) *)
  let idx : (t77, _) idx_mut = (.b77.#a76) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b77) *)
    let shallow : (t77, _) idx_mut = (.b77) in
    let deepened = (.idx_mut(shallow).#a76) in
    mark_test_run 264;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 264 failed %d" i;
    (* from (.b77.#a76) *)
    let shallow : (t77, _) idx_mut = (.b77.#a76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 265;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 265 failed %d" i;
  );
  (* Deepening to (.b77.#a76.#a42) *)
  let idx : (t77, _) idx_mut = (.b77.#a76.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b77) *)
    let shallow : (t77, _) idx_mut = (.b77) in
    let deepened = (.idx_mut(shallow).#a76.#a42) in
    mark_test_run 266;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 266 failed %d" i;
    (* from (.b77.#a76) *)
    let shallow : (t77, _) idx_mut = (.b77.#a76) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 267;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 267 failed %d" i;
    (* from (.b77.#a76.#a42) *)
    let shallow : (t77, _) idx_mut = (.b77.#a76.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 268;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 268 failed %d" i;
  );
  (* Deepening to (.b77.#a76.#b42) *)
  let idx : (t77, _) idx_mut = (.b77.#a76.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b77) *)
    let shallow : (t77, _) idx_mut = (.b77) in
    let deepened = (.idx_mut(shallow).#a76.#b42) in
    mark_test_run 269;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 269 failed %d" i;
    (* from (.b77.#a76) *)
    let shallow : (t77, _) idx_mut = (.b77.#a76) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 270;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 270 failed %d" i;
    (* from (.b77.#a76.#b42) *)
    let shallow : (t77, _) idx_mut = (.b77.#a76.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 271;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 271 failed %d" i;
  );

  (*******************************************)
  (*   t79 = { int; #{ #{ float; int } } }   *)
  (*******************************************)
  (* Deepening to (.a79) *)
  let idx : (t79, _) idx_mut = (.a79) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a79) *)
    let shallow : (t79, _) idx_mut = (.a79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 272;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 272 failed %d" i;
  );
  (* Deepening to (.b79) *)
  let idx : (t79, _) idx_mut = (.b79) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b79) *)
    let shallow : (t79, _) idx_mut = (.b79) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 273;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 273 failed %d" i;
  );
  (* Deepening to (.b79.#a78) *)
  let idx : (t79, _) idx_mut = (.b79.#a78) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b79) *)
    let shallow : (t79, _) idx_mut = (.b79) in
    let deepened = (.idx_mut(shallow).#a78) in
    mark_test_run 274;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 274 failed %d" i;
    (* from (.b79.#a78) *)
    let shallow : (t79, _) idx_mut = (.b79.#a78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 275;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 275 failed %d" i;
  );
  (* Deepening to (.b79.#a78.#a49) *)
  let idx : (t79, _) idx_mut = (.b79.#a78.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b79) *)
    let shallow : (t79, _) idx_mut = (.b79) in
    let deepened = (.idx_mut(shallow).#a78.#a49) in
    mark_test_run 276;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 276 failed %d" i;
    (* from (.b79.#a78) *)
    let shallow : (t79, _) idx_mut = (.b79.#a78) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 277;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 277 failed %d" i;
    (* from (.b79.#a78.#a49) *)
    let shallow : (t79, _) idx_mut = (.b79.#a78.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 278;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 278 failed %d" i;
  );
  (* Deepening to (.b79.#a78.#b49) *)
  let idx : (t79, _) idx_mut = (.b79.#a78.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b79) *)
    let shallow : (t79, _) idx_mut = (.b79) in
    let deepened = (.idx_mut(shallow).#a78.#b49) in
    mark_test_run 279;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 279 failed %d" i;
    (* from (.b79.#a78) *)
    let shallow : (t79, _) idx_mut = (.b79.#a78) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 280;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 280 failed %d" i;
    (* from (.b79.#a78.#b49) *)
    let shallow : (t79, _) idx_mut = (.b79.#a78.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 281;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 281 failed %d" i;
  );

  (*********************************************)
  (*   t81 = { int; #{ #{ float; float } } }   *)
  (*********************************************)
  (* Deepening to (.a81) *)
  let idx : (t81, _) idx_mut = (.a81) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a81) *)
    let shallow : (t81, _) idx_mut = (.a81) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 282;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 282 failed %d" i;
  );
  (* Deepening to (.b81) *)
  let idx : (t81, _) idx_mut = (.b81) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b81) *)
    let shallow : (t81, _) idx_mut = (.b81) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 283;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 283 failed %d" i;
  );
  (* Deepening to (.b81.#a80) *)
  let idx : (t81, _) idx_mut = (.b81.#a80) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b81) *)
    let shallow : (t81, _) idx_mut = (.b81) in
    let deepened = (.idx_mut(shallow).#a80) in
    mark_test_run 284;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 284 failed %d" i;
    (* from (.b81.#a80) *)
    let shallow : (t81, _) idx_mut = (.b81.#a80) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 285;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 285 failed %d" i;
  );
  (* Deepening to (.b81.#a80.#a51) *)
  let idx : (t81, _) idx_mut = (.b81.#a80.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b81) *)
    let shallow : (t81, _) idx_mut = (.b81) in
    let deepened = (.idx_mut(shallow).#a80.#a51) in
    mark_test_run 286;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 286 failed %d" i;
    (* from (.b81.#a80) *)
    let shallow : (t81, _) idx_mut = (.b81.#a80) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 287;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 287 failed %d" i;
    (* from (.b81.#a80.#a51) *)
    let shallow : (t81, _) idx_mut = (.b81.#a80.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 288;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 288 failed %d" i;
  );
  (* Deepening to (.b81.#a80.#b51) *)
  let idx : (t81, _) idx_mut = (.b81.#a80.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b81) *)
    let shallow : (t81, _) idx_mut = (.b81) in
    let deepened = (.idx_mut(shallow).#a80.#b51) in
    mark_test_run 289;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 289 failed %d" i;
    (* from (.b81.#a80) *)
    let shallow : (t81, _) idx_mut = (.b81.#a80) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 290;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 290 failed %d" i;
    (* from (.b81.#a80.#b51) *)
    let shallow : (t81, _) idx_mut = (.b81.#a80.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 291;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 291 failed %d" i;
  );

  (**********************************************)
  (*   t83 = { int; #{ #{ int64x2#; int } } }   *)
  (**********************************************)
  (* Deepening to (.a83) *)
  let idx : (t83, _) idx_mut = (.a83) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a83) *)
    let shallow : (t83, _) idx_mut = (.a83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 292;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 292 failed %d" i;
  );
  (* Deepening to (.b83) *)
  let idx : (t83, _) idx_mut = (.b83) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b83) *)
    let shallow : (t83, _) idx_mut = (.b83) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 293;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 293 failed %d" i;
  );
  (* Deepening to (.b83.#a82) *)
  let idx : (t83, _) idx_mut = (.b83.#a82) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b83) *)
    let shallow : (t83, _) idx_mut = (.b83) in
    let deepened = (.idx_mut(shallow).#a82) in
    mark_test_run 294;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 294 failed %d" i;
    (* from (.b83.#a82) *)
    let shallow : (t83, _) idx_mut = (.b83.#a82) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 295;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 295 failed %d" i;
  );
  (* Deepening to (.b83.#a82.#a58) *)
  let idx : (t83, _) idx_mut = (.b83.#a82.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b83) *)
    let shallow : (t83, _) idx_mut = (.b83) in
    let deepened = (.idx_mut(shallow).#a82.#a58) in
    mark_test_run 296;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 296 failed %d" i;
    (* from (.b83.#a82) *)
    let shallow : (t83, _) idx_mut = (.b83.#a82) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 297;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 297 failed %d" i;
    (* from (.b83.#a82.#a58) *)
    let shallow : (t83, _) idx_mut = (.b83.#a82.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 298;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 298 failed %d" i;
  );
  (* Deepening to (.b83.#a82.#b58) *)
  let idx : (t83, _) idx_mut = (.b83.#a82.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b83) *)
    let shallow : (t83, _) idx_mut = (.b83) in
    let deepened = (.idx_mut(shallow).#a82.#b58) in
    mark_test_run 299;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 299 failed %d" i;
    (* from (.b83.#a82) *)
    let shallow : (t83, _) idx_mut = (.b83.#a82) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 300;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 300 failed %d" i;
    (* from (.b83.#a82.#b58) *)
    let shallow : (t83, _) idx_mut = (.b83.#a82.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 301;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 301 failed %d" i;
  );

  (***************************************************)
  (*   t85 = { int; #{ #{ int64x2#; int64x2# } } }   *)
  (***************************************************)
  (* Deepening to (.a85) *)
  let idx : (t85, _) idx_mut = (.a85) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a85) *)
    let shallow : (t85, _) idx_mut = (.a85) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 302;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 302 failed %d" i;
  );
  (* Deepening to (.b85) *)
  let idx : (t85, _) idx_mut = (.b85) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b85) *)
    let shallow : (t85, _) idx_mut = (.b85) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 303;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 303 failed %d" i;
  );
  (* Deepening to (.b85.#a84) *)
  let idx : (t85, _) idx_mut = (.b85.#a84) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b85) *)
    let shallow : (t85, _) idx_mut = (.b85) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 304;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 304 failed %d" i;
    (* from (.b85.#a84) *)
    let shallow : (t85, _) idx_mut = (.b85.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 305;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 305 failed %d" i;
  );
  (* Deepening to (.b85.#a84.#a60) *)
  let idx : (t85, _) idx_mut = (.b85.#a84.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b85) *)
    let shallow : (t85, _) idx_mut = (.b85) in
    let deepened = (.idx_mut(shallow).#a84.#a60) in
    mark_test_run 306;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 306 failed %d" i;
    (* from (.b85.#a84) *)
    let shallow : (t85, _) idx_mut = (.b85.#a84) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 307;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 307 failed %d" i;
    (* from (.b85.#a84.#a60) *)
    let shallow : (t85, _) idx_mut = (.b85.#a84.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 308;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 308 failed %d" i;
  );
  (* Deepening to (.b85.#a84.#b60) *)
  let idx : (t85, _) idx_mut = (.b85.#a84.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b85) *)
    let shallow : (t85, _) idx_mut = (.b85) in
    let deepened = (.idx_mut(shallow).#a84.#b60) in
    mark_test_run 309;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 309 failed %d" i;
    (* from (.b85.#a84) *)
    let shallow : (t85, _) idx_mut = (.b85.#a84) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 310;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 310 failed %d" i;
    (* from (.b85.#a84.#b60) *)
    let shallow : (t85, _) idx_mut = (.b85.#a84.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 311;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 311 failed %d" i;
  );

  (***********************)
  (*   t86 = { int64 }   *)
  (***********************)
  (* Deepening to (.a86) *)
  let idx : (t86, _) idx_mut = (.a86) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a86) *)
    let shallow : (t86, _) idx_mut = (.a86) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 312;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 312 failed %d" i;
  );

  (****************************)
  (*   t87 = { int64; int }   *)
  (****************************)
  (* Deepening to (.a87) *)
  let idx : (t87, _) idx_mut = (.a87) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a87) *)
    let shallow : (t87, _) idx_mut = (.a87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 313;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 313 failed %d" i;
  );
  (* Deepening to (.b87) *)
  let idx : (t87, _) idx_mut = (.b87) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b87) *)
    let shallow : (t87, _) idx_mut = (.b87) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 314;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 314 failed %d" i;
  );

  (******************************)
  (*   t88 = { int64; int64 }   *)
  (******************************)
  (* Deepening to (.a88) *)
  let idx : (t88, _) idx_mut = (.a88) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a88) *)
    let shallow : (t88, _) idx_mut = (.a88) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 315;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 315 failed %d" i;
  );
  (* Deepening to (.b88) *)
  let idx : (t88, _) idx_mut = (.b88) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b88) *)
    let shallow : (t88, _) idx_mut = (.b88) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 316;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 316 failed %d" i;
  );

  (*******************************)
  (*   t89 = { int64; int64# }   *)
  (*******************************)
  (* Deepening to (.a89) *)
  let idx : (t89, _) idx_mut = (.a89) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a89) *)
    let shallow : (t89, _) idx_mut = (.a89) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 317;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 317 failed %d" i;
  );
  (* Deepening to (.b89) *)
  let idx : (t89, _) idx_mut = (.b89) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b89) *)
    let shallow : (t89, _) idx_mut = (.b89) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 318;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 318 failed %d" i;
  );

  (*******************************)
  (*   t90 = { int64; int32# }   *)
  (*******************************)
  (* Deepening to (.a90) *)
  let idx : (t90, _) idx_mut = (.a90) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a90) *)
    let shallow : (t90, _) idx_mut = (.a90) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 319;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 319 failed %d" i;
  );
  (* Deepening to (.b90) *)
  let idx : (t90, _) idx_mut = (.b90) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b90) *)
    let shallow : (t90, _) idx_mut = (.b90) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 320;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 320 failed %d" i;
  );

  (***********************************)
  (*   t91 = { int64; nativeint# }   *)
  (***********************************)
  (* Deepening to (.a91) *)
  let idx : (t91, _) idx_mut = (.a91) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a91) *)
    let shallow : (t91, _) idx_mut = (.a91) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 321;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 321 failed %d" i;
  );
  (* Deepening to (.b91) *)
  let idx : (t91, _) idx_mut = (.b91) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b91) *)
    let shallow : (t91, _) idx_mut = (.b91) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 322;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 322 failed %d" i;
  );

  (******************************)
  (*   t92 = { int64; float }   *)
  (******************************)
  (* Deepening to (.a92) *)
  let idx : (t92, _) idx_mut = (.a92) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a92) *)
    let shallow : (t92, _) idx_mut = (.a92) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 323;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 323 failed %d" i;
  );
  (* Deepening to (.b92) *)
  let idx : (t92, _) idx_mut = (.b92) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b92) *)
    let shallow : (t92, _) idx_mut = (.b92) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 324;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 324 failed %d" i;
  );

  (************************)
  (*   t93 = { int64# }   *)
  (************************)
  (* Deepening to (.a93) *)
  let idx : (t93, _) idx_mut = (.a93) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a93) *)
    let shallow : (t93, _) idx_mut = (.a93) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 325;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 325 failed %d" i;
  );

  (*****************************)
  (*   t94 = { int64#; int }   *)
  (*****************************)
  (* Deepening to (.a94) *)
  let idx : (t94, _) idx_mut = (.a94) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a94) *)
    let shallow : (t94, _) idx_mut = (.a94) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 326;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 326 failed %d" i;
  );
  (* Deepening to (.b94) *)
  let idx : (t94, _) idx_mut = (.b94) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b94) *)
    let shallow : (t94, _) idx_mut = (.b94) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 327;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 327 failed %d" i;
  );

  (*******************************)
  (*   t95 = { int64#; int64 }   *)
  (*******************************)
  (* Deepening to (.a95) *)
  let idx : (t95, _) idx_mut = (.a95) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a95) *)
    let shallow : (t95, _) idx_mut = (.a95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 328;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 328 failed %d" i;
  );
  (* Deepening to (.b95) *)
  let idx : (t95, _) idx_mut = (.b95) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b95) *)
    let shallow : (t95, _) idx_mut = (.b95) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 329;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 329 failed %d" i;
  );

  (********************************)
  (*   t96 = { int64#; int64# }   *)
  (********************************)
  (* Deepening to (.a96) *)
  let idx : (t96, _) idx_mut = (.a96) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a96) *)
    let shallow : (t96, _) idx_mut = (.a96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 330;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 330 failed %d" i;
  );
  (* Deepening to (.b96) *)
  let idx : (t96, _) idx_mut = (.b96) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b96) *)
    let shallow : (t96, _) idx_mut = (.b96) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 331;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 331 failed %d" i;
  );

  (********************************)
  (*   t97 = { int64#; int32# }   *)
  (********************************)
  (* Deepening to (.a97) *)
  let idx : (t97, _) idx_mut = (.a97) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a97) *)
    let shallow : (t97, _) idx_mut = (.a97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 332;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 332 failed %d" i;
  );
  (* Deepening to (.b97) *)
  let idx : (t97, _) idx_mut = (.b97) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b97) *)
    let shallow : (t97, _) idx_mut = (.b97) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 333;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 333 failed %d" i;
  );

  (************************************)
  (*   t98 = { int64#; nativeint# }   *)
  (************************************)
  (* Deepening to (.a98) *)
  let idx : (t98, _) idx_mut = (.a98) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a98) *)
    let shallow : (t98, _) idx_mut = (.a98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 334;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 334 failed %d" i;
  );
  (* Deepening to (.b98) *)
  let idx : (t98, _) idx_mut = (.b98) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b98) *)
    let shallow : (t98, _) idx_mut = (.b98) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 335;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 335 failed %d" i;
  );

  (*******************************)
  (*   t99 = { int64#; float }   *)
  (*******************************)
  (* Deepening to (.a99) *)
  let idx : (t99, _) idx_mut = (.a99) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a99) *)
    let shallow : (t99, _) idx_mut = (.a99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 336;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 336 failed %d" i;
  );
  (* Deepening to (.b99) *)
  let idx : (t99, _) idx_mut = (.b99) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b99) *)
    let shallow : (t99, _) idx_mut = (.b99) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 337;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 337 failed %d" i;
  );

  (*************************)
  (*   t100 = { int32# }   *)
  (*************************)
  (* Deepening to (.a100) *)
  let idx : (t100, _) idx_mut = (.a100) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a100) *)
    let shallow : (t100, _) idx_mut = (.a100) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 338;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 338 failed %d" i;
  );

  (******************************)
  (*   t101 = { int32#; int }   *)
  (******************************)
  (* Deepening to (.a101) *)
  let idx : (t101, _) idx_mut = (.a101) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a101) *)
    let shallow : (t101, _) idx_mut = (.a101) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 339;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 339 failed %d" i;
  );
  (* Deepening to (.b101) *)
  let idx : (t101, _) idx_mut = (.b101) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b101) *)
    let shallow : (t101, _) idx_mut = (.b101) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 340;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 340 failed %d" i;
  );

  (***********************************)
  (*   t102 = { int32#; int; int }   *)
  (***********************************)
  (* Deepening to (.a102) *)
  let idx : (t102, _) idx_mut = (.a102) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a102) *)
    let shallow : (t102, _) idx_mut = (.a102) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 341;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 341 failed %d" i;
  );
  (* Deepening to (.b102) *)
  let idx : (t102, _) idx_mut = (.b102) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b102) *)
    let shallow : (t102, _) idx_mut = (.b102) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 342;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 342 failed %d" i;
  );
  (* Deepening to (.c102) *)
  let idx : (t102, _) idx_mut = (.c102) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c102) *)
    let shallow : (t102, _) idx_mut = (.c102) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 343;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 343 failed %d" i;
  );

  (**************************************)
  (*   t103 = { int32#; int; int32# }   *)
  (**************************************)
  (* Deepening to (.a103) *)
  let idx : (t103, _) idx_mut = (.a103) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a103) *)
    let shallow : (t103, _) idx_mut = (.a103) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 344;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 344 failed %d" i;
  );
  (* Deepening to (.b103) *)
  let idx : (t103, _) idx_mut = (.b103) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b103) *)
    let shallow : (t103, _) idx_mut = (.b103) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 345;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 345 failed %d" i;
  );
  (* Deepening to (.c103) *)
  let idx : (t103, _) idx_mut = (.c103) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c103) *)
    let shallow : (t103, _) idx_mut = (.c103) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 346;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 346 failed %d" i;
  );

  (********************************)
  (*   t104 = { int32#; int64 }   *)
  (********************************)
  (* Deepening to (.a104) *)
  let idx : (t104, _) idx_mut = (.a104) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a104) *)
    let shallow : (t104, _) idx_mut = (.a104) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 347;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 347 failed %d" i;
  );
  (* Deepening to (.b104) *)
  let idx : (t104, _) idx_mut = (.b104) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b104) *)
    let shallow : (t104, _) idx_mut = (.b104) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 348;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 348 failed %d" i;
  );

  (*********************************)
  (*   t105 = { int32#; int64# }   *)
  (*********************************)
  (* Deepening to (.a105) *)
  let idx : (t105, _) idx_mut = (.a105) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a105) *)
    let shallow : (t105, _) idx_mut = (.a105) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 349;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 349 failed %d" i;
  );
  (* Deepening to (.b105) *)
  let idx : (t105, _) idx_mut = (.b105) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b105) *)
    let shallow : (t105, _) idx_mut = (.b105) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 350;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 350 failed %d" i;
  );

  (*********************************)
  (*   t106 = { int32#; int32# }   *)
  (*********************************)
  (* Deepening to (.a106) *)
  let idx : (t106, _) idx_mut = (.a106) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a106) *)
    let shallow : (t106, _) idx_mut = (.a106) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 351;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 351 failed %d" i;
  );
  (* Deepening to (.b106) *)
  let idx : (t106, _) idx_mut = (.b106) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b106) *)
    let shallow : (t106, _) idx_mut = (.b106) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 352;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 352 failed %d" i;
  );

  (**************************************)
  (*   t107 = { int32#; int32#; int }   *)
  (**************************************)
  (* Deepening to (.a107) *)
  let idx : (t107, _) idx_mut = (.a107) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a107) *)
    let shallow : (t107, _) idx_mut = (.a107) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 353;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 353 failed %d" i;
  );
  (* Deepening to (.b107) *)
  let idx : (t107, _) idx_mut = (.b107) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b107) *)
    let shallow : (t107, _) idx_mut = (.b107) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 354;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 354 failed %d" i;
  );
  (* Deepening to (.c107) *)
  let idx : (t107, _) idx_mut = (.c107) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c107) *)
    let shallow : (t107, _) idx_mut = (.c107) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 355;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 355 failed %d" i;
  );

  (*****************************************)
  (*   t108 = { int32#; int32#; int32# }   *)
  (*****************************************)
  (* Deepening to (.a108) *)
  let idx : (t108, _) idx_mut = (.a108) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a108) *)
    let shallow : (t108, _) idx_mut = (.a108) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 356;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 356 failed %d" i;
  );
  (* Deepening to (.b108) *)
  let idx : (t108, _) idx_mut = (.b108) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b108) *)
    let shallow : (t108, _) idx_mut = (.b108) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 357;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 357 failed %d" i;
  );
  (* Deepening to (.c108) *)
  let idx : (t108, _) idx_mut = (.c108) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c108) *)
    let shallow : (t108, _) idx_mut = (.c108) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 358;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 358 failed %d" i;
  );

  (*************************************)
  (*   t109 = { int32#; nativeint# }   *)
  (*************************************)
  (* Deepening to (.a109) *)
  let idx : (t109, _) idx_mut = (.a109) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a109) *)
    let shallow : (t109, _) idx_mut = (.a109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 359;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 359 failed %d" i;
  );
  (* Deepening to (.b109) *)
  let idx : (t109, _) idx_mut = (.b109) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b109) *)
    let shallow : (t109, _) idx_mut = (.b109) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 360;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 360 failed %d" i;
  );

  (********************************)
  (*   t110 = { int32#; float }   *)
  (********************************)
  (* Deepening to (.a110) *)
  let idx : (t110, _) idx_mut = (.a110) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a110) *)
    let shallow : (t110, _) idx_mut = (.a110) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 361;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 361 failed %d" i;
  );
  (* Deepening to (.b110) *)
  let idx : (t110, _) idx_mut = (.b110) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b110) *)
    let shallow : (t110, _) idx_mut = (.b110) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 362;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 362 failed %d" i;
  );

  (***********************************)
  (*   t111 = { int32#; #{ int } }   *)
  (***********************************)
  (* Deepening to (.a111) *)
  let idx : (t111, _) idx_mut = (.a111) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a111) *)
    let shallow : (t111, _) idx_mut = (.a111) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 363;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 363 failed %d" i;
  );
  (* Deepening to (.b111) *)
  let idx : (t111, _) idx_mut = (.b111) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b111) *)
    let shallow : (t111, _) idx_mut = (.b111) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 364;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 364 failed %d" i;
  );
  (* Deepening to (.b111.#a18) *)
  let idx : (t111, _) idx_mut = (.b111.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b111) *)
    let shallow : (t111, _) idx_mut = (.b111) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 365;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 365 failed %d" i;
    (* from (.b111.#a18) *)
    let shallow : (t111, _) idx_mut = (.b111.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 366;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 366 failed %d" i;
  );

  (****************************************)
  (*   t112 = { int32#; #{ int; int } }   *)
  (****************************************)
  (* Deepening to (.a112) *)
  let idx : (t112, _) idx_mut = (.a112) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a112) *)
    let shallow : (t112, _) idx_mut = (.a112) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 367;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 367 failed %d" i;
  );
  (* Deepening to (.b112) *)
  let idx : (t112, _) idx_mut = (.b112) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b112) *)
    let shallow : (t112, _) idx_mut = (.b112) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 368;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 368 failed %d" i;
  );
  (* Deepening to (.b112.#a20) *)
  let idx : (t112, _) idx_mut = (.b112.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b112) *)
    let shallow : (t112, _) idx_mut = (.b112) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 369;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 369 failed %d" i;
    (* from (.b112.#a20) *)
    let shallow : (t112, _) idx_mut = (.b112.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 370;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 370 failed %d" i;
  );
  (* Deepening to (.b112.#b20) *)
  let idx : (t112, _) idx_mut = (.b112.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b112) *)
    let shallow : (t112, _) idx_mut = (.b112) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 371;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 371 failed %d" i;
    (* from (.b112.#b20) *)
    let shallow : (t112, _) idx_mut = (.b112.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 372;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 372 failed %d" i;
  );

  (*******************************************)
  (*   t113 = { int32#; #{ int; int32# } }   *)
  (*******************************************)
  (* Deepening to (.a113) *)
  let idx : (t113, _) idx_mut = (.a113) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a113) *)
    let shallow : (t113, _) idx_mut = (.a113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 373;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 373 failed %d" i;
  );
  (* Deepening to (.b113) *)
  let idx : (t113, _) idx_mut = (.b113) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b113) *)
    let shallow : (t113, _) idx_mut = (.b113) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 374;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 374 failed %d" i;
  );
  (* Deepening to (.b113.#a22) *)
  let idx : (t113, _) idx_mut = (.b113.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b113) *)
    let shallow : (t113, _) idx_mut = (.b113) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 375;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 375 failed %d" i;
    (* from (.b113.#a22) *)
    let shallow : (t113, _) idx_mut = (.b113.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 376;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 376 failed %d" i;
  );
  (* Deepening to (.b113.#b22) *)
  let idx : (t113, _) idx_mut = (.b113.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b113) *)
    let shallow : (t113, _) idx_mut = (.b113) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 377;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 377 failed %d" i;
    (* from (.b113.#b22) *)
    let shallow : (t113, _) idx_mut = (.b113.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 378;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 378 failed %d" i;
  );

  (*********************************************)
  (*   t114 = { int32#; #{ int; #{ int } } }   *)
  (*********************************************)
  (* Deepening to (.a114) *)
  let idx : (t114, _) idx_mut = (.a114) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a114) *)
    let shallow : (t114, _) idx_mut = (.a114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 379;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 379 failed %d" i;
  );
  (* Deepening to (.b114) *)
  let idx : (t114, _) idx_mut = (.b114) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b114) *)
    let shallow : (t114, _) idx_mut = (.b114) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 380;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 380 failed %d" i;
  );
  (* Deepening to (.b114.#a28) *)
  let idx : (t114, _) idx_mut = (.b114.#a28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b114) *)
    let shallow : (t114, _) idx_mut = (.b114) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 381;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 381 failed %d" i;
    (* from (.b114.#a28) *)
    let shallow : (t114, _) idx_mut = (.b114.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 382;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 382 failed %d" i;
  );
  (* Deepening to (.b114.#b28) *)
  let idx : (t114, _) idx_mut = (.b114.#b28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b114) *)
    let shallow : (t114, _) idx_mut = (.b114) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 383;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 383 failed %d" i;
    (* from (.b114.#b28) *)
    let shallow : (t114, _) idx_mut = (.b114.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 384;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 384 failed %d" i;
  );
  (* Deepening to (.b114.#b28.#a18) *)
  let idx : (t114, _) idx_mut = (.b114.#b28.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b114) *)
    let shallow : (t114, _) idx_mut = (.b114) in
    let deepened = (.idx_mut(shallow).#b28.#a18) in
    mark_test_run 385;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 385 failed %d" i;
    (* from (.b114.#b28) *)
    let shallow : (t114, _) idx_mut = (.b114.#b28) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 386;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 386 failed %d" i;
    (* from (.b114.#b28.#a18) *)
    let shallow : (t114, _) idx_mut = (.b114.#b28.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 387;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 387 failed %d" i;
  );

  (************************************************)
  (*   t115 = { int32#; #{ int; #{ int32# } } }   *)
  (************************************************)
  (* Deepening to (.a115) *)
  let idx : (t115, _) idx_mut = (.a115) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a115) *)
    let shallow : (t115, _) idx_mut = (.a115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 388;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 388 failed %d" i;
  );
  (* Deepening to (.b115) *)
  let idx : (t115, _) idx_mut = (.b115) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b115) *)
    let shallow : (t115, _) idx_mut = (.b115) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 389;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 389 failed %d" i;
  );
  (* Deepening to (.b115.#a31) *)
  let idx : (t115, _) idx_mut = (.b115.#a31) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b115) *)
    let shallow : (t115, _) idx_mut = (.b115) in
    let deepened = (.idx_mut(shallow).#a31) in
    mark_test_run 390;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 390 failed %d" i;
    (* from (.b115.#a31) *)
    let shallow : (t115, _) idx_mut = (.b115.#a31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 391;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 391 failed %d" i;
  );
  (* Deepening to (.b115.#b31) *)
  let idx : (t115, _) idx_mut = (.b115.#b31) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b115) *)
    let shallow : (t115, _) idx_mut = (.b115) in
    let deepened = (.idx_mut(shallow).#b31) in
    mark_test_run 392;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 392 failed %d" i;
    (* from (.b115.#b31) *)
    let shallow : (t115, _) idx_mut = (.b115.#b31) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 393;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 393 failed %d" i;
  );
  (* Deepening to (.b115.#b31.#a30) *)
  let idx : (t115, _) idx_mut = (.b115.#b31.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b115) *)
    let shallow : (t115, _) idx_mut = (.b115) in
    let deepened = (.idx_mut(shallow).#b31.#a30) in
    mark_test_run 394;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 394 failed %d" i;
    (* from (.b115.#b31) *)
    let shallow : (t115, _) idx_mut = (.b115.#b31) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 395;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 395 failed %d" i;
    (* from (.b115.#b31.#a30) *)
    let shallow : (t115, _) idx_mut = (.b115.#b31.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 396;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 396 failed %d" i;
  );

  (**************************************)
  (*   t116 = { int32#; #{ int32# } }   *)
  (**************************************)
  (* Deepening to (.a116) *)
  let idx : (t116, _) idx_mut = (.a116) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a116) *)
    let shallow : (t116, _) idx_mut = (.a116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 397;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 397 failed %d" i;
  );
  (* Deepening to (.b116) *)
  let idx : (t116, _) idx_mut = (.b116) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b116) *)
    let shallow : (t116, _) idx_mut = (.b116) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 398;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 398 failed %d" i;
  );
  (* Deepening to (.b116.#a30) *)
  let idx : (t116, _) idx_mut = (.b116.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b116) *)
    let shallow : (t116, _) idx_mut = (.b116) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 399;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 399 failed %d" i;
    (* from (.b116.#a30) *)
    let shallow : (t116, _) idx_mut = (.b116.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 400;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 400 failed %d" i;
  );

  (*******************************************)
  (*   t117 = { int32#; #{ int32#; int } }   *)
  (*******************************************)
  (* Deepening to (.a117) *)
  let idx : (t117, _) idx_mut = (.a117) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a117) *)
    let shallow : (t117, _) idx_mut = (.a117) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 401;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 401 failed %d" i;
  );
  (* Deepening to (.b117) *)
  let idx : (t117, _) idx_mut = (.b117) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b117) *)
    let shallow : (t117, _) idx_mut = (.b117) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 402;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 402 failed %d" i;
  );
  (* Deepening to (.b117.#a40) *)
  let idx : (t117, _) idx_mut = (.b117.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b117) *)
    let shallow : (t117, _) idx_mut = (.b117) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 403;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 403 failed %d" i;
    (* from (.b117.#a40) *)
    let shallow : (t117, _) idx_mut = (.b117.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 404;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 404 failed %d" i;
  );
  (* Deepening to (.b117.#b40) *)
  let idx : (t117, _) idx_mut = (.b117.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b117) *)
    let shallow : (t117, _) idx_mut = (.b117) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 405;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 405 failed %d" i;
    (* from (.b117.#b40) *)
    let shallow : (t117, _) idx_mut = (.b117.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 406;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 406 failed %d" i;
  );

  (**********************************************)
  (*   t118 = { int32#; #{ int32#; int32# } }   *)
  (**********************************************)
  (* Deepening to (.a118) *)
  let idx : (t118, _) idx_mut = (.a118) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a118) *)
    let shallow : (t118, _) idx_mut = (.a118) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 407;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 407 failed %d" i;
  );
  (* Deepening to (.b118) *)
  let idx : (t118, _) idx_mut = (.b118) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b118) *)
    let shallow : (t118, _) idx_mut = (.b118) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 408;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 408 failed %d" i;
  );
  (* Deepening to (.b118.#a42) *)
  let idx : (t118, _) idx_mut = (.b118.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b118) *)
    let shallow : (t118, _) idx_mut = (.b118) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 409;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 409 failed %d" i;
    (* from (.b118.#a42) *)
    let shallow : (t118, _) idx_mut = (.b118.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 410;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 410 failed %d" i;
  );
  (* Deepening to (.b118.#b42) *)
  let idx : (t118, _) idx_mut = (.b118.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b118) *)
    let shallow : (t118, _) idx_mut = (.b118) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 411;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 411 failed %d" i;
    (* from (.b118.#b42) *)
    let shallow : (t118, _) idx_mut = (.b118.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 412;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 412 failed %d" i;
  );

  (************************************************)
  (*   t119 = { int32#; #{ int32#; #{ int } } }   *)
  (************************************************)
  (* Deepening to (.a119) *)
  let idx : (t119, _) idx_mut = (.a119) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a119) *)
    let shallow : (t119, _) idx_mut = (.a119) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 413;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 413 failed %d" i;
  );
  (* Deepening to (.b119) *)
  let idx : (t119, _) idx_mut = (.b119) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b119) *)
    let shallow : (t119, _) idx_mut = (.b119) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 414;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 414 failed %d" i;
  );
  (* Deepening to (.b119.#a44) *)
  let idx : (t119, _) idx_mut = (.b119.#a44) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b119) *)
    let shallow : (t119, _) idx_mut = (.b119) in
    let deepened = (.idx_mut(shallow).#a44) in
    mark_test_run 415;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 415 failed %d" i;
    (* from (.b119.#a44) *)
    let shallow : (t119, _) idx_mut = (.b119.#a44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 416;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 416 failed %d" i;
  );
  (* Deepening to (.b119.#b44) *)
  let idx : (t119, _) idx_mut = (.b119.#b44) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b119) *)
    let shallow : (t119, _) idx_mut = (.b119) in
    let deepened = (.idx_mut(shallow).#b44) in
    mark_test_run 417;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 417 failed %d" i;
    (* from (.b119.#b44) *)
    let shallow : (t119, _) idx_mut = (.b119.#b44) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 418;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 418 failed %d" i;
  );
  (* Deepening to (.b119.#b44.#a18) *)
  let idx : (t119, _) idx_mut = (.b119.#b44.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b119) *)
    let shallow : (t119, _) idx_mut = (.b119) in
    let deepened = (.idx_mut(shallow).#b44.#a18) in
    mark_test_run 419;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 419 failed %d" i;
    (* from (.b119.#b44) *)
    let shallow : (t119, _) idx_mut = (.b119.#b44) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 420;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 420 failed %d" i;
    (* from (.b119.#b44.#a18) *)
    let shallow : (t119, _) idx_mut = (.b119.#b44.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 421;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 421 failed %d" i;
  );

  (***************************************************)
  (*   t120 = { int32#; #{ int32#; #{ int32# } } }   *)
  (***************************************************)
  (* Deepening to (.a120) *)
  let idx : (t120, _) idx_mut = (.a120) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a120) *)
    let shallow : (t120, _) idx_mut = (.a120) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 422;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 422 failed %d" i;
  );
  (* Deepening to (.b120) *)
  let idx : (t120, _) idx_mut = (.b120) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b120) *)
    let shallow : (t120, _) idx_mut = (.b120) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 423;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 423 failed %d" i;
  );
  (* Deepening to (.b120.#a46) *)
  let idx : (t120, _) idx_mut = (.b120.#a46) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b120) *)
    let shallow : (t120, _) idx_mut = (.b120) in
    let deepened = (.idx_mut(shallow).#a46) in
    mark_test_run 424;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 424 failed %d" i;
    (* from (.b120.#a46) *)
    let shallow : (t120, _) idx_mut = (.b120.#a46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 425;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 425 failed %d" i;
  );
  (* Deepening to (.b120.#b46) *)
  let idx : (t120, _) idx_mut = (.b120.#b46) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b120) *)
    let shallow : (t120, _) idx_mut = (.b120) in
    let deepened = (.idx_mut(shallow).#b46) in
    mark_test_run 426;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 426 failed %d" i;
    (* from (.b120.#b46) *)
    let shallow : (t120, _) idx_mut = (.b120.#b46) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 427;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 427 failed %d" i;
  );
  (* Deepening to (.b120.#b46.#a30) *)
  let idx : (t120, _) idx_mut = (.b120.#b46.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b120) *)
    let shallow : (t120, _) idx_mut = (.b120) in
    let deepened = (.idx_mut(shallow).#b46.#a30) in
    mark_test_run 428;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 428 failed %d" i;
    (* from (.b120.#b46) *)
    let shallow : (t120, _) idx_mut = (.b120.#b46) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 429;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 429 failed %d" i;
    (* from (.b120.#b46.#a30) *)
    let shallow : (t120, _) idx_mut = (.b120.#b46.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 430;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 430 failed %d" i;
  );

  (*********************************************)
  (*   t121 = { int32#; #{ #{ int; int } } }   *)
  (*********************************************)
  (* Deepening to (.a121) *)
  let idx : (t121, _) idx_mut = (.a121) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a121) *)
    let shallow : (t121, _) idx_mut = (.a121) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 431;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 431 failed %d" i;
  );
  (* Deepening to (.b121) *)
  let idx : (t121, _) idx_mut = (.b121) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b121) *)
    let shallow : (t121, _) idx_mut = (.b121) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 432;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 432 failed %d" i;
  );
  (* Deepening to (.b121.#a66) *)
  let idx : (t121, _) idx_mut = (.b121.#a66) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b121) *)
    let shallow : (t121, _) idx_mut = (.b121) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 433;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 433 failed %d" i;
    (* from (.b121.#a66) *)
    let shallow : (t121, _) idx_mut = (.b121.#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 434;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 434 failed %d" i;
  );
  (* Deepening to (.b121.#a66.#a20) *)
  let idx : (t121, _) idx_mut = (.b121.#a66.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b121) *)
    let shallow : (t121, _) idx_mut = (.b121) in
    let deepened = (.idx_mut(shallow).#a66.#a20) in
    mark_test_run 435;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 435 failed %d" i;
    (* from (.b121.#a66) *)
    let shallow : (t121, _) idx_mut = (.b121.#a66) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 436;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 436 failed %d" i;
    (* from (.b121.#a66.#a20) *)
    let shallow : (t121, _) idx_mut = (.b121.#a66.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 437;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 437 failed %d" i;
  );
  (* Deepening to (.b121.#a66.#b20) *)
  let idx : (t121, _) idx_mut = (.b121.#a66.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b121) *)
    let shallow : (t121, _) idx_mut = (.b121) in
    let deepened = (.idx_mut(shallow).#a66.#b20) in
    mark_test_run 438;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 438 failed %d" i;
    (* from (.b121.#a66) *)
    let shallow : (t121, _) idx_mut = (.b121.#a66) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 439;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 439 failed %d" i;
    (* from (.b121.#a66.#b20) *)
    let shallow : (t121, _) idx_mut = (.b121.#a66.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 440;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 440 failed %d" i;
  );

  (************************************************)
  (*   t122 = { int32#; #{ #{ int; int32# } } }   *)
  (************************************************)
  (* Deepening to (.a122) *)
  let idx : (t122, _) idx_mut = (.a122) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a122) *)
    let shallow : (t122, _) idx_mut = (.a122) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 441;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 441 failed %d" i;
  );
  (* Deepening to (.b122) *)
  let idx : (t122, _) idx_mut = (.b122) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b122) *)
    let shallow : (t122, _) idx_mut = (.b122) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 442;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 442 failed %d" i;
  );
  (* Deepening to (.b122.#a68) *)
  let idx : (t122, _) idx_mut = (.b122.#a68) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b122) *)
    let shallow : (t122, _) idx_mut = (.b122) in
    let deepened = (.idx_mut(shallow).#a68) in
    mark_test_run 443;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 443 failed %d" i;
    (* from (.b122.#a68) *)
    let shallow : (t122, _) idx_mut = (.b122.#a68) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 444;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 444 failed %d" i;
  );
  (* Deepening to (.b122.#a68.#a22) *)
  let idx : (t122, _) idx_mut = (.b122.#a68.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b122) *)
    let shallow : (t122, _) idx_mut = (.b122) in
    let deepened = (.idx_mut(shallow).#a68.#a22) in
    mark_test_run 445;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 445 failed %d" i;
    (* from (.b122.#a68) *)
    let shallow : (t122, _) idx_mut = (.b122.#a68) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 446;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 446 failed %d" i;
    (* from (.b122.#a68.#a22) *)
    let shallow : (t122, _) idx_mut = (.b122.#a68.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 447;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 447 failed %d" i;
  );
  (* Deepening to (.b122.#a68.#b22) *)
  let idx : (t122, _) idx_mut = (.b122.#a68.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b122) *)
    let shallow : (t122, _) idx_mut = (.b122) in
    let deepened = (.idx_mut(shallow).#a68.#b22) in
    mark_test_run 448;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 448 failed %d" i;
    (* from (.b122.#a68) *)
    let shallow : (t122, _) idx_mut = (.b122.#a68) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 449;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 449 failed %d" i;
    (* from (.b122.#a68.#b22) *)
    let shallow : (t122, _) idx_mut = (.b122.#a68.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 450;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 450 failed %d" i;
  );

  (************************************************)
  (*   t123 = { int32#; #{ #{ int32#; int } } }   *)
  (************************************************)
  (* Deepening to (.a123) *)
  let idx : (t123, _) idx_mut = (.a123) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a123) *)
    let shallow : (t123, _) idx_mut = (.a123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 451;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 451 failed %d" i;
  );
  (* Deepening to (.b123) *)
  let idx : (t123, _) idx_mut = (.b123) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b123) *)
    let shallow : (t123, _) idx_mut = (.b123) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 452;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 452 failed %d" i;
  );
  (* Deepening to (.b123.#a74) *)
  let idx : (t123, _) idx_mut = (.b123.#a74) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b123) *)
    let shallow : (t123, _) idx_mut = (.b123) in
    let deepened = (.idx_mut(shallow).#a74) in
    mark_test_run 453;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 453 failed %d" i;
    (* from (.b123.#a74) *)
    let shallow : (t123, _) idx_mut = (.b123.#a74) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 454;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 454 failed %d" i;
  );
  (* Deepening to (.b123.#a74.#a40) *)
  let idx : (t123, _) idx_mut = (.b123.#a74.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b123) *)
    let shallow : (t123, _) idx_mut = (.b123) in
    let deepened = (.idx_mut(shallow).#a74.#a40) in
    mark_test_run 455;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 455 failed %d" i;
    (* from (.b123.#a74) *)
    let shallow : (t123, _) idx_mut = (.b123.#a74) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 456;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 456 failed %d" i;
    (* from (.b123.#a74.#a40) *)
    let shallow : (t123, _) idx_mut = (.b123.#a74.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 457;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 457 failed %d" i;
  );
  (* Deepening to (.b123.#a74.#b40) *)
  let idx : (t123, _) idx_mut = (.b123.#a74.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b123) *)
    let shallow : (t123, _) idx_mut = (.b123) in
    let deepened = (.idx_mut(shallow).#a74.#b40) in
    mark_test_run 458;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 458 failed %d" i;
    (* from (.b123.#a74) *)
    let shallow : (t123, _) idx_mut = (.b123.#a74) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 459;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 459 failed %d" i;
    (* from (.b123.#a74.#b40) *)
    let shallow : (t123, _) idx_mut = (.b123.#a74.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 460;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 460 failed %d" i;
  );

  (***************************************************)
  (*   t124 = { int32#; #{ #{ int32#; int32# } } }   *)
  (***************************************************)
  (* Deepening to (.a124) *)
  let idx : (t124, _) idx_mut = (.a124) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a124) *)
    let shallow : (t124, _) idx_mut = (.a124) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 461;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 461 failed %d" i;
  );
  (* Deepening to (.b124) *)
  let idx : (t124, _) idx_mut = (.b124) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b124) *)
    let shallow : (t124, _) idx_mut = (.b124) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 462;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 462 failed %d" i;
  );
  (* Deepening to (.b124.#a76) *)
  let idx : (t124, _) idx_mut = (.b124.#a76) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b124) *)
    let shallow : (t124, _) idx_mut = (.b124) in
    let deepened = (.idx_mut(shallow).#a76) in
    mark_test_run 463;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 463 failed %d" i;
    (* from (.b124.#a76) *)
    let shallow : (t124, _) idx_mut = (.b124.#a76) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 464;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 464 failed %d" i;
  );
  (* Deepening to (.b124.#a76.#a42) *)
  let idx : (t124, _) idx_mut = (.b124.#a76.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b124) *)
    let shallow : (t124, _) idx_mut = (.b124) in
    let deepened = (.idx_mut(shallow).#a76.#a42) in
    mark_test_run 465;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 465 failed %d" i;
    (* from (.b124.#a76) *)
    let shallow : (t124, _) idx_mut = (.b124.#a76) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 466;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 466 failed %d" i;
    (* from (.b124.#a76.#a42) *)
    let shallow : (t124, _) idx_mut = (.b124.#a76.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 467;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 467 failed %d" i;
  );
  (* Deepening to (.b124.#a76.#b42) *)
  let idx : (t124, _) idx_mut = (.b124.#a76.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b124) *)
    let shallow : (t124, _) idx_mut = (.b124) in
    let deepened = (.idx_mut(shallow).#a76.#b42) in
    mark_test_run 468;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 468 failed %d" i;
    (* from (.b124.#a76) *)
    let shallow : (t124, _) idx_mut = (.b124.#a76) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 469;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 469 failed %d" i;
    (* from (.b124.#a76.#b42) *)
    let shallow : (t124, _) idx_mut = (.b124.#a76.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 470;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 470 failed %d" i;
  );

  (*****************************)
  (*   t125 = { nativeint# }   *)
  (*****************************)
  (* Deepening to (.a125) *)
  let idx : (t125, _) idx_mut = (.a125) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a125) *)
    let shallow : (t125, _) idx_mut = (.a125) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 471;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 471 failed %d" i;
  );

  (**********************************)
  (*   t126 = { nativeint#; int }   *)
  (**********************************)
  (* Deepening to (.a126) *)
  let idx : (t126, _) idx_mut = (.a126) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a126) *)
    let shallow : (t126, _) idx_mut = (.a126) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 472;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 472 failed %d" i;
  );
  (* Deepening to (.b126) *)
  let idx : (t126, _) idx_mut = (.b126) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b126) *)
    let shallow : (t126, _) idx_mut = (.b126) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 473;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 473 failed %d" i;
  );

  (************************************)
  (*   t127 = { nativeint#; int64 }   *)
  (************************************)
  (* Deepening to (.a127) *)
  let idx : (t127, _) idx_mut = (.a127) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a127) *)
    let shallow : (t127, _) idx_mut = (.a127) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 474;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 474 failed %d" i;
  );
  (* Deepening to (.b127) *)
  let idx : (t127, _) idx_mut = (.b127) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b127) *)
    let shallow : (t127, _) idx_mut = (.b127) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 475;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 475 failed %d" i;
  );

  (*************************************)
  (*   t128 = { nativeint#; int64# }   *)
  (*************************************)
  (* Deepening to (.a128) *)
  let idx : (t128, _) idx_mut = (.a128) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a128) *)
    let shallow : (t128, _) idx_mut = (.a128) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 476;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 476 failed %d" i;
  );
  (* Deepening to (.b128) *)
  let idx : (t128, _) idx_mut = (.b128) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b128) *)
    let shallow : (t128, _) idx_mut = (.b128) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 477;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 477 failed %d" i;
  );

  (*************************************)
  (*   t129 = { nativeint#; int32# }   *)
  (*************************************)
  (* Deepening to (.a129) *)
  let idx : (t129, _) idx_mut = (.a129) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a129) *)
    let shallow : (t129, _) idx_mut = (.a129) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 478;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 478 failed %d" i;
  );
  (* Deepening to (.b129) *)
  let idx : (t129, _) idx_mut = (.b129) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b129) *)
    let shallow : (t129, _) idx_mut = (.b129) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 479;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 479 failed %d" i;
  );

  (*****************************************)
  (*   t130 = { nativeint#; nativeint# }   *)
  (*****************************************)
  (* Deepening to (.a130) *)
  let idx : (t130, _) idx_mut = (.a130) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a130) *)
    let shallow : (t130, _) idx_mut = (.a130) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 480;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 480 failed %d" i;
  );
  (* Deepening to (.b130) *)
  let idx : (t130, _) idx_mut = (.b130) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b130) *)
    let shallow : (t130, _) idx_mut = (.b130) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 481;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 481 failed %d" i;
  );

  (************************************)
  (*   t131 = { nativeint#; float }   *)
  (************************************)
  (* Deepening to (.a131) *)
  let idx : (t131, _) idx_mut = (.a131) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a131) *)
    let shallow : (t131, _) idx_mut = (.a131) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 482;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 482 failed %d" i;
  );
  (* Deepening to (.b131) *)
  let idx : (t131, _) idx_mut = (.b131) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b131) *)
    let shallow : (t131, _) idx_mut = (.b131) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 483;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 483 failed %d" i;
  );

  (************************)
  (*   t132 = { float }   *)
  (************************)
  (* Deepening to (.a132) *)
  let idx : (t132, _) idx_mut = (.a132) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a132) *)
    let shallow : (t132, _) idx_mut = (.a132) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 484;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 484 failed %d" i;
  );

  (*****************************)
  (*   t133 = { float; int }   *)
  (*****************************)
  (* Deepening to (.a133) *)
  let idx : (t133, _) idx_mut = (.a133) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a133) *)
    let shallow : (t133, _) idx_mut = (.a133) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 485;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 485 failed %d" i;
  );
  (* Deepening to (.b133) *)
  let idx : (t133, _) idx_mut = (.b133) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b133) *)
    let shallow : (t133, _) idx_mut = (.b133) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 486;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 486 failed %d" i;
  );

  (**********************************)
  (*   t134 = { float; int; int }   *)
  (**********************************)
  (* Deepening to (.a134) *)
  let idx : (t134, _) idx_mut = (.a134) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a134) *)
    let shallow : (t134, _) idx_mut = (.a134) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 487;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 487 failed %d" i;
  );
  (* Deepening to (.b134) *)
  let idx : (t134, _) idx_mut = (.b134) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b134) *)
    let shallow : (t134, _) idx_mut = (.b134) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 488;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 488 failed %d" i;
  );
  (* Deepening to (.c134) *)
  let idx : (t134, _) idx_mut = (.c134) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c134) *)
    let shallow : (t134, _) idx_mut = (.c134) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 489;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 489 failed %d" i;
  );

  (************************************)
  (*   t135 = { float; int; float }   *)
  (************************************)
  (* Deepening to (.a135) *)
  let idx : (t135, _) idx_mut = (.a135) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a135) *)
    let shallow : (t135, _) idx_mut = (.a135) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 490;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 490 failed %d" i;
  );
  (* Deepening to (.b135) *)
  let idx : (t135, _) idx_mut = (.b135) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b135) *)
    let shallow : (t135, _) idx_mut = (.b135) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 491;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 491 failed %d" i;
  );
  (* Deepening to (.c135) *)
  let idx : (t135, _) idx_mut = (.c135) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c135) *)
    let shallow : (t135, _) idx_mut = (.c135) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 492;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 492 failed %d" i;
  );

  (*******************************)
  (*   t136 = { float; int64 }   *)
  (*******************************)
  (* Deepening to (.a136) *)
  let idx : (t136, _) idx_mut = (.a136) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a136) *)
    let shallow : (t136, _) idx_mut = (.a136) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 493;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 493 failed %d" i;
  );
  (* Deepening to (.b136) *)
  let idx : (t136, _) idx_mut = (.b136) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b136) *)
    let shallow : (t136, _) idx_mut = (.b136) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 494;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 494 failed %d" i;
  );

  (********************************)
  (*   t137 = { float; int64# }   *)
  (********************************)
  (* Deepening to (.a137) *)
  let idx : (t137, _) idx_mut = (.a137) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a137) *)
    let shallow : (t137, _) idx_mut = (.a137) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 495;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 495 failed %d" i;
  );
  (* Deepening to (.b137) *)
  let idx : (t137, _) idx_mut = (.b137) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b137) *)
    let shallow : (t137, _) idx_mut = (.b137) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 496;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 496 failed %d" i;
  );

  (********************************)
  (*   t138 = { float; int32# }   *)
  (********************************)
  (* Deepening to (.a138) *)
  let idx : (t138, _) idx_mut = (.a138) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a138) *)
    let shallow : (t138, _) idx_mut = (.a138) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 497;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 497 failed %d" i;
  );
  (* Deepening to (.b138) *)
  let idx : (t138, _) idx_mut = (.b138) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b138) *)
    let shallow : (t138, _) idx_mut = (.b138) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 498;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 498 failed %d" i;
  );

  (************************************)
  (*   t139 = { float; nativeint# }   *)
  (************************************)
  (* Deepening to (.a139) *)
  let idx : (t139, _) idx_mut = (.a139) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a139) *)
    let shallow : (t139, _) idx_mut = (.a139) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 499;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 499 failed %d" i;
  );
  (* Deepening to (.b139) *)
  let idx : (t139, _) idx_mut = (.b139) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b139) *)
    let shallow : (t139, _) idx_mut = (.b139) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 500;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 500 failed %d" i;
  );

  (*******************************)
  (*   t140 = { float; float }   *)
  (*******************************)
  (* Deepening to (.a140) *)
  let idx : (t140, _) idx_mut = (.a140) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a140) *)
    let shallow : (t140, _) idx_mut = (.a140) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 501;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 501 failed %d" i;
  );
  (* Deepening to (.b140) *)
  let idx : (t140, _) idx_mut = (.b140) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b140) *)
    let shallow : (t140, _) idx_mut = (.b140) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 502;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 502 failed %d" i;
  );

  (************************************)
  (*   t141 = { float; float; int }   *)
  (************************************)
  (* Deepening to (.a141) *)
  let idx : (t141, _) idx_mut = (.a141) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a141) *)
    let shallow : (t141, _) idx_mut = (.a141) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 503;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 503 failed %d" i;
  );
  (* Deepening to (.b141) *)
  let idx : (t141, _) idx_mut = (.b141) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b141) *)
    let shallow : (t141, _) idx_mut = (.b141) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 504;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 504 failed %d" i;
  );
  (* Deepening to (.c141) *)
  let idx : (t141, _) idx_mut = (.c141) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c141) *)
    let shallow : (t141, _) idx_mut = (.c141) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 505;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 505 failed %d" i;
  );

  (**************************************)
  (*   t142 = { float; float; float }   *)
  (**************************************)
  (* Deepening to (.a142) *)
  let idx : (t142, _) idx_mut = (.a142) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a142) *)
    let shallow : (t142, _) idx_mut = (.a142) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 506;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 506 failed %d" i;
  );
  (* Deepening to (.b142) *)
  let idx : (t142, _) idx_mut = (.b142) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b142) *)
    let shallow : (t142, _) idx_mut = (.b142) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 507;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 507 failed %d" i;
  );
  (* Deepening to (.c142) *)
  let idx : (t142, _) idx_mut = (.c142) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c142) *)
    let shallow : (t142, _) idx_mut = (.c142) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 508;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 508 failed %d" i;
  );

  (***************************************)
  (*   t143 = { float; float; float# }   *)
  (***************************************)
  (* Deepening to (.a143) *)
  let idx : (t143, _) idx_mut = (.a143) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a143) *)
    let shallow : (t143, _) idx_mut = (.a143) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 509;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 509 failed %d" i;
  );
  (* Deepening to (.b143) *)
  let idx : (t143, _) idx_mut = (.b143) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b143) *)
    let shallow : (t143, _) idx_mut = (.b143) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 510;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 510 failed %d" i;
  );
  (* Deepening to (.c143) *)
  let idx : (t143, _) idx_mut = (.c143) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c143) *)
    let shallow : (t143, _) idx_mut = (.c143) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 511;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 511 failed %d" i;
  );

  (********************************)
  (*   t144 = { float; float# }   *)
  (********************************)
  (* Deepening to (.a144) *)
  let idx : (t144, _) idx_mut = (.a144) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a144) *)
    let shallow : (t144, _) idx_mut = (.a144) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 512;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 512 failed %d" i;
  );
  (* Deepening to (.b144) *)
  let idx : (t144, _) idx_mut = (.b144) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b144) *)
    let shallow : (t144, _) idx_mut = (.b144) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 513;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 513 failed %d" i;
  );

  (***************************************)
  (*   t145 = { float; float#; float }   *)
  (***************************************)
  (* Deepening to (.a145) *)
  let idx : (t145, _) idx_mut = (.a145) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a145) *)
    let shallow : (t145, _) idx_mut = (.a145) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 514;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 514 failed %d" i;
  );
  (* Deepening to (.b145) *)
  let idx : (t145, _) idx_mut = (.b145) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b145) *)
    let shallow : (t145, _) idx_mut = (.b145) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 515;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 515 failed %d" i;
  );
  (* Deepening to (.c145) *)
  let idx : (t145, _) idx_mut = (.c145) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c145) *)
    let shallow : (t145, _) idx_mut = (.c145) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 516;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 516 failed %d" i;
  );

  (****************************************)
  (*   t146 = { float; float#; float# }   *)
  (****************************************)
  (* Deepening to (.a146) *)
  let idx : (t146, _) idx_mut = (.a146) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a146) *)
    let shallow : (t146, _) idx_mut = (.a146) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 517;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 517 failed %d" i;
  );
  (* Deepening to (.b146) *)
  let idx : (t146, _) idx_mut = (.b146) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b146) *)
    let shallow : (t146, _) idx_mut = (.b146) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 518;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 518 failed %d" i;
  );
  (* Deepening to (.c146) *)
  let idx : (t146, _) idx_mut = (.c146) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c146) *)
    let shallow : (t146, _) idx_mut = (.c146) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 519;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 519 failed %d" i;
  );

  (**********************************)
  (*   t147 = { float; #{ int } }   *)
  (**********************************)
  (* Deepening to (.a147) *)
  let idx : (t147, _) idx_mut = (.a147) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a147) *)
    let shallow : (t147, _) idx_mut = (.a147) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 520;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 520 failed %d" i;
  );
  (* Deepening to (.b147) *)
  let idx : (t147, _) idx_mut = (.b147) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b147) *)
    let shallow : (t147, _) idx_mut = (.b147) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 521;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 521 failed %d" i;
  );
  (* Deepening to (.b147.#a18) *)
  let idx : (t147, _) idx_mut = (.b147.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b147) *)
    let shallow : (t147, _) idx_mut = (.b147) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 522;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 522 failed %d" i;
    (* from (.b147.#a18) *)
    let shallow : (t147, _) idx_mut = (.b147.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 523;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 523 failed %d" i;
  );

  (***************************************)
  (*   t148 = { float; #{ int; int } }   *)
  (***************************************)
  (* Deepening to (.a148) *)
  let idx : (t148, _) idx_mut = (.a148) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a148) *)
    let shallow : (t148, _) idx_mut = (.a148) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 524;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 524 failed %d" i;
  );
  (* Deepening to (.b148) *)
  let idx : (t148, _) idx_mut = (.b148) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b148) *)
    let shallow : (t148, _) idx_mut = (.b148) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 525;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 525 failed %d" i;
  );
  (* Deepening to (.b148.#a20) *)
  let idx : (t148, _) idx_mut = (.b148.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b148) *)
    let shallow : (t148, _) idx_mut = (.b148) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 526;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 526 failed %d" i;
    (* from (.b148.#a20) *)
    let shallow : (t148, _) idx_mut = (.b148.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 527;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 527 failed %d" i;
  );
  (* Deepening to (.b148.#b20) *)
  let idx : (t148, _) idx_mut = (.b148.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b148) *)
    let shallow : (t148, _) idx_mut = (.b148) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 528;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 528 failed %d" i;
    (* from (.b148.#b20) *)
    let shallow : (t148, _) idx_mut = (.b148.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 529;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 529 failed %d" i;
  );

  (*****************************************)
  (*   t149 = { float; #{ int; float } }   *)
  (*****************************************)
  (* Deepening to (.a149) *)
  let idx : (t149, _) idx_mut = (.a149) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a149) *)
    let shallow : (t149, _) idx_mut = (.a149) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 530;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 530 failed %d" i;
  );
  (* Deepening to (.b149) *)
  let idx : (t149, _) idx_mut = (.b149) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b149) *)
    let shallow : (t149, _) idx_mut = (.b149) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 531;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 531 failed %d" i;
  );
  (* Deepening to (.b149.#a24) *)
  let idx : (t149, _) idx_mut = (.b149.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b149) *)
    let shallow : (t149, _) idx_mut = (.b149) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 532;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 532 failed %d" i;
    (* from (.b149.#a24) *)
    let shallow : (t149, _) idx_mut = (.b149.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 533;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 533 failed %d" i;
  );
  (* Deepening to (.b149.#b24) *)
  let idx : (t149, _) idx_mut = (.b149.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b149) *)
    let shallow : (t149, _) idx_mut = (.b149) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 534;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 534 failed %d" i;
    (* from (.b149.#b24) *)
    let shallow : (t149, _) idx_mut = (.b149.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 535;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 535 failed %d" i;
  );

  (********************************************)
  (*   t150 = { float; #{ int; #{ int } } }   *)
  (********************************************)
  (* Deepening to (.a150) *)
  let idx : (t150, _) idx_mut = (.a150) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a150) *)
    let shallow : (t150, _) idx_mut = (.a150) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 536;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 536 failed %d" i;
  );
  (* Deepening to (.b150) *)
  let idx : (t150, _) idx_mut = (.b150) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b150) *)
    let shallow : (t150, _) idx_mut = (.b150) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 537;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 537 failed %d" i;
  );
  (* Deepening to (.b150.#a28) *)
  let idx : (t150, _) idx_mut = (.b150.#a28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b150) *)
    let shallow : (t150, _) idx_mut = (.b150) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 538;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 538 failed %d" i;
    (* from (.b150.#a28) *)
    let shallow : (t150, _) idx_mut = (.b150.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 539;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 539 failed %d" i;
  );
  (* Deepening to (.b150.#b28) *)
  let idx : (t150, _) idx_mut = (.b150.#b28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b150) *)
    let shallow : (t150, _) idx_mut = (.b150) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 540;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 540 failed %d" i;
    (* from (.b150.#b28) *)
    let shallow : (t150, _) idx_mut = (.b150.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 541;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 541 failed %d" i;
  );
  (* Deepening to (.b150.#b28.#a18) *)
  let idx : (t150, _) idx_mut = (.b150.#b28.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b150) *)
    let shallow : (t150, _) idx_mut = (.b150) in
    let deepened = (.idx_mut(shallow).#b28.#a18) in
    mark_test_run 542;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 542 failed %d" i;
    (* from (.b150.#b28) *)
    let shallow : (t150, _) idx_mut = (.b150.#b28) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 543;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 543 failed %d" i;
    (* from (.b150.#b28.#a18) *)
    let shallow : (t150, _) idx_mut = (.b150.#b28.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 544;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 544 failed %d" i;
  );

  (**********************************************)
  (*   t151 = { float; #{ int; #{ float } } }   *)
  (**********************************************)
  (* Deepening to (.a151) *)
  let idx : (t151, _) idx_mut = (.a151) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a151) *)
    let shallow : (t151, _) idx_mut = (.a151) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 545;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 545 failed %d" i;
  );
  (* Deepening to (.b151) *)
  let idx : (t151, _) idx_mut = (.b151) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b151) *)
    let shallow : (t151, _) idx_mut = (.b151) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 546;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 546 failed %d" i;
  );
  (* Deepening to (.b151.#a34) *)
  let idx : (t151, _) idx_mut = (.b151.#a34) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b151) *)
    let shallow : (t151, _) idx_mut = (.b151) in
    let deepened = (.idx_mut(shallow).#a34) in
    mark_test_run 547;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 547 failed %d" i;
    (* from (.b151.#a34) *)
    let shallow : (t151, _) idx_mut = (.b151.#a34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 548;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 548 failed %d" i;
  );
  (* Deepening to (.b151.#b34) *)
  let idx : (t151, _) idx_mut = (.b151.#b34) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b151) *)
    let shallow : (t151, _) idx_mut = (.b151) in
    let deepened = (.idx_mut(shallow).#b34) in
    mark_test_run 549;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 549 failed %d" i;
    (* from (.b151.#b34) *)
    let shallow : (t151, _) idx_mut = (.b151.#b34) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 550;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 550 failed %d" i;
  );
  (* Deepening to (.b151.#b34.#a33) *)
  let idx : (t151, _) idx_mut = (.b151.#b34.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b151) *)
    let shallow : (t151, _) idx_mut = (.b151) in
    let deepened = (.idx_mut(shallow).#b34.#a33) in
    mark_test_run 551;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 551 failed %d" i;
    (* from (.b151.#b34) *)
    let shallow : (t151, _) idx_mut = (.b151.#b34) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 552;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 552 failed %d" i;
    (* from (.b151.#b34.#a33) *)
    let shallow : (t151, _) idx_mut = (.b151.#b34.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 553;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 553 failed %d" i;
  );

  (************************************)
  (*   t152 = { float; #{ float } }   *)
  (************************************)
  (* Deepening to (.a152) *)
  let idx : (t152, _) idx_mut = (.a152) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a152) *)
    let shallow : (t152, _) idx_mut = (.a152) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 554;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 554 failed %d" i;
  );
  (* Deepening to (.b152) *)
  let idx : (t152, _) idx_mut = (.b152) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b152) *)
    let shallow : (t152, _) idx_mut = (.b152) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 555;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 555 failed %d" i;
  );
  (* Deepening to (.b152.#a33) *)
  let idx : (t152, _) idx_mut = (.b152.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* Note: can't deepen (.b152) because it's a path to a flattened
       float, making its element type [float#] *)
    (* from (.b152.#a33) *)
    let shallow : (t152, _) idx_mut = (.b152.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 556;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 556 failed %d" i;
  );

  (*****************************************)
  (*   t153 = { float; #{ float; int } }   *)
  (*****************************************)
  (* Deepening to (.a153) *)
  let idx : (t153, _) idx_mut = (.a153) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a153) *)
    let shallow : (t153, _) idx_mut = (.a153) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 557;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 557 failed %d" i;
  );
  (* Deepening to (.b153) *)
  let idx : (t153, _) idx_mut = (.b153) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b153) *)
    let shallow : (t153, _) idx_mut = (.b153) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 558;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 558 failed %d" i;
  );
  (* Deepening to (.b153.#a49) *)
  let idx : (t153, _) idx_mut = (.b153.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b153) *)
    let shallow : (t153, _) idx_mut = (.b153) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 559;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 559 failed %d" i;
    (* from (.b153.#a49) *)
    let shallow : (t153, _) idx_mut = (.b153.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 560;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 560 failed %d" i;
  );
  (* Deepening to (.b153.#b49) *)
  let idx : (t153, _) idx_mut = (.b153.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b153) *)
    let shallow : (t153, _) idx_mut = (.b153) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 561;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 561 failed %d" i;
    (* from (.b153.#b49) *)
    let shallow : (t153, _) idx_mut = (.b153.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 562;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 562 failed %d" i;
  );

  (*******************************************)
  (*   t154 = { float; #{ float; float } }   *)
  (*******************************************)
  (* Deepening to (.a154) *)
  let idx : (t154, _) idx_mut = (.a154) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a154) *)
    let shallow : (t154, _) idx_mut = (.a154) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 563;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 563 failed %d" i;
  );
  (* Deepening to (.b154) *)
  let idx : (t154, _) idx_mut = (.b154) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b154) *)
    let shallow : (t154, _) idx_mut = (.b154) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 564;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 564 failed %d" i;
  );
  (* Deepening to (.b154.#a51) *)
  let idx : (t154, _) idx_mut = (.b154.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b154) *)
    let shallow : (t154, _) idx_mut = (.b154) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 565;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 565 failed %d" i;
    (* from (.b154.#a51) *)
    let shallow : (t154, _) idx_mut = (.b154.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 566;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 566 failed %d" i;
  );
  (* Deepening to (.b154.#b51) *)
  let idx : (t154, _) idx_mut = (.b154.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b154) *)
    let shallow : (t154, _) idx_mut = (.b154) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 567;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 567 failed %d" i;
    (* from (.b154.#b51) *)
    let shallow : (t154, _) idx_mut = (.b154.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 568;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 568 failed %d" i;
  );

  (********************************************)
  (*   t156 = { float; #{ float; float# } }   *)
  (********************************************)
  (* Deepening to (.a156) *)
  let idx : (t156, _) idx_mut = (.a156) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a156) *)
    let shallow : (t156, _) idx_mut = (.a156) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 569;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 569 failed %d" i;
  );
  (* Deepening to (.b156) *)
  let idx : (t156, _) idx_mut = (.b156) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b156) *)
    let shallow : (t156, _) idx_mut = (.b156) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 570;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 570 failed %d" i;
  );
  (* Deepening to (.b156.#a155) *)
  let idx : (t156, _) idx_mut = (.b156.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b156) *)
    let shallow : (t156, _) idx_mut = (.b156) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 571;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 571 failed %d" i;
    (* from (.b156.#a155) *)
    let shallow : (t156, _) idx_mut = (.b156.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 572;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 572 failed %d" i;
  );
  (* Deepening to (.b156.#b155) *)
  let idx : (t156, _) idx_mut = (.b156.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b156) *)
    let shallow : (t156, _) idx_mut = (.b156) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 573;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 573 failed %d" i;
    (* from (.b156.#b155) *)
    let shallow : (t156, _) idx_mut = (.b156.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 574;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 574 failed %d" i;
  );

  (**********************************************)
  (*   t157 = { float; #{ float; #{ int } } }   *)
  (**********************************************)
  (* Deepening to (.a157) *)
  let idx : (t157, _) idx_mut = (.a157) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a157) *)
    let shallow : (t157, _) idx_mut = (.a157) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 575;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 575 failed %d" i;
  );
  (* Deepening to (.b157) *)
  let idx : (t157, _) idx_mut = (.b157) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b157) *)
    let shallow : (t157, _) idx_mut = (.b157) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 576;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 576 failed %d" i;
  );
  (* Deepening to (.b157.#a53) *)
  let idx : (t157, _) idx_mut = (.b157.#a53) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b157) *)
    let shallow : (t157, _) idx_mut = (.b157) in
    let deepened = (.idx_mut(shallow).#a53) in
    mark_test_run 577;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 577 failed %d" i;
    (* from (.b157.#a53) *)
    let shallow : (t157, _) idx_mut = (.b157.#a53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 578;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 578 failed %d" i;
  );
  (* Deepening to (.b157.#b53) *)
  let idx : (t157, _) idx_mut = (.b157.#b53) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b157) *)
    let shallow : (t157, _) idx_mut = (.b157) in
    let deepened = (.idx_mut(shallow).#b53) in
    mark_test_run 579;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 579 failed %d" i;
    (* from (.b157.#b53) *)
    let shallow : (t157, _) idx_mut = (.b157.#b53) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 580;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 580 failed %d" i;
  );
  (* Deepening to (.b157.#b53.#a18) *)
  let idx : (t157, _) idx_mut = (.b157.#b53.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b157) *)
    let shallow : (t157, _) idx_mut = (.b157) in
    let deepened = (.idx_mut(shallow).#b53.#a18) in
    mark_test_run 581;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 581 failed %d" i;
    (* from (.b157.#b53) *)
    let shallow : (t157, _) idx_mut = (.b157.#b53) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 582;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 582 failed %d" i;
    (* from (.b157.#b53.#a18) *)
    let shallow : (t157, _) idx_mut = (.b157.#b53.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 583;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 583 failed %d" i;
  );

  (************************************************)
  (*   t158 = { float; #{ float; #{ float } } }   *)
  (************************************************)
  (* Deepening to (.a158) *)
  let idx : (t158, _) idx_mut = (.a158) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a158) *)
    let shallow : (t158, _) idx_mut = (.a158) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 584;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 584 failed %d" i;
  );
  (* Deepening to (.b158) *)
  let idx : (t158, _) idx_mut = (.b158) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b158) *)
    let shallow : (t158, _) idx_mut = (.b158) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 585;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 585 failed %d" i;
  );
  (* Deepening to (.b158.#a55) *)
  let idx : (t158, _) idx_mut = (.b158.#a55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b158) *)
    let shallow : (t158, _) idx_mut = (.b158) in
    let deepened = (.idx_mut(shallow).#a55) in
    mark_test_run 586;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 586 failed %d" i;
    (* from (.b158.#a55) *)
    let shallow : (t158, _) idx_mut = (.b158.#a55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 587;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 587 failed %d" i;
  );
  (* Deepening to (.b158.#b55) *)
  let idx : (t158, _) idx_mut = (.b158.#b55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b158) *)
    let shallow : (t158, _) idx_mut = (.b158) in
    let deepened = (.idx_mut(shallow).#b55) in
    mark_test_run 588;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 588 failed %d" i;
    (* from (.b158.#b55) *)
    let shallow : (t158, _) idx_mut = (.b158.#b55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 589;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 589 failed %d" i;
  );
  (* Deepening to (.b158.#b55.#a33) *)
  let idx : (t158, _) idx_mut = (.b158.#b55.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b158) *)
    let shallow : (t158, _) idx_mut = (.b158) in
    let deepened = (.idx_mut(shallow).#b55.#a33) in
    mark_test_run 590;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 590 failed %d" i;
    (* from (.b158.#b55) *)
    let shallow : (t158, _) idx_mut = (.b158.#b55) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 591;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 591 failed %d" i;
    (* from (.b158.#b55.#a33) *)
    let shallow : (t158, _) idx_mut = (.b158.#b55.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 592;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 592 failed %d" i;
  );

  (*************************************************)
  (*   t161 = { float; #{ float; #{ float# } } }   *)
  (*************************************************)
  (* Deepening to (.a161) *)
  let idx : (t161, _) idx_mut = (.a161) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a161) *)
    let shallow : (t161, _) idx_mut = (.a161) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 593;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 593 failed %d" i;
  );
  (* Deepening to (.b161) *)
  let idx : (t161, _) idx_mut = (.b161) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b161) *)
    let shallow : (t161, _) idx_mut = (.b161) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 594;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 594 failed %d" i;
  );
  (* Deepening to (.b161.#a160) *)
  let idx : (t161, _) idx_mut = (.b161.#a160) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b161) *)
    let shallow : (t161, _) idx_mut = (.b161) in
    let deepened = (.idx_mut(shallow).#a160) in
    mark_test_run 595;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 595 failed %d" i;
    (* from (.b161.#a160) *)
    let shallow : (t161, _) idx_mut = (.b161.#a160) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 596;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 596 failed %d" i;
  );
  (* Deepening to (.b161.#b160) *)
  let idx : (t161, _) idx_mut = (.b161.#b160) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b161) *)
    let shallow : (t161, _) idx_mut = (.b161) in
    let deepened = (.idx_mut(shallow).#b160) in
    mark_test_run 597;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 597 failed %d" i;
    (* from (.b161.#b160) *)
    let shallow : (t161, _) idx_mut = (.b161.#b160) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 598;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 598 failed %d" i;
  );
  (* Deepening to (.b161.#b160.#a159) *)
  let idx : (t161, _) idx_mut = (.b161.#b160.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b161) *)
    let shallow : (t161, _) idx_mut = (.b161) in
    let deepened = (.idx_mut(shallow).#b160.#a159) in
    mark_test_run 599;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 599 failed %d" i;
    (* from (.b161.#b160) *)
    let shallow : (t161, _) idx_mut = (.b161.#b160) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 600;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 600 failed %d" i;
    (* from (.b161.#b160.#a159) *)
    let shallow : (t161, _) idx_mut = (.b161.#b160.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 601;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 601 failed %d" i;
  );

  (*************************************)
  (*   t162 = { float; #{ float# } }   *)
  (*************************************)
  (* Deepening to (.a162) *)
  let idx : (t162, _) idx_mut = (.a162) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a162) *)
    let shallow : (t162, _) idx_mut = (.a162) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 602;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 602 failed %d" i;
  );
  (* Deepening to (.b162) *)
  let idx : (t162, _) idx_mut = (.b162) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b162) *)
    let shallow : (t162, _) idx_mut = (.b162) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 603;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 603 failed %d" i;
  );
  (* Deepening to (.b162.#a159) *)
  let idx : (t162, _) idx_mut = (.b162.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b162) *)
    let shallow : (t162, _) idx_mut = (.b162) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 604;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 604 failed %d" i;
    (* from (.b162.#a159) *)
    let shallow : (t162, _) idx_mut = (.b162.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 605;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 605 failed %d" i;
  );

  (********************************************)
  (*   t164 = { float; #{ float#; float } }   *)
  (********************************************)
  (* Deepening to (.a164) *)
  let idx : (t164, _) idx_mut = (.a164) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a164) *)
    let shallow : (t164, _) idx_mut = (.a164) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 606;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 606 failed %d" i;
  );
  (* Deepening to (.b164) *)
  let idx : (t164, _) idx_mut = (.b164) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b164) *)
    let shallow : (t164, _) idx_mut = (.b164) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 607;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 607 failed %d" i;
  );
  (* Deepening to (.b164.#a163) *)
  let idx : (t164, _) idx_mut = (.b164.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b164) *)
    let shallow : (t164, _) idx_mut = (.b164) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 608;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 608 failed %d" i;
    (* from (.b164.#a163) *)
    let shallow : (t164, _) idx_mut = (.b164.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 609;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 609 failed %d" i;
  );
  (* Deepening to (.b164.#b163) *)
  let idx : (t164, _) idx_mut = (.b164.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b164) *)
    let shallow : (t164, _) idx_mut = (.b164) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 610;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 610 failed %d" i;
    (* from (.b164.#b163) *)
    let shallow : (t164, _) idx_mut = (.b164.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 611;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 611 failed %d" i;
  );

  (*********************************************)
  (*   t166 = { float; #{ float#; float# } }   *)
  (*********************************************)
  (* Deepening to (.a166) *)
  let idx : (t166, _) idx_mut = (.a166) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a166) *)
    let shallow : (t166, _) idx_mut = (.a166) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 612;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 612 failed %d" i;
  );
  (* Deepening to (.b166) *)
  let idx : (t166, _) idx_mut = (.b166) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b166) *)
    let shallow : (t166, _) idx_mut = (.b166) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 613;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 613 failed %d" i;
  );
  (* Deepening to (.b166.#a165) *)
  let idx : (t166, _) idx_mut = (.b166.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b166) *)
    let shallow : (t166, _) idx_mut = (.b166) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 614;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 614 failed %d" i;
    (* from (.b166.#a165) *)
    let shallow : (t166, _) idx_mut = (.b166.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 615;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 615 failed %d" i;
  );
  (* Deepening to (.b166.#b165) *)
  let idx : (t166, _) idx_mut = (.b166.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b166) *)
    let shallow : (t166, _) idx_mut = (.b166) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 616;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 616 failed %d" i;
    (* from (.b166.#b165) *)
    let shallow : (t166, _) idx_mut = (.b166.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 617;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 617 failed %d" i;
  );

  (*************************************************)
  (*   t168 = { float; #{ float#; #{ float } } }   *)
  (*************************************************)
  (* Deepening to (.a168) *)
  let idx : (t168, _) idx_mut = (.a168) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a168) *)
    let shallow : (t168, _) idx_mut = (.a168) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 618;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 618 failed %d" i;
  );
  (* Deepening to (.b168) *)
  let idx : (t168, _) idx_mut = (.b168) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b168) *)
    let shallow : (t168, _) idx_mut = (.b168) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 619;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 619 failed %d" i;
  );
  (* Deepening to (.b168.#a167) *)
  let idx : (t168, _) idx_mut = (.b168.#a167) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b168) *)
    let shallow : (t168, _) idx_mut = (.b168) in
    let deepened = (.idx_mut(shallow).#a167) in
    mark_test_run 620;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 620 failed %d" i;
    (* from (.b168.#a167) *)
    let shallow : (t168, _) idx_mut = (.b168.#a167) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 621;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 621 failed %d" i;
  );
  (* Deepening to (.b168.#b167) *)
  let idx : (t168, _) idx_mut = (.b168.#b167) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b168) *)
    let shallow : (t168, _) idx_mut = (.b168) in
    let deepened = (.idx_mut(shallow).#b167) in
    mark_test_run 622;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 622 failed %d" i;
    (* from (.b168.#b167) *)
    let shallow : (t168, _) idx_mut = (.b168.#b167) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 623;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 623 failed %d" i;
  );
  (* Deepening to (.b168.#b167.#a33) *)
  let idx : (t168, _) idx_mut = (.b168.#b167.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b168) *)
    let shallow : (t168, _) idx_mut = (.b168) in
    let deepened = (.idx_mut(shallow).#b167.#a33) in
    mark_test_run 624;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 624 failed %d" i;
    (* from (.b168.#b167) *)
    let shallow : (t168, _) idx_mut = (.b168.#b167) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 625;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 625 failed %d" i;
    (* from (.b168.#b167.#a33) *)
    let shallow : (t168, _) idx_mut = (.b168.#b167.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 626;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 626 failed %d" i;
  );

  (**************************************************)
  (*   t170 = { float; #{ float#; #{ float# } } }   *)
  (**************************************************)
  (* Deepening to (.a170) *)
  let idx : (t170, _) idx_mut = (.a170) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a170) *)
    let shallow : (t170, _) idx_mut = (.a170) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 627;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 627 failed %d" i;
  );
  (* Deepening to (.b170) *)
  let idx : (t170, _) idx_mut = (.b170) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b170) *)
    let shallow : (t170, _) idx_mut = (.b170) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 628;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 628 failed %d" i;
  );
  (* Deepening to (.b170.#a169) *)
  let idx : (t170, _) idx_mut = (.b170.#a169) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b170) *)
    let shallow : (t170, _) idx_mut = (.b170) in
    let deepened = (.idx_mut(shallow).#a169) in
    mark_test_run 629;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 629 failed %d" i;
    (* from (.b170.#a169) *)
    let shallow : (t170, _) idx_mut = (.b170.#a169) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 630;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 630 failed %d" i;
  );
  (* Deepening to (.b170.#b169) *)
  let idx : (t170, _) idx_mut = (.b170.#b169) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b170) *)
    let shallow : (t170, _) idx_mut = (.b170) in
    let deepened = (.idx_mut(shallow).#b169) in
    mark_test_run 631;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 631 failed %d" i;
    (* from (.b170.#b169) *)
    let shallow : (t170, _) idx_mut = (.b170.#b169) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 632;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 632 failed %d" i;
  );
  (* Deepening to (.b170.#b169.#a159) *)
  let idx : (t170, _) idx_mut = (.b170.#b169.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b170) *)
    let shallow : (t170, _) idx_mut = (.b170) in
    let deepened = (.idx_mut(shallow).#b169.#a159) in
    mark_test_run 633;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 633 failed %d" i;
    (* from (.b170.#b169) *)
    let shallow : (t170, _) idx_mut = (.b170.#b169) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 634;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 634 failed %d" i;
    (* from (.b170.#b169.#a159) *)
    let shallow : (t170, _) idx_mut = (.b170.#b169.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 635;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 635 failed %d" i;
  );

  (********************************************)
  (*   t171 = { float; #{ #{ int; int } } }   *)
  (********************************************)
  (* Deepening to (.a171) *)
  let idx : (t171, _) idx_mut = (.a171) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a171) *)
    let shallow : (t171, _) idx_mut = (.a171) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 636;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 636 failed %d" i;
  );
  (* Deepening to (.b171) *)
  let idx : (t171, _) idx_mut = (.b171) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b171) *)
    let shallow : (t171, _) idx_mut = (.b171) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 637;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 637 failed %d" i;
  );
  (* Deepening to (.b171.#a66) *)
  let idx : (t171, _) idx_mut = (.b171.#a66) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b171) *)
    let shallow : (t171, _) idx_mut = (.b171) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 638;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 638 failed %d" i;
    (* from (.b171.#a66) *)
    let shallow : (t171, _) idx_mut = (.b171.#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 639;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 639 failed %d" i;
  );
  (* Deepening to (.b171.#a66.#a20) *)
  let idx : (t171, _) idx_mut = (.b171.#a66.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b171) *)
    let shallow : (t171, _) idx_mut = (.b171) in
    let deepened = (.idx_mut(shallow).#a66.#a20) in
    mark_test_run 640;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 640 failed %d" i;
    (* from (.b171.#a66) *)
    let shallow : (t171, _) idx_mut = (.b171.#a66) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 641;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 641 failed %d" i;
    (* from (.b171.#a66.#a20) *)
    let shallow : (t171, _) idx_mut = (.b171.#a66.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 642;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 642 failed %d" i;
  );
  (* Deepening to (.b171.#a66.#b20) *)
  let idx : (t171, _) idx_mut = (.b171.#a66.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b171) *)
    let shallow : (t171, _) idx_mut = (.b171) in
    let deepened = (.idx_mut(shallow).#a66.#b20) in
    mark_test_run 643;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 643 failed %d" i;
    (* from (.b171.#a66) *)
    let shallow : (t171, _) idx_mut = (.b171.#a66) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 644;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 644 failed %d" i;
    (* from (.b171.#a66.#b20) *)
    let shallow : (t171, _) idx_mut = (.b171.#a66.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 645;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 645 failed %d" i;
  );

  (**********************************************)
  (*   t172 = { float; #{ #{ int; float } } }   *)
  (**********************************************)
  (* Deepening to (.a172) *)
  let idx : (t172, _) idx_mut = (.a172) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a172) *)
    let shallow : (t172, _) idx_mut = (.a172) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 646;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 646 failed %d" i;
  );
  (* Deepening to (.b172) *)
  let idx : (t172, _) idx_mut = (.b172) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b172) *)
    let shallow : (t172, _) idx_mut = (.b172) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 647;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 647 failed %d" i;
  );
  (* Deepening to (.b172.#a70) *)
  let idx : (t172, _) idx_mut = (.b172.#a70) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b172) *)
    let shallow : (t172, _) idx_mut = (.b172) in
    let deepened = (.idx_mut(shallow).#a70) in
    mark_test_run 648;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 648 failed %d" i;
    (* from (.b172.#a70) *)
    let shallow : (t172, _) idx_mut = (.b172.#a70) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 649;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 649 failed %d" i;
  );
  (* Deepening to (.b172.#a70.#a24) *)
  let idx : (t172, _) idx_mut = (.b172.#a70.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b172) *)
    let shallow : (t172, _) idx_mut = (.b172) in
    let deepened = (.idx_mut(shallow).#a70.#a24) in
    mark_test_run 650;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 650 failed %d" i;
    (* from (.b172.#a70) *)
    let shallow : (t172, _) idx_mut = (.b172.#a70) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 651;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 651 failed %d" i;
    (* from (.b172.#a70.#a24) *)
    let shallow : (t172, _) idx_mut = (.b172.#a70.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 652;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 652 failed %d" i;
  );
  (* Deepening to (.b172.#a70.#b24) *)
  let idx : (t172, _) idx_mut = (.b172.#a70.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b172) *)
    let shallow : (t172, _) idx_mut = (.b172) in
    let deepened = (.idx_mut(shallow).#a70.#b24) in
    mark_test_run 653;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 653 failed %d" i;
    (* from (.b172.#a70) *)
    let shallow : (t172, _) idx_mut = (.b172.#a70) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 654;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 654 failed %d" i;
    (* from (.b172.#a70.#b24) *)
    let shallow : (t172, _) idx_mut = (.b172.#a70.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 655;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 655 failed %d" i;
  );

  (**********************************************)
  (*   t173 = { float; #{ #{ float; int } } }   *)
  (**********************************************)
  (* Deepening to (.a173) *)
  let idx : (t173, _) idx_mut = (.a173) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a173) *)
    let shallow : (t173, _) idx_mut = (.a173) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 656;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 656 failed %d" i;
  );
  (* Deepening to (.b173) *)
  let idx : (t173, _) idx_mut = (.b173) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b173) *)
    let shallow : (t173, _) idx_mut = (.b173) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 657;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 657 failed %d" i;
  );
  (* Deepening to (.b173.#a78) *)
  let idx : (t173, _) idx_mut = (.b173.#a78) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b173) *)
    let shallow : (t173, _) idx_mut = (.b173) in
    let deepened = (.idx_mut(shallow).#a78) in
    mark_test_run 658;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 658 failed %d" i;
    (* from (.b173.#a78) *)
    let shallow : (t173, _) idx_mut = (.b173.#a78) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 659;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 659 failed %d" i;
  );
  (* Deepening to (.b173.#a78.#a49) *)
  let idx : (t173, _) idx_mut = (.b173.#a78.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b173) *)
    let shallow : (t173, _) idx_mut = (.b173) in
    let deepened = (.idx_mut(shallow).#a78.#a49) in
    mark_test_run 660;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 660 failed %d" i;
    (* from (.b173.#a78) *)
    let shallow : (t173, _) idx_mut = (.b173.#a78) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 661;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 661 failed %d" i;
    (* from (.b173.#a78.#a49) *)
    let shallow : (t173, _) idx_mut = (.b173.#a78.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 662;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 662 failed %d" i;
  );
  (* Deepening to (.b173.#a78.#b49) *)
  let idx : (t173, _) idx_mut = (.b173.#a78.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b173) *)
    let shallow : (t173, _) idx_mut = (.b173) in
    let deepened = (.idx_mut(shallow).#a78.#b49) in
    mark_test_run 663;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 663 failed %d" i;
    (* from (.b173.#a78) *)
    let shallow : (t173, _) idx_mut = (.b173.#a78) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 664;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 664 failed %d" i;
    (* from (.b173.#a78.#b49) *)
    let shallow : (t173, _) idx_mut = (.b173.#a78.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 665;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 665 failed %d" i;
  );

  (************************************************)
  (*   t174 = { float; #{ #{ float; float } } }   *)
  (************************************************)
  (* Deepening to (.a174) *)
  let idx : (t174, _) idx_mut = (.a174) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a174) *)
    let shallow : (t174, _) idx_mut = (.a174) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 666;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 666 failed %d" i;
  );
  (* Deepening to (.b174) *)
  let idx : (t174, _) idx_mut = (.b174) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b174) *)
    let shallow : (t174, _) idx_mut = (.b174) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 667;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 667 failed %d" i;
  );
  (* Deepening to (.b174.#a80) *)
  let idx : (t174, _) idx_mut = (.b174.#a80) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b174) *)
    let shallow : (t174, _) idx_mut = (.b174) in
    let deepened = (.idx_mut(shallow).#a80) in
    mark_test_run 668;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 668 failed %d" i;
    (* from (.b174.#a80) *)
    let shallow : (t174, _) idx_mut = (.b174.#a80) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 669;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 669 failed %d" i;
  );
  (* Deepening to (.b174.#a80.#a51) *)
  let idx : (t174, _) idx_mut = (.b174.#a80.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b174) *)
    let shallow : (t174, _) idx_mut = (.b174) in
    let deepened = (.idx_mut(shallow).#a80.#a51) in
    mark_test_run 670;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 670 failed %d" i;
    (* from (.b174.#a80) *)
    let shallow : (t174, _) idx_mut = (.b174.#a80) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 671;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 671 failed %d" i;
    (* from (.b174.#a80.#a51) *)
    let shallow : (t174, _) idx_mut = (.b174.#a80.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 672;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 672 failed %d" i;
  );
  (* Deepening to (.b174.#a80.#b51) *)
  let idx : (t174, _) idx_mut = (.b174.#a80.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b174) *)
    let shallow : (t174, _) idx_mut = (.b174) in
    let deepened = (.idx_mut(shallow).#a80.#b51) in
    mark_test_run 673;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 673 failed %d" i;
    (* from (.b174.#a80) *)
    let shallow : (t174, _) idx_mut = (.b174.#a80) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 674;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 674 failed %d" i;
    (* from (.b174.#a80.#b51) *)
    let shallow : (t174, _) idx_mut = (.b174.#a80.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 675;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 675 failed %d" i;
  );

  (*************************************************)
  (*   t176 = { float; #{ #{ float; float# } } }   *)
  (*************************************************)
  (* Deepening to (.a176) *)
  let idx : (t176, _) idx_mut = (.a176) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a176) *)
    let shallow : (t176, _) idx_mut = (.a176) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 676;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 676 failed %d" i;
  );
  (* Deepening to (.b176) *)
  let idx : (t176, _) idx_mut = (.b176) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b176) *)
    let shallow : (t176, _) idx_mut = (.b176) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 677;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 677 failed %d" i;
  );
  (* Deepening to (.b176.#a175) *)
  let idx : (t176, _) idx_mut = (.b176.#a175) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b176) *)
    let shallow : (t176, _) idx_mut = (.b176) in
    let deepened = (.idx_mut(shallow).#a175) in
    mark_test_run 678;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 678 failed %d" i;
    (* from (.b176.#a175) *)
    let shallow : (t176, _) idx_mut = (.b176.#a175) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 679;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 679 failed %d" i;
  );
  (* Deepening to (.b176.#a175.#a155) *)
  let idx : (t176, _) idx_mut = (.b176.#a175.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b176) *)
    let shallow : (t176, _) idx_mut = (.b176) in
    let deepened = (.idx_mut(shallow).#a175.#a155) in
    mark_test_run 680;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 680 failed %d" i;
    (* from (.b176.#a175) *)
    let shallow : (t176, _) idx_mut = (.b176.#a175) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 681;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 681 failed %d" i;
    (* from (.b176.#a175.#a155) *)
    let shallow : (t176, _) idx_mut = (.b176.#a175.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 682;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 682 failed %d" i;
  );
  (* Deepening to (.b176.#a175.#b155) *)
  let idx : (t176, _) idx_mut = (.b176.#a175.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b176) *)
    let shallow : (t176, _) idx_mut = (.b176) in
    let deepened = (.idx_mut(shallow).#a175.#b155) in
    mark_test_run 683;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 683 failed %d" i;
    (* from (.b176.#a175) *)
    let shallow : (t176, _) idx_mut = (.b176.#a175) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 684;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 684 failed %d" i;
    (* from (.b176.#a175.#b155) *)
    let shallow : (t176, _) idx_mut = (.b176.#a175.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 685;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 685 failed %d" i;
  );

  (*************************************************)
  (*   t178 = { float; #{ #{ float#; float } } }   *)
  (*************************************************)
  (* Deepening to (.a178) *)
  let idx : (t178, _) idx_mut = (.a178) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a178) *)
    let shallow : (t178, _) idx_mut = (.a178) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 686;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 686 failed %d" i;
  );
  (* Deepening to (.b178) *)
  let idx : (t178, _) idx_mut = (.b178) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b178) *)
    let shallow : (t178, _) idx_mut = (.b178) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 687;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 687 failed %d" i;
  );
  (* Deepening to (.b178.#a177) *)
  let idx : (t178, _) idx_mut = (.b178.#a177) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b178) *)
    let shallow : (t178, _) idx_mut = (.b178) in
    let deepened = (.idx_mut(shallow).#a177) in
    mark_test_run 688;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 688 failed %d" i;
    (* from (.b178.#a177) *)
    let shallow : (t178, _) idx_mut = (.b178.#a177) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 689;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 689 failed %d" i;
  );
  (* Deepening to (.b178.#a177.#a163) *)
  let idx : (t178, _) idx_mut = (.b178.#a177.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b178) *)
    let shallow : (t178, _) idx_mut = (.b178) in
    let deepened = (.idx_mut(shallow).#a177.#a163) in
    mark_test_run 690;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 690 failed %d" i;
    (* from (.b178.#a177) *)
    let shallow : (t178, _) idx_mut = (.b178.#a177) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 691;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 691 failed %d" i;
    (* from (.b178.#a177.#a163) *)
    let shallow : (t178, _) idx_mut = (.b178.#a177.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 692;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 692 failed %d" i;
  );
  (* Deepening to (.b178.#a177.#b163) *)
  let idx : (t178, _) idx_mut = (.b178.#a177.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b178) *)
    let shallow : (t178, _) idx_mut = (.b178) in
    let deepened = (.idx_mut(shallow).#a177.#b163) in
    mark_test_run 693;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 693 failed %d" i;
    (* from (.b178.#a177) *)
    let shallow : (t178, _) idx_mut = (.b178.#a177) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 694;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 694 failed %d" i;
    (* from (.b178.#a177.#b163) *)
    let shallow : (t178, _) idx_mut = (.b178.#a177.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 695;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 695 failed %d" i;
  );

  (**************************************************)
  (*   t180 = { float; #{ #{ float#; float# } } }   *)
  (**************************************************)
  (* Deepening to (.a180) *)
  let idx : (t180, _) idx_mut = (.a180) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a180) *)
    let shallow : (t180, _) idx_mut = (.a180) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 696;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 696 failed %d" i;
  );
  (* Deepening to (.b180) *)
  let idx : (t180, _) idx_mut = (.b180) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b180) *)
    let shallow : (t180, _) idx_mut = (.b180) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 697;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 697 failed %d" i;
  );
  (* Deepening to (.b180.#a179) *)
  let idx : (t180, _) idx_mut = (.b180.#a179) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b180) *)
    let shallow : (t180, _) idx_mut = (.b180) in
    let deepened = (.idx_mut(shallow).#a179) in
    mark_test_run 698;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 698 failed %d" i;
    (* from (.b180.#a179) *)
    let shallow : (t180, _) idx_mut = (.b180.#a179) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 699;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 699 failed %d" i;
  );
  (* Deepening to (.b180.#a179.#a165) *)
  let idx : (t180, _) idx_mut = (.b180.#a179.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b180) *)
    let shallow : (t180, _) idx_mut = (.b180) in
    let deepened = (.idx_mut(shallow).#a179.#a165) in
    mark_test_run 700;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 700 failed %d" i;
    (* from (.b180.#a179) *)
    let shallow : (t180, _) idx_mut = (.b180.#a179) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 701;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 701 failed %d" i;
    (* from (.b180.#a179.#a165) *)
    let shallow : (t180, _) idx_mut = (.b180.#a179.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 702;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 702 failed %d" i;
  );
  (* Deepening to (.b180.#a179.#b165) *)
  let idx : (t180, _) idx_mut = (.b180.#a179.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b180) *)
    let shallow : (t180, _) idx_mut = (.b180) in
    let deepened = (.idx_mut(shallow).#a179.#b165) in
    mark_test_run 703;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 703 failed %d" i;
    (* from (.b180.#a179) *)
    let shallow : (t180, _) idx_mut = (.b180.#a179) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 704;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 704 failed %d" i;
    (* from (.b180.#a179.#b165) *)
    let shallow : (t180, _) idx_mut = (.b180.#a179.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 705;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 705 failed %d" i;
  );

  (*************************)
  (*   t181 = { float# }   *)
  (*************************)
  (* Deepening to (.a181) *)
  let idx : (t181, _) idx_mut = (.a181) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a181) *)
    let shallow : (t181, _) idx_mut = (.a181) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 706;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 706 failed %d" i;
  );

  (********************************)
  (*   t182 = { float#; float }   *)
  (********************************)
  (* Deepening to (.a182) *)
  let idx : (t182, _) idx_mut = (.a182) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a182) *)
    let shallow : (t182, _) idx_mut = (.a182) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 707;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 707 failed %d" i;
  );
  (* Deepening to (.b182) *)
  let idx : (t182, _) idx_mut = (.b182) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b182) *)
    let shallow : (t182, _) idx_mut = (.b182) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 708;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 708 failed %d" i;
  );

  (***************************************)
  (*   t183 = { float#; float; float }   *)
  (***************************************)
  (* Deepening to (.a183) *)
  let idx : (t183, _) idx_mut = (.a183) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a183) *)
    let shallow : (t183, _) idx_mut = (.a183) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 709;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 709 failed %d" i;
  );
  (* Deepening to (.b183) *)
  let idx : (t183, _) idx_mut = (.b183) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b183) *)
    let shallow : (t183, _) idx_mut = (.b183) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 710;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 710 failed %d" i;
  );
  (* Deepening to (.c183) *)
  let idx : (t183, _) idx_mut = (.c183) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c183) *)
    let shallow : (t183, _) idx_mut = (.c183) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 711;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 711 failed %d" i;
  );

  (****************************************)
  (*   t184 = { float#; float; float# }   *)
  (****************************************)
  (* Deepening to (.a184) *)
  let idx : (t184, _) idx_mut = (.a184) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a184) *)
    let shallow : (t184, _) idx_mut = (.a184) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 712;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 712 failed %d" i;
  );
  (* Deepening to (.b184) *)
  let idx : (t184, _) idx_mut = (.b184) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b184) *)
    let shallow : (t184, _) idx_mut = (.b184) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 713;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 713 failed %d" i;
  );
  (* Deepening to (.c184) *)
  let idx : (t184, _) idx_mut = (.c184) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c184) *)
    let shallow : (t184, _) idx_mut = (.c184) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 714;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 714 failed %d" i;
  );

  (*********************************)
  (*   t185 = { float#; float# }   *)
  (*********************************)
  (* Deepening to (.a185) *)
  let idx : (t185, _) idx_mut = (.a185) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a185) *)
    let shallow : (t185, _) idx_mut = (.a185) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 715;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 715 failed %d" i;
  );
  (* Deepening to (.b185) *)
  let idx : (t185, _) idx_mut = (.b185) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b185) *)
    let shallow : (t185, _) idx_mut = (.b185) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 716;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 716 failed %d" i;
  );

  (****************************************)
  (*   t186 = { float#; float#; float }   *)
  (****************************************)
  (* Deepening to (.a186) *)
  let idx : (t186, _) idx_mut = (.a186) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a186) *)
    let shallow : (t186, _) idx_mut = (.a186) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 717;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 717 failed %d" i;
  );
  (* Deepening to (.b186) *)
  let idx : (t186, _) idx_mut = (.b186) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b186) *)
    let shallow : (t186, _) idx_mut = (.b186) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 718;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 718 failed %d" i;
  );
  (* Deepening to (.c186) *)
  let idx : (t186, _) idx_mut = (.c186) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c186) *)
    let shallow : (t186, _) idx_mut = (.c186) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 719;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 719 failed %d" i;
  );

  (*****************************************)
  (*   t187 = { float#; float#; float# }   *)
  (*****************************************)
  (* Deepening to (.a187) *)
  let idx : (t187, _) idx_mut = (.a187) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a187) *)
    let shallow : (t187, _) idx_mut = (.a187) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 720;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 720 failed %d" i;
  );
  (* Deepening to (.b187) *)
  let idx : (t187, _) idx_mut = (.b187) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b187) *)
    let shallow : (t187, _) idx_mut = (.b187) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 721;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 721 failed %d" i;
  );
  (* Deepening to (.c187) *)
  let idx : (t187, _) idx_mut = (.c187) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c187) *)
    let shallow : (t187, _) idx_mut = (.c187) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 722;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 722 failed %d" i;
  );

  (*************************************)
  (*   t188 = { float#; #{ float } }   *)
  (*************************************)
  (* Deepening to (.a188) *)
  let idx : (t188, _) idx_mut = (.a188) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a188) *)
    let shallow : (t188, _) idx_mut = (.a188) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 723;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 723 failed %d" i;
  );
  (* Deepening to (.b188) *)
  let idx : (t188, _) idx_mut = (.b188) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b188) *)
    let shallow : (t188, _) idx_mut = (.b188) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 724;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 724 failed %d" i;
  );
  (* Deepening to (.b188.#a33) *)
  let idx : (t188, _) idx_mut = (.b188.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* Note: can't deepen (.b188) because it's a path to a flattened
       float, making its element type [float#] *)
    (* from (.b188.#a33) *)
    let shallow : (t188, _) idx_mut = (.b188.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 725;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 725 failed %d" i;
  );

  (********************************************)
  (*   t189 = { float#; #{ float; float } }   *)
  (********************************************)
  (* Deepening to (.a189) *)
  let idx : (t189, _) idx_mut = (.a189) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a189) *)
    let shallow : (t189, _) idx_mut = (.a189) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 726;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 726 failed %d" i;
  );
  (* Deepening to (.b189) *)
  let idx : (t189, _) idx_mut = (.b189) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b189) *)
    let shallow : (t189, _) idx_mut = (.b189) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 727;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 727 failed %d" i;
  );
  (* Deepening to (.b189.#a51) *)
  let idx : (t189, _) idx_mut = (.b189.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b189) *)
    let shallow : (t189, _) idx_mut = (.b189) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 728;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 728 failed %d" i;
    (* from (.b189.#a51) *)
    let shallow : (t189, _) idx_mut = (.b189.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 729;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 729 failed %d" i;
  );
  (* Deepening to (.b189.#b51) *)
  let idx : (t189, _) idx_mut = (.b189.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b189) *)
    let shallow : (t189, _) idx_mut = (.b189) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 730;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 730 failed %d" i;
    (* from (.b189.#b51) *)
    let shallow : (t189, _) idx_mut = (.b189.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 731;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 731 failed %d" i;
  );

  (*********************************************)
  (*   t190 = { float#; #{ float; float# } }   *)
  (*********************************************)
  (* Deepening to (.a190) *)
  let idx : (t190, _) idx_mut = (.a190) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a190) *)
    let shallow : (t190, _) idx_mut = (.a190) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 732;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 732 failed %d" i;
  );
  (* Deepening to (.b190) *)
  let idx : (t190, _) idx_mut = (.b190) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b190) *)
    let shallow : (t190, _) idx_mut = (.b190) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 733;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 733 failed %d" i;
  );
  (* Deepening to (.b190.#a155) *)
  let idx : (t190, _) idx_mut = (.b190.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b190) *)
    let shallow : (t190, _) idx_mut = (.b190) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 734;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 734 failed %d" i;
    (* from (.b190.#a155) *)
    let shallow : (t190, _) idx_mut = (.b190.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 735;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 735 failed %d" i;
  );
  (* Deepening to (.b190.#b155) *)
  let idx : (t190, _) idx_mut = (.b190.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b190) *)
    let shallow : (t190, _) idx_mut = (.b190) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 736;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 736 failed %d" i;
    (* from (.b190.#b155) *)
    let shallow : (t190, _) idx_mut = (.b190.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 737;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 737 failed %d" i;
  );

  (*************************************************)
  (*   t191 = { float#; #{ float; #{ float } } }   *)
  (*************************************************)
  (* Deepening to (.a191) *)
  let idx : (t191, _) idx_mut = (.a191) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a191) *)
    let shallow : (t191, _) idx_mut = (.a191) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 738;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 738 failed %d" i;
  );
  (* Deepening to (.b191) *)
  let idx : (t191, _) idx_mut = (.b191) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b191) *)
    let shallow : (t191, _) idx_mut = (.b191) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 739;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 739 failed %d" i;
  );
  (* Deepening to (.b191.#a55) *)
  let idx : (t191, _) idx_mut = (.b191.#a55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b191) *)
    let shallow : (t191, _) idx_mut = (.b191) in
    let deepened = (.idx_mut(shallow).#a55) in
    mark_test_run 740;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 740 failed %d" i;
    (* from (.b191.#a55) *)
    let shallow : (t191, _) idx_mut = (.b191.#a55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 741;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 741 failed %d" i;
  );
  (* Deepening to (.b191.#b55) *)
  let idx : (t191, _) idx_mut = (.b191.#b55) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b191) *)
    let shallow : (t191, _) idx_mut = (.b191) in
    let deepened = (.idx_mut(shallow).#b55) in
    mark_test_run 742;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 742 failed %d" i;
    (* from (.b191.#b55) *)
    let shallow : (t191, _) idx_mut = (.b191.#b55) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 743;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 743 failed %d" i;
  );
  (* Deepening to (.b191.#b55.#a33) *)
  let idx : (t191, _) idx_mut = (.b191.#b55.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b191) *)
    let shallow : (t191, _) idx_mut = (.b191) in
    let deepened = (.idx_mut(shallow).#b55.#a33) in
    mark_test_run 744;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 744 failed %d" i;
    (* from (.b191.#b55) *)
    let shallow : (t191, _) idx_mut = (.b191.#b55) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 745;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 745 failed %d" i;
    (* from (.b191.#b55.#a33) *)
    let shallow : (t191, _) idx_mut = (.b191.#b55.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 746;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 746 failed %d" i;
  );

  (**************************************************)
  (*   t192 = { float#; #{ float; #{ float# } } }   *)
  (**************************************************)
  (* Deepening to (.a192) *)
  let idx : (t192, _) idx_mut = (.a192) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a192) *)
    let shallow : (t192, _) idx_mut = (.a192) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 747;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 747 failed %d" i;
  );
  (* Deepening to (.b192) *)
  let idx : (t192, _) idx_mut = (.b192) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b192) *)
    let shallow : (t192, _) idx_mut = (.b192) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 748;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 748 failed %d" i;
  );
  (* Deepening to (.b192.#a160) *)
  let idx : (t192, _) idx_mut = (.b192.#a160) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b192) *)
    let shallow : (t192, _) idx_mut = (.b192) in
    let deepened = (.idx_mut(shallow).#a160) in
    mark_test_run 749;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 749 failed %d" i;
    (* from (.b192.#a160) *)
    let shallow : (t192, _) idx_mut = (.b192.#a160) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 750;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 750 failed %d" i;
  );
  (* Deepening to (.b192.#b160) *)
  let idx : (t192, _) idx_mut = (.b192.#b160) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b192) *)
    let shallow : (t192, _) idx_mut = (.b192) in
    let deepened = (.idx_mut(shallow).#b160) in
    mark_test_run 751;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 751 failed %d" i;
    (* from (.b192.#b160) *)
    let shallow : (t192, _) idx_mut = (.b192.#b160) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 752;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 752 failed %d" i;
  );
  (* Deepening to (.b192.#b160.#a159) *)
  let idx : (t192, _) idx_mut = (.b192.#b160.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b192) *)
    let shallow : (t192, _) idx_mut = (.b192) in
    let deepened = (.idx_mut(shallow).#b160.#a159) in
    mark_test_run 753;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 753 failed %d" i;
    (* from (.b192.#b160) *)
    let shallow : (t192, _) idx_mut = (.b192.#b160) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 754;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 754 failed %d" i;
    (* from (.b192.#b160.#a159) *)
    let shallow : (t192, _) idx_mut = (.b192.#b160.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 755;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 755 failed %d" i;
  );

  (**************************************)
  (*   t193 = { float#; #{ float# } }   *)
  (**************************************)
  (* Deepening to (.a193) *)
  let idx : (t193, _) idx_mut = (.a193) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a193) *)
    let shallow : (t193, _) idx_mut = (.a193) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 756;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 756 failed %d" i;
  );
  (* Deepening to (.b193) *)
  let idx : (t193, _) idx_mut = (.b193) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b193) *)
    let shallow : (t193, _) idx_mut = (.b193) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 757;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 757 failed %d" i;
  );
  (* Deepening to (.b193.#a159) *)
  let idx : (t193, _) idx_mut = (.b193.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b193) *)
    let shallow : (t193, _) idx_mut = (.b193) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 758;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 758 failed %d" i;
    (* from (.b193.#a159) *)
    let shallow : (t193, _) idx_mut = (.b193.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 759;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 759 failed %d" i;
  );

  (*********************************************)
  (*   t194 = { float#; #{ float#; float } }   *)
  (*********************************************)
  (* Deepening to (.a194) *)
  let idx : (t194, _) idx_mut = (.a194) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a194) *)
    let shallow : (t194, _) idx_mut = (.a194) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 760;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 760 failed %d" i;
  );
  (* Deepening to (.b194) *)
  let idx : (t194, _) idx_mut = (.b194) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b194) *)
    let shallow : (t194, _) idx_mut = (.b194) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 761;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 761 failed %d" i;
  );
  (* Deepening to (.b194.#a163) *)
  let idx : (t194, _) idx_mut = (.b194.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b194) *)
    let shallow : (t194, _) idx_mut = (.b194) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 762;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 762 failed %d" i;
    (* from (.b194.#a163) *)
    let shallow : (t194, _) idx_mut = (.b194.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 763;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 763 failed %d" i;
  );
  (* Deepening to (.b194.#b163) *)
  let idx : (t194, _) idx_mut = (.b194.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b194) *)
    let shallow : (t194, _) idx_mut = (.b194) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 764;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 764 failed %d" i;
    (* from (.b194.#b163) *)
    let shallow : (t194, _) idx_mut = (.b194.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 765;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 765 failed %d" i;
  );

  (**********************************************)
  (*   t195 = { float#; #{ float#; float# } }   *)
  (**********************************************)
  (* Deepening to (.a195) *)
  let idx : (t195, _) idx_mut = (.a195) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a195) *)
    let shallow : (t195, _) idx_mut = (.a195) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 766;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 766 failed %d" i;
  );
  (* Deepening to (.b195) *)
  let idx : (t195, _) idx_mut = (.b195) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b195) *)
    let shallow : (t195, _) idx_mut = (.b195) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 767;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 767 failed %d" i;
  );
  (* Deepening to (.b195.#a165) *)
  let idx : (t195, _) idx_mut = (.b195.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b195) *)
    let shallow : (t195, _) idx_mut = (.b195) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 768;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 768 failed %d" i;
    (* from (.b195.#a165) *)
    let shallow : (t195, _) idx_mut = (.b195.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 769;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 769 failed %d" i;
  );
  (* Deepening to (.b195.#b165) *)
  let idx : (t195, _) idx_mut = (.b195.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b195) *)
    let shallow : (t195, _) idx_mut = (.b195) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 770;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 770 failed %d" i;
    (* from (.b195.#b165) *)
    let shallow : (t195, _) idx_mut = (.b195.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 771;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 771 failed %d" i;
  );

  (**************************************************)
  (*   t196 = { float#; #{ float#; #{ float } } }   *)
  (**************************************************)
  (* Deepening to (.a196) *)
  let idx : (t196, _) idx_mut = (.a196) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a196) *)
    let shallow : (t196, _) idx_mut = (.a196) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 772;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 772 failed %d" i;
  );
  (* Deepening to (.b196) *)
  let idx : (t196, _) idx_mut = (.b196) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b196) *)
    let shallow : (t196, _) idx_mut = (.b196) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 773;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 773 failed %d" i;
  );
  (* Deepening to (.b196.#a167) *)
  let idx : (t196, _) idx_mut = (.b196.#a167) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b196) *)
    let shallow : (t196, _) idx_mut = (.b196) in
    let deepened = (.idx_mut(shallow).#a167) in
    mark_test_run 774;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 774 failed %d" i;
    (* from (.b196.#a167) *)
    let shallow : (t196, _) idx_mut = (.b196.#a167) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 775;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 775 failed %d" i;
  );
  (* Deepening to (.b196.#b167) *)
  let idx : (t196, _) idx_mut = (.b196.#b167) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b196) *)
    let shallow : (t196, _) idx_mut = (.b196) in
    let deepened = (.idx_mut(shallow).#b167) in
    mark_test_run 776;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 776 failed %d" i;
    (* from (.b196.#b167) *)
    let shallow : (t196, _) idx_mut = (.b196.#b167) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 777;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 777 failed %d" i;
  );
  (* Deepening to (.b196.#b167.#a33) *)
  let idx : (t196, _) idx_mut = (.b196.#b167.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b196) *)
    let shallow : (t196, _) idx_mut = (.b196) in
    let deepened = (.idx_mut(shallow).#b167.#a33) in
    mark_test_run 778;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 778 failed %d" i;
    (* from (.b196.#b167) *)
    let shallow : (t196, _) idx_mut = (.b196.#b167) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 779;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 779 failed %d" i;
    (* from (.b196.#b167.#a33) *)
    let shallow : (t196, _) idx_mut = (.b196.#b167.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 780;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 780 failed %d" i;
  );

  (***************************************************)
  (*   t197 = { float#; #{ float#; #{ float# } } }   *)
  (***************************************************)
  (* Deepening to (.a197) *)
  let idx : (t197, _) idx_mut = (.a197) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a197) *)
    let shallow : (t197, _) idx_mut = (.a197) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 781;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 781 failed %d" i;
  );
  (* Deepening to (.b197) *)
  let idx : (t197, _) idx_mut = (.b197) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b197) *)
    let shallow : (t197, _) idx_mut = (.b197) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 782;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 782 failed %d" i;
  );
  (* Deepening to (.b197.#a169) *)
  let idx : (t197, _) idx_mut = (.b197.#a169) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b197) *)
    let shallow : (t197, _) idx_mut = (.b197) in
    let deepened = (.idx_mut(shallow).#a169) in
    mark_test_run 783;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 783 failed %d" i;
    (* from (.b197.#a169) *)
    let shallow : (t197, _) idx_mut = (.b197.#a169) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 784;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 784 failed %d" i;
  );
  (* Deepening to (.b197.#b169) *)
  let idx : (t197, _) idx_mut = (.b197.#b169) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b197) *)
    let shallow : (t197, _) idx_mut = (.b197) in
    let deepened = (.idx_mut(shallow).#b169) in
    mark_test_run 785;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 785 failed %d" i;
    (* from (.b197.#b169) *)
    let shallow : (t197, _) idx_mut = (.b197.#b169) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 786;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 786 failed %d" i;
  );
  (* Deepening to (.b197.#b169.#a159) *)
  let idx : (t197, _) idx_mut = (.b197.#b169.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b197) *)
    let shallow : (t197, _) idx_mut = (.b197) in
    let deepened = (.idx_mut(shallow).#b169.#a159) in
    mark_test_run 787;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 787 failed %d" i;
    (* from (.b197.#b169) *)
    let shallow : (t197, _) idx_mut = (.b197.#b169) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 788;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 788 failed %d" i;
    (* from (.b197.#b169.#a159) *)
    let shallow : (t197, _) idx_mut = (.b197.#b169.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 789;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 789 failed %d" i;
  );

  (*************************************************)
  (*   t198 = { float#; #{ #{ float; float } } }   *)
  (*************************************************)
  (* Deepening to (.a198) *)
  let idx : (t198, _) idx_mut = (.a198) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a198) *)
    let shallow : (t198, _) idx_mut = (.a198) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 790;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 790 failed %d" i;
  );
  (* Deepening to (.b198) *)
  let idx : (t198, _) idx_mut = (.b198) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b198) *)
    let shallow : (t198, _) idx_mut = (.b198) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 791;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 791 failed %d" i;
  );
  (* Deepening to (.b198.#a80) *)
  let idx : (t198, _) idx_mut = (.b198.#a80) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b198) *)
    let shallow : (t198, _) idx_mut = (.b198) in
    let deepened = (.idx_mut(shallow).#a80) in
    mark_test_run 792;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 792 failed %d" i;
    (* from (.b198.#a80) *)
    let shallow : (t198, _) idx_mut = (.b198.#a80) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 793;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 793 failed %d" i;
  );
  (* Deepening to (.b198.#a80.#a51) *)
  let idx : (t198, _) idx_mut = (.b198.#a80.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b198) *)
    let shallow : (t198, _) idx_mut = (.b198) in
    let deepened = (.idx_mut(shallow).#a80.#a51) in
    mark_test_run 794;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 794 failed %d" i;
    (* from (.b198.#a80) *)
    let shallow : (t198, _) idx_mut = (.b198.#a80) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 795;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 795 failed %d" i;
    (* from (.b198.#a80.#a51) *)
    let shallow : (t198, _) idx_mut = (.b198.#a80.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 796;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 796 failed %d" i;
  );
  (* Deepening to (.b198.#a80.#b51) *)
  let idx : (t198, _) idx_mut = (.b198.#a80.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b198) *)
    let shallow : (t198, _) idx_mut = (.b198) in
    let deepened = (.idx_mut(shallow).#a80.#b51) in
    mark_test_run 797;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 797 failed %d" i;
    (* from (.b198.#a80) *)
    let shallow : (t198, _) idx_mut = (.b198.#a80) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 798;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 798 failed %d" i;
    (* from (.b198.#a80.#b51) *)
    let shallow : (t198, _) idx_mut = (.b198.#a80.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 799;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 799 failed %d" i;
  );

  (**************************************************)
  (*   t199 = { float#; #{ #{ float; float# } } }   *)
  (**************************************************)
  (* Deepening to (.a199) *)
  let idx : (t199, _) idx_mut = (.a199) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a199) *)
    let shallow : (t199, _) idx_mut = (.a199) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 800;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 800 failed %d" i;
  );
  (* Deepening to (.b199) *)
  let idx : (t199, _) idx_mut = (.b199) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b199) *)
    let shallow : (t199, _) idx_mut = (.b199) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 801;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 801 failed %d" i;
  );
  (* Deepening to (.b199.#a175) *)
  let idx : (t199, _) idx_mut = (.b199.#a175) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b199) *)
    let shallow : (t199, _) idx_mut = (.b199) in
    let deepened = (.idx_mut(shallow).#a175) in
    mark_test_run 802;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 802 failed %d" i;
    (* from (.b199.#a175) *)
    let shallow : (t199, _) idx_mut = (.b199.#a175) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 803;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 803 failed %d" i;
  );
  (* Deepening to (.b199.#a175.#a155) *)
  let idx : (t199, _) idx_mut = (.b199.#a175.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b199) *)
    let shallow : (t199, _) idx_mut = (.b199) in
    let deepened = (.idx_mut(shallow).#a175.#a155) in
    mark_test_run 804;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 804 failed %d" i;
    (* from (.b199.#a175) *)
    let shallow : (t199, _) idx_mut = (.b199.#a175) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 805;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 805 failed %d" i;
    (* from (.b199.#a175.#a155) *)
    let shallow : (t199, _) idx_mut = (.b199.#a175.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 806;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 806 failed %d" i;
  );
  (* Deepening to (.b199.#a175.#b155) *)
  let idx : (t199, _) idx_mut = (.b199.#a175.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b199) *)
    let shallow : (t199, _) idx_mut = (.b199) in
    let deepened = (.idx_mut(shallow).#a175.#b155) in
    mark_test_run 807;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 807 failed %d" i;
    (* from (.b199.#a175) *)
    let shallow : (t199, _) idx_mut = (.b199.#a175) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 808;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 808 failed %d" i;
    (* from (.b199.#a175.#b155) *)
    let shallow : (t199, _) idx_mut = (.b199.#a175.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 809;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 809 failed %d" i;
  );

  (**************************************************)
  (*   t200 = { float#; #{ #{ float#; float } } }   *)
  (**************************************************)
  (* Deepening to (.a200) *)
  let idx : (t200, _) idx_mut = (.a200) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a200) *)
    let shallow : (t200, _) idx_mut = (.a200) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 810;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 810 failed %d" i;
  );
  (* Deepening to (.b200) *)
  let idx : (t200, _) idx_mut = (.b200) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b200) *)
    let shallow : (t200, _) idx_mut = (.b200) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 811;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 811 failed %d" i;
  );
  (* Deepening to (.b200.#a177) *)
  let idx : (t200, _) idx_mut = (.b200.#a177) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b200) *)
    let shallow : (t200, _) idx_mut = (.b200) in
    let deepened = (.idx_mut(shallow).#a177) in
    mark_test_run 812;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 812 failed %d" i;
    (* from (.b200.#a177) *)
    let shallow : (t200, _) idx_mut = (.b200.#a177) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 813;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 813 failed %d" i;
  );
  (* Deepening to (.b200.#a177.#a163) *)
  let idx : (t200, _) idx_mut = (.b200.#a177.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b200) *)
    let shallow : (t200, _) idx_mut = (.b200) in
    let deepened = (.idx_mut(shallow).#a177.#a163) in
    mark_test_run 814;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 814 failed %d" i;
    (* from (.b200.#a177) *)
    let shallow : (t200, _) idx_mut = (.b200.#a177) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 815;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 815 failed %d" i;
    (* from (.b200.#a177.#a163) *)
    let shallow : (t200, _) idx_mut = (.b200.#a177.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 816;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 816 failed %d" i;
  );
  (* Deepening to (.b200.#a177.#b163) *)
  let idx : (t200, _) idx_mut = (.b200.#a177.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b200) *)
    let shallow : (t200, _) idx_mut = (.b200) in
    let deepened = (.idx_mut(shallow).#a177.#b163) in
    mark_test_run 817;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 817 failed %d" i;
    (* from (.b200.#a177) *)
    let shallow : (t200, _) idx_mut = (.b200.#a177) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 818;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 818 failed %d" i;
    (* from (.b200.#a177.#b163) *)
    let shallow : (t200, _) idx_mut = (.b200.#a177.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 819;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 819 failed %d" i;
  );

  (***************************************************)
  (*   t201 = { float#; #{ #{ float#; float# } } }   *)
  (***************************************************)
  (* Deepening to (.a201) *)
  let idx : (t201, _) idx_mut = (.a201) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a201) *)
    let shallow : (t201, _) idx_mut = (.a201) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 820;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 820 failed %d" i;
  );
  (* Deepening to (.b201) *)
  let idx : (t201, _) idx_mut = (.b201) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b201) *)
    let shallow : (t201, _) idx_mut = (.b201) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 821;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 821 failed %d" i;
  );
  (* Deepening to (.b201.#a179) *)
  let idx : (t201, _) idx_mut = (.b201.#a179) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b201) *)
    let shallow : (t201, _) idx_mut = (.b201) in
    let deepened = (.idx_mut(shallow).#a179) in
    mark_test_run 822;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 822 failed %d" i;
    (* from (.b201.#a179) *)
    let shallow : (t201, _) idx_mut = (.b201.#a179) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 823;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 823 failed %d" i;
  );
  (* Deepening to (.b201.#a179.#a165) *)
  let idx : (t201, _) idx_mut = (.b201.#a179.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b201) *)
    let shallow : (t201, _) idx_mut = (.b201) in
    let deepened = (.idx_mut(shallow).#a179.#a165) in
    mark_test_run 824;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 824 failed %d" i;
    (* from (.b201.#a179) *)
    let shallow : (t201, _) idx_mut = (.b201.#a179) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 825;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 825 failed %d" i;
    (* from (.b201.#a179.#a165) *)
    let shallow : (t201, _) idx_mut = (.b201.#a179.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 826;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 826 failed %d" i;
  );
  (* Deepening to (.b201.#a179.#b165) *)
  let idx : (t201, _) idx_mut = (.b201.#a179.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b201) *)
    let shallow : (t201, _) idx_mut = (.b201) in
    let deepened = (.idx_mut(shallow).#a179.#b165) in
    mark_test_run 827;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 827 failed %d" i;
    (* from (.b201.#a179) *)
    let shallow : (t201, _) idx_mut = (.b201.#a179) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 828;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 828 failed %d" i;
    (* from (.b201.#a179.#b165) *)
    let shallow : (t201, _) idx_mut = (.b201.#a179.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 829;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 829 failed %d" i;
  );

  (***************************)
  (*   t202 = { int64x2# }   *)
  (***************************)
  (* Deepening to (.a202) *)
  let idx : (t202, _) idx_mut = (.a202) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a202) *)
    let shallow : (t202, _) idx_mut = (.a202) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 830;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 830 failed %d" i;
  );

  (********************************)
  (*   t203 = { int64x2#; int }   *)
  (********************************)
  (* Deepening to (.a203) *)
  let idx : (t203, _) idx_mut = (.a203) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a203) *)
    let shallow : (t203, _) idx_mut = (.a203) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 831;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 831 failed %d" i;
  );
  (* Deepening to (.b203) *)
  let idx : (t203, _) idx_mut = (.b203) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b203) *)
    let shallow : (t203, _) idx_mut = (.b203) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 832;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 832 failed %d" i;
  );

  (*************************************)
  (*   t204 = { int64x2#; int; int }   *)
  (*************************************)
  (* Deepening to (.a204) *)
  let idx : (t204, _) idx_mut = (.a204) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a204) *)
    let shallow : (t204, _) idx_mut = (.a204) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 833;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 833 failed %d" i;
  );
  (* Deepening to (.b204) *)
  let idx : (t204, _) idx_mut = (.b204) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b204) *)
    let shallow : (t204, _) idx_mut = (.b204) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 834;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 834 failed %d" i;
  );
  (* Deepening to (.c204) *)
  let idx : (t204, _) idx_mut = (.c204) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c204) *)
    let shallow : (t204, _) idx_mut = (.c204) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 835;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 835 failed %d" i;
  );

  (******************************************)
  (*   t205 = { int64x2#; int; int64x2# }   *)
  (******************************************)
  (* Deepening to (.a205) *)
  let idx : (t205, _) idx_mut = (.a205) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a205) *)
    let shallow : (t205, _) idx_mut = (.a205) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 836;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 836 failed %d" i;
  );
  (* Deepening to (.b205) *)
  let idx : (t205, _) idx_mut = (.b205) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b205) *)
    let shallow : (t205, _) idx_mut = (.b205) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 837;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 837 failed %d" i;
  );
  (* Deepening to (.c205) *)
  let idx : (t205, _) idx_mut = (.c205) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c205) *)
    let shallow : (t205, _) idx_mut = (.c205) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 838;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 838 failed %d" i;
  );

  (*************************************)
  (*   t206 = { int64x2#; int64x2# }   *)
  (*************************************)
  (* Deepening to (.a206) *)
  let idx : (t206, _) idx_mut = (.a206) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a206) *)
    let shallow : (t206, _) idx_mut = (.a206) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 839;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 839 failed %d" i;
  );
  (* Deepening to (.b206) *)
  let idx : (t206, _) idx_mut = (.b206) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b206) *)
    let shallow : (t206, _) idx_mut = (.b206) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 840;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 840 failed %d" i;
  );

  (******************************************)
  (*   t207 = { int64x2#; int64x2#; int }   *)
  (******************************************)
  (* Deepening to (.a207) *)
  let idx : (t207, _) idx_mut = (.a207) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a207) *)
    let shallow : (t207, _) idx_mut = (.a207) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 841;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 841 failed %d" i;
  );
  (* Deepening to (.b207) *)
  let idx : (t207, _) idx_mut = (.b207) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b207) *)
    let shallow : (t207, _) idx_mut = (.b207) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 842;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 842 failed %d" i;
  );
  (* Deepening to (.c207) *)
  let idx : (t207, _) idx_mut = (.c207) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c207) *)
    let shallow : (t207, _) idx_mut = (.c207) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 843;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 843 failed %d" i;
  );

  (***********************************************)
  (*   t208 = { int64x2#; int64x2#; int64x2# }   *)
  (***********************************************)
  (* Deepening to (.a208) *)
  let idx : (t208, _) idx_mut = (.a208) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a208) *)
    let shallow : (t208, _) idx_mut = (.a208) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 844;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 844 failed %d" i;
  );
  (* Deepening to (.b208) *)
  let idx : (t208, _) idx_mut = (.b208) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b208) *)
    let shallow : (t208, _) idx_mut = (.b208) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 845;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 845 failed %d" i;
  );
  (* Deepening to (.c208) *)
  let idx : (t208, _) idx_mut = (.c208) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.c208) *)
    let shallow : (t208, _) idx_mut = (.c208) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 846;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 846 failed %d" i;
  );

  (*************************************)
  (*   t209 = { int64x2#; #{ int } }   *)
  (*************************************)
  (* Deepening to (.a209) *)
  let idx : (t209, _) idx_mut = (.a209) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a209) *)
    let shallow : (t209, _) idx_mut = (.a209) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 847;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 847 failed %d" i;
  );
  (* Deepening to (.b209) *)
  let idx : (t209, _) idx_mut = (.b209) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b209) *)
    let shallow : (t209, _) idx_mut = (.b209) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 848;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 848 failed %d" i;
  );
  (* Deepening to (.b209.#a18) *)
  let idx : (t209, _) idx_mut = (.b209.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b209) *)
    let shallow : (t209, _) idx_mut = (.b209) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 849;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 849 failed %d" i;
    (* from (.b209.#a18) *)
    let shallow : (t209, _) idx_mut = (.b209.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 850;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 850 failed %d" i;
  );

  (******************************************)
  (*   t210 = { int64x2#; #{ int; int } }   *)
  (******************************************)
  (* Deepening to (.a210) *)
  let idx : (t210, _) idx_mut = (.a210) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a210) *)
    let shallow : (t210, _) idx_mut = (.a210) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 851;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 851 failed %d" i;
  );
  (* Deepening to (.b210) *)
  let idx : (t210, _) idx_mut = (.b210) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b210) *)
    let shallow : (t210, _) idx_mut = (.b210) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 852;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 852 failed %d" i;
  );
  (* Deepening to (.b210.#a20) *)
  let idx : (t210, _) idx_mut = (.b210.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b210) *)
    let shallow : (t210, _) idx_mut = (.b210) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 853;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 853 failed %d" i;
    (* from (.b210.#a20) *)
    let shallow : (t210, _) idx_mut = (.b210.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 854;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 854 failed %d" i;
  );
  (* Deepening to (.b210.#b20) *)
  let idx : (t210, _) idx_mut = (.b210.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b210) *)
    let shallow : (t210, _) idx_mut = (.b210) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 855;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 855 failed %d" i;
    (* from (.b210.#b20) *)
    let shallow : (t210, _) idx_mut = (.b210.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 856;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 856 failed %d" i;
  );

  (***********************************************)
  (*   t211 = { int64x2#; #{ int; int64x2# } }   *)
  (***********************************************)
  (* Deepening to (.a211) *)
  let idx : (t211, _) idx_mut = (.a211) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a211) *)
    let shallow : (t211, _) idx_mut = (.a211) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 857;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 857 failed %d" i;
  );
  (* Deepening to (.b211) *)
  let idx : (t211, _) idx_mut = (.b211) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b211) *)
    let shallow : (t211, _) idx_mut = (.b211) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 858;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 858 failed %d" i;
  );
  (* Deepening to (.b211.#a26) *)
  let idx : (t211, _) idx_mut = (.b211.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b211) *)
    let shallow : (t211, _) idx_mut = (.b211) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 859;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 859 failed %d" i;
    (* from (.b211.#a26) *)
    let shallow : (t211, _) idx_mut = (.b211.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 860;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 860 failed %d" i;
  );
  (* Deepening to (.b211.#b26) *)
  let idx : (t211, _) idx_mut = (.b211.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b211) *)
    let shallow : (t211, _) idx_mut = (.b211) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 861;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 861 failed %d" i;
    (* from (.b211.#b26) *)
    let shallow : (t211, _) idx_mut = (.b211.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 862;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 862 failed %d" i;
  );

  (***********************************************)
  (*   t212 = { int64x2#; #{ int; #{ int } } }   *)
  (***********************************************)
  (* Deepening to (.a212) *)
  let idx : (t212, _) idx_mut = (.a212) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a212) *)
    let shallow : (t212, _) idx_mut = (.a212) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 863;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 863 failed %d" i;
  );
  (* Deepening to (.b212) *)
  let idx : (t212, _) idx_mut = (.b212) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b212) *)
    let shallow : (t212, _) idx_mut = (.b212) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 864;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 864 failed %d" i;
  );
  (* Deepening to (.b212.#a28) *)
  let idx : (t212, _) idx_mut = (.b212.#a28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b212) *)
    let shallow : (t212, _) idx_mut = (.b212) in
    let deepened = (.idx_mut(shallow).#a28) in
    mark_test_run 865;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 865 failed %d" i;
    (* from (.b212.#a28) *)
    let shallow : (t212, _) idx_mut = (.b212.#a28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 866;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 866 failed %d" i;
  );
  (* Deepening to (.b212.#b28) *)
  let idx : (t212, _) idx_mut = (.b212.#b28) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b212) *)
    let shallow : (t212, _) idx_mut = (.b212) in
    let deepened = (.idx_mut(shallow).#b28) in
    mark_test_run 867;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 867 failed %d" i;
    (* from (.b212.#b28) *)
    let shallow : (t212, _) idx_mut = (.b212.#b28) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 868;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 868 failed %d" i;
  );
  (* Deepening to (.b212.#b28.#a18) *)
  let idx : (t212, _) idx_mut = (.b212.#b28.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b212) *)
    let shallow : (t212, _) idx_mut = (.b212) in
    let deepened = (.idx_mut(shallow).#b28.#a18) in
    mark_test_run 869;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 869 failed %d" i;
    (* from (.b212.#b28) *)
    let shallow : (t212, _) idx_mut = (.b212.#b28) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 870;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 870 failed %d" i;
    (* from (.b212.#b28.#a18) *)
    let shallow : (t212, _) idx_mut = (.b212.#b28.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 871;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 871 failed %d" i;
  );

  (****************************************************)
  (*   t213 = { int64x2#; #{ int; #{ int64x2# } } }   *)
  (****************************************************)
  (* Deepening to (.a213) *)
  let idx : (t213, _) idx_mut = (.a213) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a213) *)
    let shallow : (t213, _) idx_mut = (.a213) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 872;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 872 failed %d" i;
  );
  (* Deepening to (.b213) *)
  let idx : (t213, _) idx_mut = (.b213) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b213) *)
    let shallow : (t213, _) idx_mut = (.b213) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 873;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 873 failed %d" i;
  );
  (* Deepening to (.b213.#a37) *)
  let idx : (t213, _) idx_mut = (.b213.#a37) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b213) *)
    let shallow : (t213, _) idx_mut = (.b213) in
    let deepened = (.idx_mut(shallow).#a37) in
    mark_test_run 874;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 874 failed %d" i;
    (* from (.b213.#a37) *)
    let shallow : (t213, _) idx_mut = (.b213.#a37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 875;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 875 failed %d" i;
  );
  (* Deepening to (.b213.#b37) *)
  let idx : (t213, _) idx_mut = (.b213.#b37) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b213) *)
    let shallow : (t213, _) idx_mut = (.b213) in
    let deepened = (.idx_mut(shallow).#b37) in
    mark_test_run 876;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 876 failed %d" i;
    (* from (.b213.#b37) *)
    let shallow : (t213, _) idx_mut = (.b213.#b37) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 877;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 877 failed %d" i;
  );
  (* Deepening to (.b213.#b37.#a36) *)
  let idx : (t213, _) idx_mut = (.b213.#b37.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b213) *)
    let shallow : (t213, _) idx_mut = (.b213) in
    let deepened = (.idx_mut(shallow).#b37.#a36) in
    mark_test_run 878;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 878 failed %d" i;
    (* from (.b213.#b37) *)
    let shallow : (t213, _) idx_mut = (.b213.#b37) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 879;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 879 failed %d" i;
    (* from (.b213.#b37.#a36) *)
    let shallow : (t213, _) idx_mut = (.b213.#b37.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 880;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 880 failed %d" i;
  );

  (************************************************)
  (*   t215 = { int64x2#; #{ string; float# } }   *)
  (************************************************)
  (* Deepening to (.a215) *)
  let idx : (t215, _) idx_mut = (.a215) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a215) *)
    let shallow : (t215, _) idx_mut = (.a215) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 881;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 881 failed %d" i;
  );
  (* Deepening to (.b215) *)
  let idx : (t215, _) idx_mut = (.b215) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b215) *)
    let shallow : (t215, _) idx_mut = (.b215) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 882;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 882 failed %d" i;
  );
  (* Deepening to (.b215.#a214) *)
  let idx : (t215, _) idx_mut = (.b215.#a214) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b215) *)
    let shallow : (t215, _) idx_mut = (.b215) in
    let deepened = (.idx_mut(shallow).#a214) in
    mark_test_run 883;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 883 failed %d" i;
    (* from (.b215.#a214) *)
    let shallow : (t215, _) idx_mut = (.b215.#a214) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 884;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 884 failed %d" i;
  );
  (* Deepening to (.b215.#b214) *)
  let idx : (t215, _) idx_mut = (.b215.#b214) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b215) *)
    let shallow : (t215, _) idx_mut = (.b215) in
    let deepened = (.idx_mut(shallow).#b214) in
    mark_test_run 885;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 885 failed %d" i;
    (* from (.b215.#b214) *)
    let shallow : (t215, _) idx_mut = (.b215.#b214) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 886;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 886 failed %d" i;
  );

  (******************************************)
  (*   t216 = { int64x2#; #{ int64x2# } }   *)
  (******************************************)
  (* Deepening to (.a216) *)
  let idx : (t216, _) idx_mut = (.a216) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a216) *)
    let shallow : (t216, _) idx_mut = (.a216) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 887;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 887 failed %d" i;
  );
  (* Deepening to (.b216) *)
  let idx : (t216, _) idx_mut = (.b216) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b216) *)
    let shallow : (t216, _) idx_mut = (.b216) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 888;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 888 failed %d" i;
  );
  (* Deepening to (.b216.#a36) *)
  let idx : (t216, _) idx_mut = (.b216.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b216) *)
    let shallow : (t216, _) idx_mut = (.b216) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 889;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 889 failed %d" i;
    (* from (.b216.#a36) *)
    let shallow : (t216, _) idx_mut = (.b216.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 890;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 890 failed %d" i;
  );

  (***********************************************)
  (*   t217 = { int64x2#; #{ int64x2#; int } }   *)
  (***********************************************)
  (* Deepening to (.a217) *)
  let idx : (t217, _) idx_mut = (.a217) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a217) *)
    let shallow : (t217, _) idx_mut = (.a217) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 891;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 891 failed %d" i;
  );
  (* Deepening to (.b217) *)
  let idx : (t217, _) idx_mut = (.b217) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b217) *)
    let shallow : (t217, _) idx_mut = (.b217) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 892;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 892 failed %d" i;
  );
  (* Deepening to (.b217.#a58) *)
  let idx : (t217, _) idx_mut = (.b217.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b217) *)
    let shallow : (t217, _) idx_mut = (.b217) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 893;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 893 failed %d" i;
    (* from (.b217.#a58) *)
    let shallow : (t217, _) idx_mut = (.b217.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 894;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 894 failed %d" i;
  );
  (* Deepening to (.b217.#b58) *)
  let idx : (t217, _) idx_mut = (.b217.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b217) *)
    let shallow : (t217, _) idx_mut = (.b217) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 895;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 895 failed %d" i;
    (* from (.b217.#b58) *)
    let shallow : (t217, _) idx_mut = (.b217.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 896;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 896 failed %d" i;
  );

  (****************************************************)
  (*   t218 = { int64x2#; #{ int64x2#; int64x2# } }   *)
  (****************************************************)
  (* Deepening to (.a218) *)
  let idx : (t218, _) idx_mut = (.a218) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a218) *)
    let shallow : (t218, _) idx_mut = (.a218) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 897;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 897 failed %d" i;
  );
  (* Deepening to (.b218) *)
  let idx : (t218, _) idx_mut = (.b218) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b218) *)
    let shallow : (t218, _) idx_mut = (.b218) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 898;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 898 failed %d" i;
  );
  (* Deepening to (.b218.#a60) *)
  let idx : (t218, _) idx_mut = (.b218.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b218) *)
    let shallow : (t218, _) idx_mut = (.b218) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 899;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 899 failed %d" i;
    (* from (.b218.#a60) *)
    let shallow : (t218, _) idx_mut = (.b218.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 900;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 900 failed %d" i;
  );
  (* Deepening to (.b218.#b60) *)
  let idx : (t218, _) idx_mut = (.b218.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b218) *)
    let shallow : (t218, _) idx_mut = (.b218) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 901;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 901 failed %d" i;
    (* from (.b218.#b60) *)
    let shallow : (t218, _) idx_mut = (.b218.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 902;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 902 failed %d" i;
  );

  (****************************************************)
  (*   t219 = { int64x2#; #{ int64x2#; #{ int } } }   *)
  (****************************************************)
  (* Deepening to (.a219) *)
  let idx : (t219, _) idx_mut = (.a219) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a219) *)
    let shallow : (t219, _) idx_mut = (.a219) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 903;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 903 failed %d" i;
  );
  (* Deepening to (.b219) *)
  let idx : (t219, _) idx_mut = (.b219) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b219) *)
    let shallow : (t219, _) idx_mut = (.b219) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 904;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 904 failed %d" i;
  );
  (* Deepening to (.b219.#a62) *)
  let idx : (t219, _) idx_mut = (.b219.#a62) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b219) *)
    let shallow : (t219, _) idx_mut = (.b219) in
    let deepened = (.idx_mut(shallow).#a62) in
    mark_test_run 905;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 905 failed %d" i;
    (* from (.b219.#a62) *)
    let shallow : (t219, _) idx_mut = (.b219.#a62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 906;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 906 failed %d" i;
  );
  (* Deepening to (.b219.#b62) *)
  let idx : (t219, _) idx_mut = (.b219.#b62) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b219) *)
    let shallow : (t219, _) idx_mut = (.b219) in
    let deepened = (.idx_mut(shallow).#b62) in
    mark_test_run 907;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 907 failed %d" i;
    (* from (.b219.#b62) *)
    let shallow : (t219, _) idx_mut = (.b219.#b62) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 908;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 908 failed %d" i;
  );
  (* Deepening to (.b219.#b62.#a18) *)
  let idx : (t219, _) idx_mut = (.b219.#b62.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b219) *)
    let shallow : (t219, _) idx_mut = (.b219) in
    let deepened = (.idx_mut(shallow).#b62.#a18) in
    mark_test_run 909;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 909 failed %d" i;
    (* from (.b219.#b62) *)
    let shallow : (t219, _) idx_mut = (.b219.#b62) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 910;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 910 failed %d" i;
    (* from (.b219.#b62.#a18) *)
    let shallow : (t219, _) idx_mut = (.b219.#b62.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 911;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 911 failed %d" i;
  );

  (*********************************************************)
  (*   t220 = { int64x2#; #{ int64x2#; #{ int64x2# } } }   *)
  (*********************************************************)
  (* Deepening to (.a220) *)
  let idx : (t220, _) idx_mut = (.a220) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a220) *)
    let shallow : (t220, _) idx_mut = (.a220) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 912;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 912 failed %d" i;
  );
  (* Deepening to (.b220) *)
  let idx : (t220, _) idx_mut = (.b220) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b220) *)
    let shallow : (t220, _) idx_mut = (.b220) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 913;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 913 failed %d" i;
  );
  (* Deepening to (.b220.#a64) *)
  let idx : (t220, _) idx_mut = (.b220.#a64) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b220) *)
    let shallow : (t220, _) idx_mut = (.b220) in
    let deepened = (.idx_mut(shallow).#a64) in
    mark_test_run 914;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 914 failed %d" i;
    (* from (.b220.#a64) *)
    let shallow : (t220, _) idx_mut = (.b220.#a64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 915;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 915 failed %d" i;
  );
  (* Deepening to (.b220.#b64) *)
  let idx : (t220, _) idx_mut = (.b220.#b64) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b220) *)
    let shallow : (t220, _) idx_mut = (.b220) in
    let deepened = (.idx_mut(shallow).#b64) in
    mark_test_run 916;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 916 failed %d" i;
    (* from (.b220.#b64) *)
    let shallow : (t220, _) idx_mut = (.b220.#b64) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 917;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 917 failed %d" i;
  );
  (* Deepening to (.b220.#b64.#a36) *)
  let idx : (t220, _) idx_mut = (.b220.#b64.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b220) *)
    let shallow : (t220, _) idx_mut = (.b220) in
    let deepened = (.idx_mut(shallow).#b64.#a36) in
    mark_test_run 918;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 918 failed %d" i;
    (* from (.b220.#b64) *)
    let shallow : (t220, _) idx_mut = (.b220.#b64) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 919;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 919 failed %d" i;
    (* from (.b220.#b64.#a36) *)
    let shallow : (t220, _) idx_mut = (.b220.#b64.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 920;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 920 failed %d" i;
  );

  (***********************************************)
  (*   t221 = { int64x2#; #{ #{ int; int } } }   *)
  (***********************************************)
  (* Deepening to (.a221) *)
  let idx : (t221, _) idx_mut = (.a221) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a221) *)
    let shallow : (t221, _) idx_mut = (.a221) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 921;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 921 failed %d" i;
  );
  (* Deepening to (.b221) *)
  let idx : (t221, _) idx_mut = (.b221) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b221) *)
    let shallow : (t221, _) idx_mut = (.b221) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 922;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 922 failed %d" i;
  );
  (* Deepening to (.b221.#a66) *)
  let idx : (t221, _) idx_mut = (.b221.#a66) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b221) *)
    let shallow : (t221, _) idx_mut = (.b221) in
    let deepened = (.idx_mut(shallow).#a66) in
    mark_test_run 923;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 923 failed %d" i;
    (* from (.b221.#a66) *)
    let shallow : (t221, _) idx_mut = (.b221.#a66) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 924;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 924 failed %d" i;
  );
  (* Deepening to (.b221.#a66.#a20) *)
  let idx : (t221, _) idx_mut = (.b221.#a66.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b221) *)
    let shallow : (t221, _) idx_mut = (.b221) in
    let deepened = (.idx_mut(shallow).#a66.#a20) in
    mark_test_run 925;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 925 failed %d" i;
    (* from (.b221.#a66) *)
    let shallow : (t221, _) idx_mut = (.b221.#a66) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 926;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 926 failed %d" i;
    (* from (.b221.#a66.#a20) *)
    let shallow : (t221, _) idx_mut = (.b221.#a66.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 927;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 927 failed %d" i;
  );
  (* Deepening to (.b221.#a66.#b20) *)
  let idx : (t221, _) idx_mut = (.b221.#a66.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b221) *)
    let shallow : (t221, _) idx_mut = (.b221) in
    let deepened = (.idx_mut(shallow).#a66.#b20) in
    mark_test_run 928;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 928 failed %d" i;
    (* from (.b221.#a66) *)
    let shallow : (t221, _) idx_mut = (.b221.#a66) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 929;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 929 failed %d" i;
    (* from (.b221.#a66.#b20) *)
    let shallow : (t221, _) idx_mut = (.b221.#a66.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 930;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 930 failed %d" i;
  );

  (****************************************************)
  (*   t222 = { int64x2#; #{ #{ int; int64x2# } } }   *)
  (****************************************************)
  (* Deepening to (.a222) *)
  let idx : (t222, _) idx_mut = (.a222) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a222) *)
    let shallow : (t222, _) idx_mut = (.a222) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 931;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 931 failed %d" i;
  );
  (* Deepening to (.b222) *)
  let idx : (t222, _) idx_mut = (.b222) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b222) *)
    let shallow : (t222, _) idx_mut = (.b222) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 932;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 932 failed %d" i;
  );
  (* Deepening to (.b222.#a72) *)
  let idx : (t222, _) idx_mut = (.b222.#a72) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b222) *)
    let shallow : (t222, _) idx_mut = (.b222) in
    let deepened = (.idx_mut(shallow).#a72) in
    mark_test_run 933;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 933 failed %d" i;
    (* from (.b222.#a72) *)
    let shallow : (t222, _) idx_mut = (.b222.#a72) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 934;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 934 failed %d" i;
  );
  (* Deepening to (.b222.#a72.#a26) *)
  let idx : (t222, _) idx_mut = (.b222.#a72.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b222) *)
    let shallow : (t222, _) idx_mut = (.b222) in
    let deepened = (.idx_mut(shallow).#a72.#a26) in
    mark_test_run 935;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 935 failed %d" i;
    (* from (.b222.#a72) *)
    let shallow : (t222, _) idx_mut = (.b222.#a72) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 936;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 936 failed %d" i;
    (* from (.b222.#a72.#a26) *)
    let shallow : (t222, _) idx_mut = (.b222.#a72.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 937;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 937 failed %d" i;
  );
  (* Deepening to (.b222.#a72.#b26) *)
  let idx : (t222, _) idx_mut = (.b222.#a72.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b222) *)
    let shallow : (t222, _) idx_mut = (.b222) in
    let deepened = (.idx_mut(shallow).#a72.#b26) in
    mark_test_run 938;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 938 failed %d" i;
    (* from (.b222.#a72) *)
    let shallow : (t222, _) idx_mut = (.b222.#a72) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 939;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 939 failed %d" i;
    (* from (.b222.#a72.#b26) *)
    let shallow : (t222, _) idx_mut = (.b222.#a72.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 940;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 940 failed %d" i;
  );

  (****************************************************)
  (*   t223 = { int64x2#; #{ #{ int64x2#; int } } }   *)
  (****************************************************)
  (* Deepening to (.a223) *)
  let idx : (t223, _) idx_mut = (.a223) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a223) *)
    let shallow : (t223, _) idx_mut = (.a223) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 941;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 941 failed %d" i;
  );
  (* Deepening to (.b223) *)
  let idx : (t223, _) idx_mut = (.b223) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b223) *)
    let shallow : (t223, _) idx_mut = (.b223) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 942;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 942 failed %d" i;
  );
  (* Deepening to (.b223.#a82) *)
  let idx : (t223, _) idx_mut = (.b223.#a82) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b223) *)
    let shallow : (t223, _) idx_mut = (.b223) in
    let deepened = (.idx_mut(shallow).#a82) in
    mark_test_run 943;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 943 failed %d" i;
    (* from (.b223.#a82) *)
    let shallow : (t223, _) idx_mut = (.b223.#a82) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 944;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 944 failed %d" i;
  );
  (* Deepening to (.b223.#a82.#a58) *)
  let idx : (t223, _) idx_mut = (.b223.#a82.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b223) *)
    let shallow : (t223, _) idx_mut = (.b223) in
    let deepened = (.idx_mut(shallow).#a82.#a58) in
    mark_test_run 945;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 945 failed %d" i;
    (* from (.b223.#a82) *)
    let shallow : (t223, _) idx_mut = (.b223.#a82) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 946;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 946 failed %d" i;
    (* from (.b223.#a82.#a58) *)
    let shallow : (t223, _) idx_mut = (.b223.#a82.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 947;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 947 failed %d" i;
  );
  (* Deepening to (.b223.#a82.#b58) *)
  let idx : (t223, _) idx_mut = (.b223.#a82.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b223) *)
    let shallow : (t223, _) idx_mut = (.b223) in
    let deepened = (.idx_mut(shallow).#a82.#b58) in
    mark_test_run 948;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 948 failed %d" i;
    (* from (.b223.#a82) *)
    let shallow : (t223, _) idx_mut = (.b223.#a82) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 949;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 949 failed %d" i;
    (* from (.b223.#a82.#b58) *)
    let shallow : (t223, _) idx_mut = (.b223.#a82.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 950;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 950 failed %d" i;
  );

  (*********************************************************)
  (*   t224 = { int64x2#; #{ #{ int64x2#; int64x2# } } }   *)
  (*********************************************************)
  (* Deepening to (.a224) *)
  let idx : (t224, _) idx_mut = (.a224) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a224) *)
    let shallow : (t224, _) idx_mut = (.a224) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 951;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 951 failed %d" i;
  );
  (* Deepening to (.b224) *)
  let idx : (t224, _) idx_mut = (.b224) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b224) *)
    let shallow : (t224, _) idx_mut = (.b224) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 952;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 952 failed %d" i;
  );
  (* Deepening to (.b224.#a84) *)
  let idx : (t224, _) idx_mut = (.b224.#a84) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b224) *)
    let shallow : (t224, _) idx_mut = (.b224) in
    let deepened = (.idx_mut(shallow).#a84) in
    mark_test_run 953;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 953 failed %d" i;
    (* from (.b224.#a84) *)
    let shallow : (t224, _) idx_mut = (.b224.#a84) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 954;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 954 failed %d" i;
  );
  (* Deepening to (.b224.#a84.#a60) *)
  let idx : (t224, _) idx_mut = (.b224.#a84.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b224) *)
    let shallow : (t224, _) idx_mut = (.b224) in
    let deepened = (.idx_mut(shallow).#a84.#a60) in
    mark_test_run 955;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 955 failed %d" i;
    (* from (.b224.#a84) *)
    let shallow : (t224, _) idx_mut = (.b224.#a84) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 956;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 956 failed %d" i;
    (* from (.b224.#a84.#a60) *)
    let shallow : (t224, _) idx_mut = (.b224.#a84.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 957;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 957 failed %d" i;
  );
  (* Deepening to (.b224.#a84.#b60) *)
  let idx : (t224, _) idx_mut = (.b224.#a84.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b224) *)
    let shallow : (t224, _) idx_mut = (.b224) in
    let deepened = (.idx_mut(shallow).#a84.#b60) in
    mark_test_run 958;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 958 failed %d" i;
    (* from (.b224.#a84) *)
    let shallow : (t224, _) idx_mut = (.b224.#a84) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 959;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 959 failed %d" i;
    (* from (.b224.#a84.#b60) *)
    let shallow : (t224, _) idx_mut = (.b224.#a84.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 960;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 960 failed %d" i;
  );

  (***************************)
  (*   t225 = { #{ int } }   *)
  (***************************)
  (* Deepening to (.a225) *)
  let idx : (t225, _) idx_mut = (.a225) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a225) *)
    let shallow : (t225, _) idx_mut = (.a225) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 961;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 961 failed %d" i;
  );
  (* Deepening to (.a225.#a18) *)
  let idx : (t225, _) idx_mut = (.a225.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a225) *)
    let shallow : (t225, _) idx_mut = (.a225) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 962;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 962 failed %d" i;
    (* from (.a225.#a18) *)
    let shallow : (t225, _) idx_mut = (.a225.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 963;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 963 failed %d" i;
  );

  (********************************)
  (*   t226 = { #{ int }; int }   *)
  (********************************)
  (* Deepening to (.a226) *)
  let idx : (t226, _) idx_mut = (.a226) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a226) *)
    let shallow : (t226, _) idx_mut = (.a226) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 964;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 964 failed %d" i;
  );
  (* Deepening to (.a226.#a18) *)
  let idx : (t226, _) idx_mut = (.a226.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a226) *)
    let shallow : (t226, _) idx_mut = (.a226) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 965;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 965 failed %d" i;
    (* from (.a226.#a18) *)
    let shallow : (t226, _) idx_mut = (.a226.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 966;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 966 failed %d" i;
  );
  (* Deepening to (.b226) *)
  let idx : (t226, _) idx_mut = (.b226) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b226) *)
    let shallow : (t226, _) idx_mut = (.b226) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 967;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 967 failed %d" i;
  );

  (***********************************)
  (*   t227 = { #{ int }; int32# }   *)
  (***********************************)
  (* Deepening to (.a227) *)
  let idx : (t227, _) idx_mut = (.a227) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a227) *)
    let shallow : (t227, _) idx_mut = (.a227) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 968;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 968 failed %d" i;
  );
  (* Deepening to (.a227.#a18) *)
  let idx : (t227, _) idx_mut = (.a227.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a227) *)
    let shallow : (t227, _) idx_mut = (.a227) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 969;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 969 failed %d" i;
    (* from (.a227.#a18) *)
    let shallow : (t227, _) idx_mut = (.a227.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 970;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 970 failed %d" i;
  );
  (* Deepening to (.b227) *)
  let idx : (t227, _) idx_mut = (.b227) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b227) *)
    let shallow : (t227, _) idx_mut = (.b227) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 971;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 971 failed %d" i;
  );

  (**********************************)
  (*   t228 = { #{ int }; float }   *)
  (**********************************)
  (* Deepening to (.a228) *)
  let idx : (t228, _) idx_mut = (.a228) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a228) *)
    let shallow : (t228, _) idx_mut = (.a228) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 972;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 972 failed %d" i;
  );
  (* Deepening to (.a228.#a18) *)
  let idx : (t228, _) idx_mut = (.a228.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a228) *)
    let shallow : (t228, _) idx_mut = (.a228) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 973;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 973 failed %d" i;
    (* from (.a228.#a18) *)
    let shallow : (t228, _) idx_mut = (.a228.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 974;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 974 failed %d" i;
  );
  (* Deepening to (.b228) *)
  let idx : (t228, _) idx_mut = (.b228) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b228) *)
    let shallow : (t228, _) idx_mut = (.b228) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 975;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 975 failed %d" i;
  );

  (*************************************)
  (*   t229 = { #{ int }; int64x2# }   *)
  (*************************************)
  (* Deepening to (.a229) *)
  let idx : (t229, _) idx_mut = (.a229) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a229) *)
    let shallow : (t229, _) idx_mut = (.a229) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 976;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 976 failed %d" i;
  );
  (* Deepening to (.a229.#a18) *)
  let idx : (t229, _) idx_mut = (.a229.#a18) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a229) *)
    let shallow : (t229, _) idx_mut = (.a229) in
    let deepened = (.idx_mut(shallow).#a18) in
    mark_test_run 977;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 977 failed %d" i;
    (* from (.a229.#a18) *)
    let shallow : (t229, _) idx_mut = (.a229.#a18) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 978;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 978 failed %d" i;
  );
  (* Deepening to (.b229) *)
  let idx : (t229, _) idx_mut = (.b229) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b229) *)
    let shallow : (t229, _) idx_mut = (.b229) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 979;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 979 failed %d" i;
  );

  (********************************)
  (*   t230 = { #{ int; int } }   *)
  (********************************)
  (* Deepening to (.a230) *)
  let idx : (t230, _) idx_mut = (.a230) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a230) *)
    let shallow : (t230, _) idx_mut = (.a230) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 980;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 980 failed %d" i;
  );
  (* Deepening to (.a230.#a20) *)
  let idx : (t230, _) idx_mut = (.a230.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a230) *)
    let shallow : (t230, _) idx_mut = (.a230) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 981;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 981 failed %d" i;
    (* from (.a230.#a20) *)
    let shallow : (t230, _) idx_mut = (.a230.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 982;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 982 failed %d" i;
  );
  (* Deepening to (.a230.#b20) *)
  let idx : (t230, _) idx_mut = (.a230.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a230) *)
    let shallow : (t230, _) idx_mut = (.a230) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 983;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 983 failed %d" i;
    (* from (.a230.#b20) *)
    let shallow : (t230, _) idx_mut = (.a230.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 984;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 984 failed %d" i;
  );

  (*************************************)
  (*   t231 = { #{ int; int }; int }   *)
  (*************************************)
  (* Deepening to (.a231) *)
  let idx : (t231, _) idx_mut = (.a231) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a231) *)
    let shallow : (t231, _) idx_mut = (.a231) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 985;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 985 failed %d" i;
  );
  (* Deepening to (.a231.#a20) *)
  let idx : (t231, _) idx_mut = (.a231.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a231) *)
    let shallow : (t231, _) idx_mut = (.a231) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 986;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 986 failed %d" i;
    (* from (.a231.#a20) *)
    let shallow : (t231, _) idx_mut = (.a231.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 987;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 987 failed %d" i;
  );
  (* Deepening to (.a231.#b20) *)
  let idx : (t231, _) idx_mut = (.a231.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a231) *)
    let shallow : (t231, _) idx_mut = (.a231) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 988;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 988 failed %d" i;
    (* from (.a231.#b20) *)
    let shallow : (t231, _) idx_mut = (.a231.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 989;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 989 failed %d" i;
  );
  (* Deepening to (.b231) *)
  let idx : (t231, _) idx_mut = (.b231) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b231) *)
    let shallow : (t231, _) idx_mut = (.b231) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 990;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 990 failed %d" i;
  );

  (****************************************)
  (*   t232 = { #{ int; int }; int32# }   *)
  (****************************************)
  (* Deepening to (.a232) *)
  let idx : (t232, _) idx_mut = (.a232) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a232) *)
    let shallow : (t232, _) idx_mut = (.a232) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 991;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 991 failed %d" i;
  );
  (* Deepening to (.a232.#a20) *)
  let idx : (t232, _) idx_mut = (.a232.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a232) *)
    let shallow : (t232, _) idx_mut = (.a232) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 992;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 992 failed %d" i;
    (* from (.a232.#a20) *)
    let shallow : (t232, _) idx_mut = (.a232.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 993;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 993 failed %d" i;
  );
  (* Deepening to (.a232.#b20) *)
  let idx : (t232, _) idx_mut = (.a232.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a232) *)
    let shallow : (t232, _) idx_mut = (.a232) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 994;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 994 failed %d" i;
    (* from (.a232.#b20) *)
    let shallow : (t232, _) idx_mut = (.a232.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 995;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 995 failed %d" i;
  );
  (* Deepening to (.b232) *)
  let idx : (t232, _) idx_mut = (.b232) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b232) *)
    let shallow : (t232, _) idx_mut = (.b232) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 996;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 996 failed %d" i;
  );

  (***************************************)
  (*   t233 = { #{ int; int }; float }   *)
  (***************************************)
  (* Deepening to (.a233) *)
  let idx : (t233, _) idx_mut = (.a233) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a233) *)
    let shallow : (t233, _) idx_mut = (.a233) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 997;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 997 failed %d" i;
  );
  (* Deepening to (.a233.#a20) *)
  let idx : (t233, _) idx_mut = (.a233.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a233) *)
    let shallow : (t233, _) idx_mut = (.a233) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 998;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 998 failed %d" i;
    (* from (.a233.#a20) *)
    let shallow : (t233, _) idx_mut = (.a233.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 999;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 999 failed %d" i;
  );
  (* Deepening to (.a233.#b20) *)
  let idx : (t233, _) idx_mut = (.a233.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a233) *)
    let shallow : (t233, _) idx_mut = (.a233) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1000;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1000 failed %d" i;
    (* from (.a233.#b20) *)
    let shallow : (t233, _) idx_mut = (.a233.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1001;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1001 failed %d" i;
  );
  (* Deepening to (.b233) *)
  let idx : (t233, _) idx_mut = (.b233) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b233) *)
    let shallow : (t233, _) idx_mut = (.b233) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1002;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1002 failed %d" i;
  );

  (******************************************)
  (*   t234 = { #{ int; int }; int64x2# }   *)
  (******************************************)
  (* Deepening to (.a234) *)
  let idx : (t234, _) idx_mut = (.a234) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a234) *)
    let shallow : (t234, _) idx_mut = (.a234) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1003;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1003 failed %d" i;
  );
  (* Deepening to (.a234.#a20) *)
  let idx : (t234, _) idx_mut = (.a234.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a234) *)
    let shallow : (t234, _) idx_mut = (.a234) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1004;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1004 failed %d" i;
    (* from (.a234.#a20) *)
    let shallow : (t234, _) idx_mut = (.a234.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1005;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1005 failed %d" i;
  );
  (* Deepening to (.a234.#b20) *)
  let idx : (t234, _) idx_mut = (.a234.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a234) *)
    let shallow : (t234, _) idx_mut = (.a234) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1006;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1006 failed %d" i;
    (* from (.a234.#b20) *)
    let shallow : (t234, _) idx_mut = (.a234.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1007;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1007 failed %d" i;
  );
  (* Deepening to (.b234) *)
  let idx : (t234, _) idx_mut = (.b234) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b234) *)
    let shallow : (t234, _) idx_mut = (.b234) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1008;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1008 failed %d" i;
  );

  (***********************************)
  (*   t235 = { #{ int; int32# } }   *)
  (***********************************)
  (* Deepening to (.a235) *)
  let idx : (t235, _) idx_mut = (.a235) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a235) *)
    let shallow : (t235, _) idx_mut = (.a235) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1009;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1009 failed %d" i;
  );
  (* Deepening to (.a235.#a22) *)
  let idx : (t235, _) idx_mut = (.a235.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a235) *)
    let shallow : (t235, _) idx_mut = (.a235) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1010;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1010 failed %d" i;
    (* from (.a235.#a22) *)
    let shallow : (t235, _) idx_mut = (.a235.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1011;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1011 failed %d" i;
  );
  (* Deepening to (.a235.#b22) *)
  let idx : (t235, _) idx_mut = (.a235.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a235) *)
    let shallow : (t235, _) idx_mut = (.a235) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1012;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1012 failed %d" i;
    (* from (.a235.#b22) *)
    let shallow : (t235, _) idx_mut = (.a235.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1013;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1013 failed %d" i;
  );

  (****************************************)
  (*   t236 = { #{ int; int32# }; int }   *)
  (****************************************)
  (* Deepening to (.a236) *)
  let idx : (t236, _) idx_mut = (.a236) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a236) *)
    let shallow : (t236, _) idx_mut = (.a236) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1014;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1014 failed %d" i;
  );
  (* Deepening to (.a236.#a22) *)
  let idx : (t236, _) idx_mut = (.a236.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a236) *)
    let shallow : (t236, _) idx_mut = (.a236) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1015;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1015 failed %d" i;
    (* from (.a236.#a22) *)
    let shallow : (t236, _) idx_mut = (.a236.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1016;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1016 failed %d" i;
  );
  (* Deepening to (.a236.#b22) *)
  let idx : (t236, _) idx_mut = (.a236.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a236) *)
    let shallow : (t236, _) idx_mut = (.a236) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1017;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1017 failed %d" i;
    (* from (.a236.#b22) *)
    let shallow : (t236, _) idx_mut = (.a236.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1018;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1018 failed %d" i;
  );
  (* Deepening to (.b236) *)
  let idx : (t236, _) idx_mut = (.b236) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b236) *)
    let shallow : (t236, _) idx_mut = (.b236) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1019;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1019 failed %d" i;
  );

  (*******************************************)
  (*   t237 = { #{ int; int32# }; int32# }   *)
  (*******************************************)
  (* Deepening to (.a237) *)
  let idx : (t237, _) idx_mut = (.a237) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a237) *)
    let shallow : (t237, _) idx_mut = (.a237) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1020;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1020 failed %d" i;
  );
  (* Deepening to (.a237.#a22) *)
  let idx : (t237, _) idx_mut = (.a237.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a237) *)
    let shallow : (t237, _) idx_mut = (.a237) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1021;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1021 failed %d" i;
    (* from (.a237.#a22) *)
    let shallow : (t237, _) idx_mut = (.a237.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1022;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1022 failed %d" i;
  );
  (* Deepening to (.a237.#b22) *)
  let idx : (t237, _) idx_mut = (.a237.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a237) *)
    let shallow : (t237, _) idx_mut = (.a237) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1023;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1023 failed %d" i;
    (* from (.a237.#b22) *)
    let shallow : (t237, _) idx_mut = (.a237.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1024;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1024 failed %d" i;
  );
  (* Deepening to (.b237) *)
  let idx : (t237, _) idx_mut = (.b237) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b237) *)
    let shallow : (t237, _) idx_mut = (.b237) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1025;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1025 failed %d" i;
  );

  (**********************************)
  (*   t238 = { #{ int; float } }   *)
  (**********************************)
  (* Deepening to (.a238) *)
  let idx : (t238, _) idx_mut = (.a238) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a238) *)
    let shallow : (t238, _) idx_mut = (.a238) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1026;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1026 failed %d" i;
  );
  (* Deepening to (.a238.#a24) *)
  let idx : (t238, _) idx_mut = (.a238.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a238) *)
    let shallow : (t238, _) idx_mut = (.a238) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1027;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1027 failed %d" i;
    (* from (.a238.#a24) *)
    let shallow : (t238, _) idx_mut = (.a238.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1028;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1028 failed %d" i;
  );
  (* Deepening to (.a238.#b24) *)
  let idx : (t238, _) idx_mut = (.a238.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a238) *)
    let shallow : (t238, _) idx_mut = (.a238) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1029;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1029 failed %d" i;
    (* from (.a238.#b24) *)
    let shallow : (t238, _) idx_mut = (.a238.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1030;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1030 failed %d" i;
  );

  (***************************************)
  (*   t239 = { #{ int; float }; int }   *)
  (***************************************)
  (* Deepening to (.a239) *)
  let idx : (t239, _) idx_mut = (.a239) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a239) *)
    let shallow : (t239, _) idx_mut = (.a239) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1031;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1031 failed %d" i;
  );
  (* Deepening to (.a239.#a24) *)
  let idx : (t239, _) idx_mut = (.a239.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a239) *)
    let shallow : (t239, _) idx_mut = (.a239) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1032;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1032 failed %d" i;
    (* from (.a239.#a24) *)
    let shallow : (t239, _) idx_mut = (.a239.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1033;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1033 failed %d" i;
  );
  (* Deepening to (.a239.#b24) *)
  let idx : (t239, _) idx_mut = (.a239.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a239) *)
    let shallow : (t239, _) idx_mut = (.a239) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1034;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1034 failed %d" i;
    (* from (.a239.#b24) *)
    let shallow : (t239, _) idx_mut = (.a239.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1035;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1035 failed %d" i;
  );
  (* Deepening to (.b239) *)
  let idx : (t239, _) idx_mut = (.b239) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b239) *)
    let shallow : (t239, _) idx_mut = (.b239) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1036;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1036 failed %d" i;
  );

  (*****************************************)
  (*   t240 = { #{ int; float }; float }   *)
  (*****************************************)
  (* Deepening to (.a240) *)
  let idx : (t240, _) idx_mut = (.a240) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a240) *)
    let shallow : (t240, _) idx_mut = (.a240) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1037;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1037 failed %d" i;
  );
  (* Deepening to (.a240.#a24) *)
  let idx : (t240, _) idx_mut = (.a240.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a240) *)
    let shallow : (t240, _) idx_mut = (.a240) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1038;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1038 failed %d" i;
    (* from (.a240.#a24) *)
    let shallow : (t240, _) idx_mut = (.a240.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1039;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1039 failed %d" i;
  );
  (* Deepening to (.a240.#b24) *)
  let idx : (t240, _) idx_mut = (.a240.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a240) *)
    let shallow : (t240, _) idx_mut = (.a240) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1040;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1040 failed %d" i;
    (* from (.a240.#b24) *)
    let shallow : (t240, _) idx_mut = (.a240.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1041;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1041 failed %d" i;
  );
  (* Deepening to (.b240) *)
  let idx : (t240, _) idx_mut = (.b240) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b240) *)
    let shallow : (t240, _) idx_mut = (.b240) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1042;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1042 failed %d" i;
  );

  (*************************************)
  (*   t241 = { #{ int; int64x2# } }   *)
  (*************************************)
  (* Deepening to (.a241) *)
  let idx : (t241, _) idx_mut = (.a241) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a241) *)
    let shallow : (t241, _) idx_mut = (.a241) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1043;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1043 failed %d" i;
  );
  (* Deepening to (.a241.#a26) *)
  let idx : (t241, _) idx_mut = (.a241.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a241) *)
    let shallow : (t241, _) idx_mut = (.a241) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1044;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1044 failed %d" i;
    (* from (.a241.#a26) *)
    let shallow : (t241, _) idx_mut = (.a241.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1045;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1045 failed %d" i;
  );
  (* Deepening to (.a241.#b26) *)
  let idx : (t241, _) idx_mut = (.a241.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a241) *)
    let shallow : (t241, _) idx_mut = (.a241) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1046;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1046 failed %d" i;
    (* from (.a241.#b26) *)
    let shallow : (t241, _) idx_mut = (.a241.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1047;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1047 failed %d" i;
  );

  (******************************************)
  (*   t242 = { #{ int; int64x2# }; int }   *)
  (******************************************)
  (* Deepening to (.a242) *)
  let idx : (t242, _) idx_mut = (.a242) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a242) *)
    let shallow : (t242, _) idx_mut = (.a242) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1048;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1048 failed %d" i;
  );
  (* Deepening to (.a242.#a26) *)
  let idx : (t242, _) idx_mut = (.a242.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a242) *)
    let shallow : (t242, _) idx_mut = (.a242) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1049;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1049 failed %d" i;
    (* from (.a242.#a26) *)
    let shallow : (t242, _) idx_mut = (.a242.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1050;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1050 failed %d" i;
  );
  (* Deepening to (.a242.#b26) *)
  let idx : (t242, _) idx_mut = (.a242.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a242) *)
    let shallow : (t242, _) idx_mut = (.a242) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1051;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1051 failed %d" i;
    (* from (.a242.#b26) *)
    let shallow : (t242, _) idx_mut = (.a242.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1052;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1052 failed %d" i;
  );
  (* Deepening to (.b242) *)
  let idx : (t242, _) idx_mut = (.b242) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b242) *)
    let shallow : (t242, _) idx_mut = (.b242) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1053;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1053 failed %d" i;
  );

  (***********************************************)
  (*   t243 = { #{ int; int64x2# }; int64x2# }   *)
  (***********************************************)
  (* Deepening to (.a243) *)
  let idx : (t243, _) idx_mut = (.a243) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a243) *)
    let shallow : (t243, _) idx_mut = (.a243) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1054;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1054 failed %d" i;
  );
  (* Deepening to (.a243.#a26) *)
  let idx : (t243, _) idx_mut = (.a243.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a243) *)
    let shallow : (t243, _) idx_mut = (.a243) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1055;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1055 failed %d" i;
    (* from (.a243.#a26) *)
    let shallow : (t243, _) idx_mut = (.a243.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1056;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1056 failed %d" i;
  );
  (* Deepening to (.a243.#b26) *)
  let idx : (t243, _) idx_mut = (.a243.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a243) *)
    let shallow : (t243, _) idx_mut = (.a243) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1057;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1057 failed %d" i;
    (* from (.a243.#b26) *)
    let shallow : (t243, _) idx_mut = (.a243.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1058;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1058 failed %d" i;
  );
  (* Deepening to (.b243) *)
  let idx : (t243, _) idx_mut = (.b243) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b243) *)
    let shallow : (t243, _) idx_mut = (.b243) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1059;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1059 failed %d" i;
  );

  (******************************************)
  (*   t245 = { #{ int; #{ int; int } } }   *)
  (******************************************)
  (* Deepening to (.a245) *)
  let idx : (t245, _) idx_mut = (.a245) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a245) *)
    let shallow : (t245, _) idx_mut = (.a245) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1060;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1060 failed %d" i;
  );
  (* Deepening to (.a245.#a244) *)
  let idx : (t245, _) idx_mut = (.a245.#a244) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a245) *)
    let shallow : (t245, _) idx_mut = (.a245) in
    let deepened = (.idx_mut(shallow).#a244) in
    mark_test_run 1061;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1061 failed %d" i;
    (* from (.a245.#a244) *)
    let shallow : (t245, _) idx_mut = (.a245.#a244) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1062;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1062 failed %d" i;
  );
  (* Deepening to (.a245.#b244) *)
  let idx : (t245, _) idx_mut = (.a245.#b244) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a245) *)
    let shallow : (t245, _) idx_mut = (.a245) in
    let deepened = (.idx_mut(shallow).#b244) in
    mark_test_run 1063;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1063 failed %d" i;
    (* from (.a245.#b244) *)
    let shallow : (t245, _) idx_mut = (.a245.#b244) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1064;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1064 failed %d" i;
  );
  (* Deepening to (.a245.#b244.#a20) *)
  let idx : (t245, _) idx_mut = (.a245.#b244.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a245) *)
    let shallow : (t245, _) idx_mut = (.a245) in
    let deepened = (.idx_mut(shallow).#b244.#a20) in
    mark_test_run 1065;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1065 failed %d" i;
    (* from (.a245.#b244) *)
    let shallow : (t245, _) idx_mut = (.a245.#b244) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1066;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1066 failed %d" i;
    (* from (.a245.#b244.#a20) *)
    let shallow : (t245, _) idx_mut = (.a245.#b244.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1067;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1067 failed %d" i;
  );
  (* Deepening to (.a245.#b244.#b20) *)
  let idx : (t245, _) idx_mut = (.a245.#b244.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a245) *)
    let shallow : (t245, _) idx_mut = (.a245) in
    let deepened = (.idx_mut(shallow).#b244.#b20) in
    mark_test_run 1068;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1068 failed %d" i;
    (* from (.a245.#b244) *)
    let shallow : (t245, _) idx_mut = (.a245.#b244) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1069;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1069 failed %d" i;
    (* from (.a245.#b244.#b20) *)
    let shallow : (t245, _) idx_mut = (.a245.#b244.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1070;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1070 failed %d" i;
  );

  (*********************************************)
  (*   t247 = { #{ int; #{ int; int32# } } }   *)
  (*********************************************)
  (* Deepening to (.a247) *)
  let idx : (t247, _) idx_mut = (.a247) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a247) *)
    let shallow : (t247, _) idx_mut = (.a247) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1071;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1071 failed %d" i;
  );
  (* Deepening to (.a247.#a246) *)
  let idx : (t247, _) idx_mut = (.a247.#a246) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a247) *)
    let shallow : (t247, _) idx_mut = (.a247) in
    let deepened = (.idx_mut(shallow).#a246) in
    mark_test_run 1072;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1072 failed %d" i;
    (* from (.a247.#a246) *)
    let shallow : (t247, _) idx_mut = (.a247.#a246) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1073;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1073 failed %d" i;
  );
  (* Deepening to (.a247.#b246) *)
  let idx : (t247, _) idx_mut = (.a247.#b246) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a247) *)
    let shallow : (t247, _) idx_mut = (.a247) in
    let deepened = (.idx_mut(shallow).#b246) in
    mark_test_run 1074;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1074 failed %d" i;
    (* from (.a247.#b246) *)
    let shallow : (t247, _) idx_mut = (.a247.#b246) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1075;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1075 failed %d" i;
  );
  (* Deepening to (.a247.#b246.#a22) *)
  let idx : (t247, _) idx_mut = (.a247.#b246.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a247) *)
    let shallow : (t247, _) idx_mut = (.a247) in
    let deepened = (.idx_mut(shallow).#b246.#a22) in
    mark_test_run 1076;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1076 failed %d" i;
    (* from (.a247.#b246) *)
    let shallow : (t247, _) idx_mut = (.a247.#b246) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1077;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1077 failed %d" i;
    (* from (.a247.#b246.#a22) *)
    let shallow : (t247, _) idx_mut = (.a247.#b246.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1078;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1078 failed %d" i;
  );
  (* Deepening to (.a247.#b246.#b22) *)
  let idx : (t247, _) idx_mut = (.a247.#b246.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a247) *)
    let shallow : (t247, _) idx_mut = (.a247) in
    let deepened = (.idx_mut(shallow).#b246.#b22) in
    mark_test_run 1079;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1079 failed %d" i;
    (* from (.a247.#b246) *)
    let shallow : (t247, _) idx_mut = (.a247.#b246) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1080;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1080 failed %d" i;
    (* from (.a247.#b246.#b22) *)
    let shallow : (t247, _) idx_mut = (.a247.#b246.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1081;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1081 failed %d" i;
  );

  (********************************************)
  (*   t249 = { #{ int; #{ int; float } } }   *)
  (********************************************)
  (* Deepening to (.a249) *)
  let idx : (t249, _) idx_mut = (.a249) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a249) *)
    let shallow : (t249, _) idx_mut = (.a249) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1082;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1082 failed %d" i;
  );
  (* Deepening to (.a249.#a248) *)
  let idx : (t249, _) idx_mut = (.a249.#a248) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a249) *)
    let shallow : (t249, _) idx_mut = (.a249) in
    let deepened = (.idx_mut(shallow).#a248) in
    mark_test_run 1083;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1083 failed %d" i;
    (* from (.a249.#a248) *)
    let shallow : (t249, _) idx_mut = (.a249.#a248) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1084;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1084 failed %d" i;
  );
  (* Deepening to (.a249.#b248) *)
  let idx : (t249, _) idx_mut = (.a249.#b248) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a249) *)
    let shallow : (t249, _) idx_mut = (.a249) in
    let deepened = (.idx_mut(shallow).#b248) in
    mark_test_run 1085;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1085 failed %d" i;
    (* from (.a249.#b248) *)
    let shallow : (t249, _) idx_mut = (.a249.#b248) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1086;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1086 failed %d" i;
  );
  (* Deepening to (.a249.#b248.#a24) *)
  let idx : (t249, _) idx_mut = (.a249.#b248.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a249) *)
    let shallow : (t249, _) idx_mut = (.a249) in
    let deepened = (.idx_mut(shallow).#b248.#a24) in
    mark_test_run 1087;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1087 failed %d" i;
    (* from (.a249.#b248) *)
    let shallow : (t249, _) idx_mut = (.a249.#b248) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1088;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1088 failed %d" i;
    (* from (.a249.#b248.#a24) *)
    let shallow : (t249, _) idx_mut = (.a249.#b248.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1089;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1089 failed %d" i;
  );
  (* Deepening to (.a249.#b248.#b24) *)
  let idx : (t249, _) idx_mut = (.a249.#b248.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a249) *)
    let shallow : (t249, _) idx_mut = (.a249) in
    let deepened = (.idx_mut(shallow).#b248.#b24) in
    mark_test_run 1090;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1090 failed %d" i;
    (* from (.a249.#b248) *)
    let shallow : (t249, _) idx_mut = (.a249.#b248) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1091;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1091 failed %d" i;
    (* from (.a249.#b248.#b24) *)
    let shallow : (t249, _) idx_mut = (.a249.#b248.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1092;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1092 failed %d" i;
  );

  (***********************************************)
  (*   t251 = { #{ int; #{ int; int64x2# } } }   *)
  (***********************************************)
  (* Deepening to (.a251) *)
  let idx : (t251, _) idx_mut = (.a251) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a251) *)
    let shallow : (t251, _) idx_mut = (.a251) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1093;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1093 failed %d" i;
  );
  (* Deepening to (.a251.#a250) *)
  let idx : (t251, _) idx_mut = (.a251.#a250) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a251) *)
    let shallow : (t251, _) idx_mut = (.a251) in
    let deepened = (.idx_mut(shallow).#a250) in
    mark_test_run 1094;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1094 failed %d" i;
    (* from (.a251.#a250) *)
    let shallow : (t251, _) idx_mut = (.a251.#a250) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1095;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1095 failed %d" i;
  );
  (* Deepening to (.a251.#b250) *)
  let idx : (t251, _) idx_mut = (.a251.#b250) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a251) *)
    let shallow : (t251, _) idx_mut = (.a251) in
    let deepened = (.idx_mut(shallow).#b250) in
    mark_test_run 1096;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1096 failed %d" i;
    (* from (.a251.#b250) *)
    let shallow : (t251, _) idx_mut = (.a251.#b250) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1097;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1097 failed %d" i;
  );
  (* Deepening to (.a251.#b250.#a26) *)
  let idx : (t251, _) idx_mut = (.a251.#b250.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a251) *)
    let shallow : (t251, _) idx_mut = (.a251) in
    let deepened = (.idx_mut(shallow).#b250.#a26) in
    mark_test_run 1098;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1098 failed %d" i;
    (* from (.a251.#b250) *)
    let shallow : (t251, _) idx_mut = (.a251.#b250) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1099;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1099 failed %d" i;
    (* from (.a251.#b250.#a26) *)
    let shallow : (t251, _) idx_mut = (.a251.#b250.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1100;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1100 failed %d" i;
  );
  (* Deepening to (.a251.#b250.#b26) *)
  let idx : (t251, _) idx_mut = (.a251.#b250.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a251) *)
    let shallow : (t251, _) idx_mut = (.a251) in
    let deepened = (.idx_mut(shallow).#b250.#b26) in
    mark_test_run 1101;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1101 failed %d" i;
    (* from (.a251.#b250) *)
    let shallow : (t251, _) idx_mut = (.a251.#b250) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1102;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1102 failed %d" i;
    (* from (.a251.#b250.#b26) *)
    let shallow : (t251, _) idx_mut = (.a251.#b250.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1103;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1103 failed %d" i;
  );

  (*********************************************)
  (*   t253 = { #{ int; #{ int32#; int } } }   *)
  (*********************************************)
  (* Deepening to (.a253) *)
  let idx : (t253, _) idx_mut = (.a253) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a253) *)
    let shallow : (t253, _) idx_mut = (.a253) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1104;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1104 failed %d" i;
  );
  (* Deepening to (.a253.#a252) *)
  let idx : (t253, _) idx_mut = (.a253.#a252) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a253) *)
    let shallow : (t253, _) idx_mut = (.a253) in
    let deepened = (.idx_mut(shallow).#a252) in
    mark_test_run 1105;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1105 failed %d" i;
    (* from (.a253.#a252) *)
    let shallow : (t253, _) idx_mut = (.a253.#a252) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1106;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1106 failed %d" i;
  );
  (* Deepening to (.a253.#b252) *)
  let idx : (t253, _) idx_mut = (.a253.#b252) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a253) *)
    let shallow : (t253, _) idx_mut = (.a253) in
    let deepened = (.idx_mut(shallow).#b252) in
    mark_test_run 1107;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1107 failed %d" i;
    (* from (.a253.#b252) *)
    let shallow : (t253, _) idx_mut = (.a253.#b252) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1108;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1108 failed %d" i;
  );
  (* Deepening to (.a253.#b252.#a40) *)
  let idx : (t253, _) idx_mut = (.a253.#b252.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a253) *)
    let shallow : (t253, _) idx_mut = (.a253) in
    let deepened = (.idx_mut(shallow).#b252.#a40) in
    mark_test_run 1109;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1109 failed %d" i;
    (* from (.a253.#b252) *)
    let shallow : (t253, _) idx_mut = (.a253.#b252) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1110;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1110 failed %d" i;
    (* from (.a253.#b252.#a40) *)
    let shallow : (t253, _) idx_mut = (.a253.#b252.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1111;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1111 failed %d" i;
  );
  (* Deepening to (.a253.#b252.#b40) *)
  let idx : (t253, _) idx_mut = (.a253.#b252.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a253) *)
    let shallow : (t253, _) idx_mut = (.a253) in
    let deepened = (.idx_mut(shallow).#b252.#b40) in
    mark_test_run 1112;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1112 failed %d" i;
    (* from (.a253.#b252) *)
    let shallow : (t253, _) idx_mut = (.a253.#b252) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1113;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1113 failed %d" i;
    (* from (.a253.#b252.#b40) *)
    let shallow : (t253, _) idx_mut = (.a253.#b252.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1114;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1114 failed %d" i;
  );

  (************************************************)
  (*   t255 = { #{ int; #{ int32#; int32# } } }   *)
  (************************************************)
  (* Deepening to (.a255) *)
  let idx : (t255, _) idx_mut = (.a255) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a255) *)
    let shallow : (t255, _) idx_mut = (.a255) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1115;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1115 failed %d" i;
  );
  (* Deepening to (.a255.#a254) *)
  let idx : (t255, _) idx_mut = (.a255.#a254) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a255) *)
    let shallow : (t255, _) idx_mut = (.a255) in
    let deepened = (.idx_mut(shallow).#a254) in
    mark_test_run 1116;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1116 failed %d" i;
    (* from (.a255.#a254) *)
    let shallow : (t255, _) idx_mut = (.a255.#a254) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1117;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1117 failed %d" i;
  );
  (* Deepening to (.a255.#b254) *)
  let idx : (t255, _) idx_mut = (.a255.#b254) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a255) *)
    let shallow : (t255, _) idx_mut = (.a255) in
    let deepened = (.idx_mut(shallow).#b254) in
    mark_test_run 1118;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1118 failed %d" i;
    (* from (.a255.#b254) *)
    let shallow : (t255, _) idx_mut = (.a255.#b254) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1119;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1119 failed %d" i;
  );
  (* Deepening to (.a255.#b254.#a42) *)
  let idx : (t255, _) idx_mut = (.a255.#b254.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a255) *)
    let shallow : (t255, _) idx_mut = (.a255) in
    let deepened = (.idx_mut(shallow).#b254.#a42) in
    mark_test_run 1120;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1120 failed %d" i;
    (* from (.a255.#b254) *)
    let shallow : (t255, _) idx_mut = (.a255.#b254) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1121;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1121 failed %d" i;
    (* from (.a255.#b254.#a42) *)
    let shallow : (t255, _) idx_mut = (.a255.#b254.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1122;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1122 failed %d" i;
  );
  (* Deepening to (.a255.#b254.#b42) *)
  let idx : (t255, _) idx_mut = (.a255.#b254.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a255) *)
    let shallow : (t255, _) idx_mut = (.a255) in
    let deepened = (.idx_mut(shallow).#b254.#b42) in
    mark_test_run 1123;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1123 failed %d" i;
    (* from (.a255.#b254) *)
    let shallow : (t255, _) idx_mut = (.a255.#b254) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1124;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1124 failed %d" i;
    (* from (.a255.#b254.#b42) *)
    let shallow : (t255, _) idx_mut = (.a255.#b254.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1125;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1125 failed %d" i;
  );

  (********************************************)
  (*   t257 = { #{ int; #{ float; int } } }   *)
  (********************************************)
  (* Deepening to (.a257) *)
  let idx : (t257, _) idx_mut = (.a257) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a257) *)
    let shallow : (t257, _) idx_mut = (.a257) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1126;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1126 failed %d" i;
  );
  (* Deepening to (.a257.#a256) *)
  let idx : (t257, _) idx_mut = (.a257.#a256) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a257) *)
    let shallow : (t257, _) idx_mut = (.a257) in
    let deepened = (.idx_mut(shallow).#a256) in
    mark_test_run 1127;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1127 failed %d" i;
    (* from (.a257.#a256) *)
    let shallow : (t257, _) idx_mut = (.a257.#a256) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1128;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1128 failed %d" i;
  );
  (* Deepening to (.a257.#b256) *)
  let idx : (t257, _) idx_mut = (.a257.#b256) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a257) *)
    let shallow : (t257, _) idx_mut = (.a257) in
    let deepened = (.idx_mut(shallow).#b256) in
    mark_test_run 1129;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1129 failed %d" i;
    (* from (.a257.#b256) *)
    let shallow : (t257, _) idx_mut = (.a257.#b256) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1130;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1130 failed %d" i;
  );
  (* Deepening to (.a257.#b256.#a49) *)
  let idx : (t257, _) idx_mut = (.a257.#b256.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a257) *)
    let shallow : (t257, _) idx_mut = (.a257) in
    let deepened = (.idx_mut(shallow).#b256.#a49) in
    mark_test_run 1131;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1131 failed %d" i;
    (* from (.a257.#b256) *)
    let shallow : (t257, _) idx_mut = (.a257.#b256) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1132;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1132 failed %d" i;
    (* from (.a257.#b256.#a49) *)
    let shallow : (t257, _) idx_mut = (.a257.#b256.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1133;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1133 failed %d" i;
  );
  (* Deepening to (.a257.#b256.#b49) *)
  let idx : (t257, _) idx_mut = (.a257.#b256.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a257) *)
    let shallow : (t257, _) idx_mut = (.a257) in
    let deepened = (.idx_mut(shallow).#b256.#b49) in
    mark_test_run 1134;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1134 failed %d" i;
    (* from (.a257.#b256) *)
    let shallow : (t257, _) idx_mut = (.a257.#b256) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1135;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1135 failed %d" i;
    (* from (.a257.#b256.#b49) *)
    let shallow : (t257, _) idx_mut = (.a257.#b256.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1136;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1136 failed %d" i;
  );

  (**********************************************)
  (*   t259 = { #{ int; #{ float; float } } }   *)
  (**********************************************)
  (* Deepening to (.a259) *)
  let idx : (t259, _) idx_mut = (.a259) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a259) *)
    let shallow : (t259, _) idx_mut = (.a259) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1137;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1137 failed %d" i;
  );
  (* Deepening to (.a259.#a258) *)
  let idx : (t259, _) idx_mut = (.a259.#a258) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a259) *)
    let shallow : (t259, _) idx_mut = (.a259) in
    let deepened = (.idx_mut(shallow).#a258) in
    mark_test_run 1138;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1138 failed %d" i;
    (* from (.a259.#a258) *)
    let shallow : (t259, _) idx_mut = (.a259.#a258) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1139;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1139 failed %d" i;
  );
  (* Deepening to (.a259.#b258) *)
  let idx : (t259, _) idx_mut = (.a259.#b258) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a259) *)
    let shallow : (t259, _) idx_mut = (.a259) in
    let deepened = (.idx_mut(shallow).#b258) in
    mark_test_run 1140;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1140 failed %d" i;
    (* from (.a259.#b258) *)
    let shallow : (t259, _) idx_mut = (.a259.#b258) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1141;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1141 failed %d" i;
  );
  (* Deepening to (.a259.#b258.#a51) *)
  let idx : (t259, _) idx_mut = (.a259.#b258.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a259) *)
    let shallow : (t259, _) idx_mut = (.a259) in
    let deepened = (.idx_mut(shallow).#b258.#a51) in
    mark_test_run 1142;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1142 failed %d" i;
    (* from (.a259.#b258) *)
    let shallow : (t259, _) idx_mut = (.a259.#b258) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1143;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1143 failed %d" i;
    (* from (.a259.#b258.#a51) *)
    let shallow : (t259, _) idx_mut = (.a259.#b258.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1144;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1144 failed %d" i;
  );
  (* Deepening to (.a259.#b258.#b51) *)
  let idx : (t259, _) idx_mut = (.a259.#b258.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a259) *)
    let shallow : (t259, _) idx_mut = (.a259) in
    let deepened = (.idx_mut(shallow).#b258.#b51) in
    mark_test_run 1145;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1145 failed %d" i;
    (* from (.a259.#b258) *)
    let shallow : (t259, _) idx_mut = (.a259.#b258) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1146;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1146 failed %d" i;
    (* from (.a259.#b258.#b51) *)
    let shallow : (t259, _) idx_mut = (.a259.#b258.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1147;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1147 failed %d" i;
  );

  (***********************************************)
  (*   t261 = { #{ int; #{ int64x2#; int } } }   *)
  (***********************************************)
  (* Deepening to (.a261) *)
  let idx : (t261, _) idx_mut = (.a261) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a261) *)
    let shallow : (t261, _) idx_mut = (.a261) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1148;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1148 failed %d" i;
  );
  (* Deepening to (.a261.#a260) *)
  let idx : (t261, _) idx_mut = (.a261.#a260) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a261) *)
    let shallow : (t261, _) idx_mut = (.a261) in
    let deepened = (.idx_mut(shallow).#a260) in
    mark_test_run 1149;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1149 failed %d" i;
    (* from (.a261.#a260) *)
    let shallow : (t261, _) idx_mut = (.a261.#a260) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1150;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1150 failed %d" i;
  );
  (* Deepening to (.a261.#b260) *)
  let idx : (t261, _) idx_mut = (.a261.#b260) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a261) *)
    let shallow : (t261, _) idx_mut = (.a261) in
    let deepened = (.idx_mut(shallow).#b260) in
    mark_test_run 1151;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1151 failed %d" i;
    (* from (.a261.#b260) *)
    let shallow : (t261, _) idx_mut = (.a261.#b260) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1152;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1152 failed %d" i;
  );
  (* Deepening to (.a261.#b260.#a58) *)
  let idx : (t261, _) idx_mut = (.a261.#b260.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a261) *)
    let shallow : (t261, _) idx_mut = (.a261) in
    let deepened = (.idx_mut(shallow).#b260.#a58) in
    mark_test_run 1153;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1153 failed %d" i;
    (* from (.a261.#b260) *)
    let shallow : (t261, _) idx_mut = (.a261.#b260) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1154;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1154 failed %d" i;
    (* from (.a261.#b260.#a58) *)
    let shallow : (t261, _) idx_mut = (.a261.#b260.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1155;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1155 failed %d" i;
  );
  (* Deepening to (.a261.#b260.#b58) *)
  let idx : (t261, _) idx_mut = (.a261.#b260.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a261) *)
    let shallow : (t261, _) idx_mut = (.a261) in
    let deepened = (.idx_mut(shallow).#b260.#b58) in
    mark_test_run 1156;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1156 failed %d" i;
    (* from (.a261.#b260) *)
    let shallow : (t261, _) idx_mut = (.a261.#b260) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1157;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1157 failed %d" i;
    (* from (.a261.#b260.#b58) *)
    let shallow : (t261, _) idx_mut = (.a261.#b260.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1158;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1158 failed %d" i;
  );

  (****************************************************)
  (*   t263 = { #{ int; #{ int64x2#; int64x2# } } }   *)
  (****************************************************)
  (* Deepening to (.a263) *)
  let idx : (t263, _) idx_mut = (.a263) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a263) *)
    let shallow : (t263, _) idx_mut = (.a263) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1159;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1159 failed %d" i;
  );
  (* Deepening to (.a263.#a262) *)
  let idx : (t263, _) idx_mut = (.a263.#a262) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a263) *)
    let shallow : (t263, _) idx_mut = (.a263) in
    let deepened = (.idx_mut(shallow).#a262) in
    mark_test_run 1160;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1160 failed %d" i;
    (* from (.a263.#a262) *)
    let shallow : (t263, _) idx_mut = (.a263.#a262) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1161;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1161 failed %d" i;
  );
  (* Deepening to (.a263.#b262) *)
  let idx : (t263, _) idx_mut = (.a263.#b262) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a263) *)
    let shallow : (t263, _) idx_mut = (.a263) in
    let deepened = (.idx_mut(shallow).#b262) in
    mark_test_run 1162;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1162 failed %d" i;
    (* from (.a263.#b262) *)
    let shallow : (t263, _) idx_mut = (.a263.#b262) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1163;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1163 failed %d" i;
  );
  (* Deepening to (.a263.#b262.#a60) *)
  let idx : (t263, _) idx_mut = (.a263.#b262.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a263) *)
    let shallow : (t263, _) idx_mut = (.a263) in
    let deepened = (.idx_mut(shallow).#b262.#a60) in
    mark_test_run 1164;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1164 failed %d" i;
    (* from (.a263.#b262) *)
    let shallow : (t263, _) idx_mut = (.a263.#b262) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1165;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1165 failed %d" i;
    (* from (.a263.#b262.#a60) *)
    let shallow : (t263, _) idx_mut = (.a263.#b262.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1166;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1166 failed %d" i;
  );
  (* Deepening to (.a263.#b262.#b60) *)
  let idx : (t263, _) idx_mut = (.a263.#b262.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a263) *)
    let shallow : (t263, _) idx_mut = (.a263) in
    let deepened = (.idx_mut(shallow).#b262.#b60) in
    mark_test_run 1167;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1167 failed %d" i;
    (* from (.a263.#b262) *)
    let shallow : (t263, _) idx_mut = (.a263.#b262) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1168;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1168 failed %d" i;
    (* from (.a263.#b262.#b60) *)
    let shallow : (t263, _) idx_mut = (.a263.#b262.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1169;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1169 failed %d" i;
  );

  (**********************************************************)
  (*   t266 = { #{ int64; int64# }; #{ int64#; float# } }   *)
  (**********************************************************)
  (* Deepening to (.a266) *)
  let idx : (t266, _) idx_mut = (.a266) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a266) *)
    let shallow : (t266, _) idx_mut = (.a266) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1170;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1170 failed %d" i;
  );
  (* Deepening to (.a266.#a264) *)
  let idx : (t266, _) idx_mut = (.a266.#a264) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a266) *)
    let shallow : (t266, _) idx_mut = (.a266) in
    let deepened = (.idx_mut(shallow).#a264) in
    mark_test_run 1171;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1171 failed %d" i;
    (* from (.a266.#a264) *)
    let shallow : (t266, _) idx_mut = (.a266.#a264) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1172;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1172 failed %d" i;
  );
  (* Deepening to (.a266.#b264) *)
  let idx : (t266, _) idx_mut = (.a266.#b264) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a266) *)
    let shallow : (t266, _) idx_mut = (.a266) in
    let deepened = (.idx_mut(shallow).#b264) in
    mark_test_run 1173;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1173 failed %d" i;
    (* from (.a266.#b264) *)
    let shallow : (t266, _) idx_mut = (.a266.#b264) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1174;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1174 failed %d" i;
  );
  (* Deepening to (.b266) *)
  let idx : (t266, _) idx_mut = (.b266) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b266) *)
    let shallow : (t266, _) idx_mut = (.b266) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1175;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1175 failed %d" i;
  );
  (* Deepening to (.b266.#a265) *)
  let idx : (t266, _) idx_mut = (.b266.#a265) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b266) *)
    let shallow : (t266, _) idx_mut = (.b266) in
    let deepened = (.idx_mut(shallow).#a265) in
    mark_test_run 1176;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1176 failed %d" i;
    (* from (.b266.#a265) *)
    let shallow : (t266, _) idx_mut = (.b266.#a265) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1177;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1177 failed %d" i;
  );
  (* Deepening to (.b266.#b265) *)
  let idx : (t266, _) idx_mut = (.b266.#b265) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b266) *)
    let shallow : (t266, _) idx_mut = (.b266) in
    let deepened = (.idx_mut(shallow).#b265) in
    mark_test_run 1178;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1178 failed %d" i;
    (* from (.b266.#b265) *)
    let shallow : (t266, _) idx_mut = (.b266.#b265) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1179;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1179 failed %d" i;
  );

  (**********************************************************)
  (*   t269 = { #{ int64; string }; #{ int64#; string } }   *)
  (**********************************************************)
  (* Deepening to (.a269) *)
  let idx : (t269, _) idx_mut = (.a269) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a269) *)
    let shallow : (t269, _) idx_mut = (.a269) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1180;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1180 failed %d" i;
  );
  (* Deepening to (.a269.#a267) *)
  let idx : (t269, _) idx_mut = (.a269.#a267) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a269) *)
    let shallow : (t269, _) idx_mut = (.a269) in
    let deepened = (.idx_mut(shallow).#a267) in
    mark_test_run 1181;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1181 failed %d" i;
    (* from (.a269.#a267) *)
    let shallow : (t269, _) idx_mut = (.a269.#a267) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1182;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1182 failed %d" i;
  );
  (* Deepening to (.a269.#b267) *)
  let idx : (t269, _) idx_mut = (.a269.#b267) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a269) *)
    let shallow : (t269, _) idx_mut = (.a269) in
    let deepened = (.idx_mut(shallow).#b267) in
    mark_test_run 1183;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1183 failed %d" i;
    (* from (.a269.#b267) *)
    let shallow : (t269, _) idx_mut = (.a269.#b267) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1184;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1184 failed %d" i;
  );
  (* Deepening to (.b269) *)
  let idx : (t269, _) idx_mut = (.b269) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b269) *)
    let shallow : (t269, _) idx_mut = (.b269) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1185;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1185 failed %d" i;
  );
  (* Deepening to (.b269.#a268) *)
  let idx : (t269, _) idx_mut = (.b269.#a268) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b269) *)
    let shallow : (t269, _) idx_mut = (.b269) in
    let deepened = (.idx_mut(shallow).#a268) in
    mark_test_run 1186;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1186 failed %d" i;
    (* from (.b269.#a268) *)
    let shallow : (t269, _) idx_mut = (.b269.#a268) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1187;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1187 failed %d" i;
  );
  (* Deepening to (.b269.#b268) *)
  let idx : (t269, _) idx_mut = (.b269.#b268) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b269) *)
    let shallow : (t269, _) idx_mut = (.b269) in
    let deepened = (.idx_mut(shallow).#b268) in
    mark_test_run 1188;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1188 failed %d" i;
    (* from (.b269.#b268) *)
    let shallow : (t269, _) idx_mut = (.b269.#b268) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1189;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1189 failed %d" i;
  );

  (********************************************************)
  (*   t272 = { #{ int64#; int64 }; #{ int64; int64 } }   *)
  (********************************************************)
  (* Deepening to (.a272) *)
  let idx : (t272, _) idx_mut = (.a272) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a272) *)
    let shallow : (t272, _) idx_mut = (.a272) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1190;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1190 failed %d" i;
  );
  (* Deepening to (.a272.#a270) *)
  let idx : (t272, _) idx_mut = (.a272.#a270) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a272) *)
    let shallow : (t272, _) idx_mut = (.a272) in
    let deepened = (.idx_mut(shallow).#a270) in
    mark_test_run 1191;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1191 failed %d" i;
    (* from (.a272.#a270) *)
    let shallow : (t272, _) idx_mut = (.a272.#a270) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1192;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1192 failed %d" i;
  );
  (* Deepening to (.a272.#b270) *)
  let idx : (t272, _) idx_mut = (.a272.#b270) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a272) *)
    let shallow : (t272, _) idx_mut = (.a272) in
    let deepened = (.idx_mut(shallow).#b270) in
    mark_test_run 1193;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1193 failed %d" i;
    (* from (.a272.#b270) *)
    let shallow : (t272, _) idx_mut = (.a272.#b270) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1194;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1194 failed %d" i;
  );
  (* Deepening to (.b272) *)
  let idx : (t272, _) idx_mut = (.b272) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b272) *)
    let shallow : (t272, _) idx_mut = (.b272) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1195;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1195 failed %d" i;
  );
  (* Deepening to (.b272.#a271) *)
  let idx : (t272, _) idx_mut = (.b272.#a271) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b272) *)
    let shallow : (t272, _) idx_mut = (.b272) in
    let deepened = (.idx_mut(shallow).#a271) in
    mark_test_run 1196;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1196 failed %d" i;
    (* from (.b272.#a271) *)
    let shallow : (t272, _) idx_mut = (.b272.#a271) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1197;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1197 failed %d" i;
  );
  (* Deepening to (.b272.#b271) *)
  let idx : (t272, _) idx_mut = (.b272.#b271) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b272) *)
    let shallow : (t272, _) idx_mut = (.b272) in
    let deepened = (.idx_mut(shallow).#b271) in
    mark_test_run 1198;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1198 failed %d" i;
    (* from (.b272.#b271) *)
    let shallow : (t272, _) idx_mut = (.b272.#b271) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1199;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1199 failed %d" i;
  );

  (***********************************************************)
  (*   t274 = { #{ int64#; int64 }; #{ float32#; float } }   *)
  (***********************************************************)
  (* Deepening to (.a274) *)
  let idx : (t274, _) idx_mut = (.a274) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a274) *)
    let shallow : (t274, _) idx_mut = (.a274) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1200;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1200 failed %d" i;
  );
  (* Deepening to (.a274.#a270) *)
  let idx : (t274, _) idx_mut = (.a274.#a270) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a274) *)
    let shallow : (t274, _) idx_mut = (.a274) in
    let deepened = (.idx_mut(shallow).#a270) in
    mark_test_run 1201;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1201 failed %d" i;
    (* from (.a274.#a270) *)
    let shallow : (t274, _) idx_mut = (.a274.#a270) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1202;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1202 failed %d" i;
  );
  (* Deepening to (.a274.#b270) *)
  let idx : (t274, _) idx_mut = (.a274.#b270) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a274) *)
    let shallow : (t274, _) idx_mut = (.a274) in
    let deepened = (.idx_mut(shallow).#b270) in
    mark_test_run 1203;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1203 failed %d" i;
    (* from (.a274.#b270) *)
    let shallow : (t274, _) idx_mut = (.a274.#b270) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1204;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1204 failed %d" i;
  );
  (* Deepening to (.b274) *)
  let idx : (t274, _) idx_mut = (.b274) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b274) *)
    let shallow : (t274, _) idx_mut = (.b274) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1205;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1205 failed %d" i;
  );
  (* Deepening to (.b274.#a273) *)
  let idx : (t274, _) idx_mut = (.b274.#a273) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b274) *)
    let shallow : (t274, _) idx_mut = (.b274) in
    let deepened = (.idx_mut(shallow).#a273) in
    mark_test_run 1206;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1206 failed %d" i;
    (* from (.b274.#a273) *)
    let shallow : (t274, _) idx_mut = (.b274.#a273) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1207;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1207 failed %d" i;
  );
  (* Deepening to (.b274.#b273) *)
  let idx : (t274, _) idx_mut = (.b274.#b273) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b274) *)
    let shallow : (t274, _) idx_mut = (.b274) in
    let deepened = (.idx_mut(shallow).#b273) in
    mark_test_run 1208;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1208 failed %d" i;
    (* from (.b274.#b273) *)
    let shallow : (t274, _) idx_mut = (.b274.#b273) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1209;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1209 failed %d" i;
  );

  (******************************)
  (*   t275 = { #{ int32# } }   *)
  (******************************)
  (* Deepening to (.a275) *)
  let idx : (t275, _) idx_mut = (.a275) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a275) *)
    let shallow : (t275, _) idx_mut = (.a275) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1210;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1210 failed %d" i;
  );
  (* Deepening to (.a275.#a30) *)
  let idx : (t275, _) idx_mut = (.a275.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a275) *)
    let shallow : (t275, _) idx_mut = (.a275) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1211;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1211 failed %d" i;
    (* from (.a275.#a30) *)
    let shallow : (t275, _) idx_mut = (.a275.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1212;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1212 failed %d" i;
  );

  (***********************************)
  (*   t276 = { #{ int32# }; int }   *)
  (***********************************)
  (* Deepening to (.a276) *)
  let idx : (t276, _) idx_mut = (.a276) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a276) *)
    let shallow : (t276, _) idx_mut = (.a276) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1213;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1213 failed %d" i;
  );
  (* Deepening to (.a276.#a30) *)
  let idx : (t276, _) idx_mut = (.a276.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a276) *)
    let shallow : (t276, _) idx_mut = (.a276) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1214;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1214 failed %d" i;
    (* from (.a276.#a30) *)
    let shallow : (t276, _) idx_mut = (.a276.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1215;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1215 failed %d" i;
  );
  (* Deepening to (.b276) *)
  let idx : (t276, _) idx_mut = (.b276) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b276) *)
    let shallow : (t276, _) idx_mut = (.b276) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1216;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1216 failed %d" i;
  );

  (**************************************)
  (*   t277 = { #{ int32# }; int32# }   *)
  (**************************************)
  (* Deepening to (.a277) *)
  let idx : (t277, _) idx_mut = (.a277) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a277) *)
    let shallow : (t277, _) idx_mut = (.a277) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1217;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1217 failed %d" i;
  );
  (* Deepening to (.a277.#a30) *)
  let idx : (t277, _) idx_mut = (.a277.#a30) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a277) *)
    let shallow : (t277, _) idx_mut = (.a277) in
    let deepened = (.idx_mut(shallow).#a30) in
    mark_test_run 1218;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1218 failed %d" i;
    (* from (.a277.#a30) *)
    let shallow : (t277, _) idx_mut = (.a277.#a30) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1219;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1219 failed %d" i;
  );
  (* Deepening to (.b277) *)
  let idx : (t277, _) idx_mut = (.b277) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b277) *)
    let shallow : (t277, _) idx_mut = (.b277) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1220;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1220 failed %d" i;
  );

  (***********************************)
  (*   t278 = { #{ int32#; int } }   *)
  (***********************************)
  (* Deepening to (.a278) *)
  let idx : (t278, _) idx_mut = (.a278) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a278) *)
    let shallow : (t278, _) idx_mut = (.a278) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1221;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1221 failed %d" i;
  );
  (* Deepening to (.a278.#a40) *)
  let idx : (t278, _) idx_mut = (.a278.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a278) *)
    let shallow : (t278, _) idx_mut = (.a278) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1222;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1222 failed %d" i;
    (* from (.a278.#a40) *)
    let shallow : (t278, _) idx_mut = (.a278.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1223;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1223 failed %d" i;
  );
  (* Deepening to (.a278.#b40) *)
  let idx : (t278, _) idx_mut = (.a278.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a278) *)
    let shallow : (t278, _) idx_mut = (.a278) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1224;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1224 failed %d" i;
    (* from (.a278.#b40) *)
    let shallow : (t278, _) idx_mut = (.a278.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1225;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1225 failed %d" i;
  );

  (****************************************)
  (*   t279 = { #{ int32#; int }; int }   *)
  (****************************************)
  (* Deepening to (.a279) *)
  let idx : (t279, _) idx_mut = (.a279) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a279) *)
    let shallow : (t279, _) idx_mut = (.a279) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1226;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1226 failed %d" i;
  );
  (* Deepening to (.a279.#a40) *)
  let idx : (t279, _) idx_mut = (.a279.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a279) *)
    let shallow : (t279, _) idx_mut = (.a279) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1227;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1227 failed %d" i;
    (* from (.a279.#a40) *)
    let shallow : (t279, _) idx_mut = (.a279.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1228;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1228 failed %d" i;
  );
  (* Deepening to (.a279.#b40) *)
  let idx : (t279, _) idx_mut = (.a279.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a279) *)
    let shallow : (t279, _) idx_mut = (.a279) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1229;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1229 failed %d" i;
    (* from (.a279.#b40) *)
    let shallow : (t279, _) idx_mut = (.a279.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1230;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1230 failed %d" i;
  );
  (* Deepening to (.b279) *)
  let idx : (t279, _) idx_mut = (.b279) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b279) *)
    let shallow : (t279, _) idx_mut = (.b279) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1231;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1231 failed %d" i;
  );

  (*******************************************)
  (*   t280 = { #{ int32#; int }; int32# }   *)
  (*******************************************)
  (* Deepening to (.a280) *)
  let idx : (t280, _) idx_mut = (.a280) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a280) *)
    let shallow : (t280, _) idx_mut = (.a280) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1232;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1232 failed %d" i;
  );
  (* Deepening to (.a280.#a40) *)
  let idx : (t280, _) idx_mut = (.a280.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a280) *)
    let shallow : (t280, _) idx_mut = (.a280) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1233;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1233 failed %d" i;
    (* from (.a280.#a40) *)
    let shallow : (t280, _) idx_mut = (.a280.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1234;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1234 failed %d" i;
  );
  (* Deepening to (.a280.#b40) *)
  let idx : (t280, _) idx_mut = (.a280.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a280) *)
    let shallow : (t280, _) idx_mut = (.a280) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1235;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1235 failed %d" i;
    (* from (.a280.#b40) *)
    let shallow : (t280, _) idx_mut = (.a280.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1236;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1236 failed %d" i;
  );
  (* Deepening to (.b280) *)
  let idx : (t280, _) idx_mut = (.b280) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b280) *)
    let shallow : (t280, _) idx_mut = (.b280) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1237;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1237 failed %d" i;
  );

  (**************************************)
  (*   t281 = { #{ int32#; int32# } }   *)
  (**************************************)
  (* Deepening to (.a281) *)
  let idx : (t281, _) idx_mut = (.a281) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a281) *)
    let shallow : (t281, _) idx_mut = (.a281) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1238;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1238 failed %d" i;
  );
  (* Deepening to (.a281.#a42) *)
  let idx : (t281, _) idx_mut = (.a281.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a281) *)
    let shallow : (t281, _) idx_mut = (.a281) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1239;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1239 failed %d" i;
    (* from (.a281.#a42) *)
    let shallow : (t281, _) idx_mut = (.a281.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1240;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1240 failed %d" i;
  );
  (* Deepening to (.a281.#b42) *)
  let idx : (t281, _) idx_mut = (.a281.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a281) *)
    let shallow : (t281, _) idx_mut = (.a281) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1241;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1241 failed %d" i;
    (* from (.a281.#b42) *)
    let shallow : (t281, _) idx_mut = (.a281.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1242;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1242 failed %d" i;
  );

  (*******************************************)
  (*   t282 = { #{ int32#; int32# }; int }   *)
  (*******************************************)
  (* Deepening to (.a282) *)
  let idx : (t282, _) idx_mut = (.a282) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a282) *)
    let shallow : (t282, _) idx_mut = (.a282) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1243;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1243 failed %d" i;
  );
  (* Deepening to (.a282.#a42) *)
  let idx : (t282, _) idx_mut = (.a282.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a282) *)
    let shallow : (t282, _) idx_mut = (.a282) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1244;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1244 failed %d" i;
    (* from (.a282.#a42) *)
    let shallow : (t282, _) idx_mut = (.a282.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1245;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1245 failed %d" i;
  );
  (* Deepening to (.a282.#b42) *)
  let idx : (t282, _) idx_mut = (.a282.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a282) *)
    let shallow : (t282, _) idx_mut = (.a282) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1246;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1246 failed %d" i;
    (* from (.a282.#b42) *)
    let shallow : (t282, _) idx_mut = (.a282.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1247;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1247 failed %d" i;
  );
  (* Deepening to (.b282) *)
  let idx : (t282, _) idx_mut = (.b282) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b282) *)
    let shallow : (t282, _) idx_mut = (.b282) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1248;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1248 failed %d" i;
  );

  (**********************************************)
  (*   t283 = { #{ int32#; int32# }; int32# }   *)
  (**********************************************)
  (* Deepening to (.a283) *)
  let idx : (t283, _) idx_mut = (.a283) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a283) *)
    let shallow : (t283, _) idx_mut = (.a283) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1249;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1249 failed %d" i;
  );
  (* Deepening to (.a283.#a42) *)
  let idx : (t283, _) idx_mut = (.a283.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a283) *)
    let shallow : (t283, _) idx_mut = (.a283) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1250;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1250 failed %d" i;
    (* from (.a283.#a42) *)
    let shallow : (t283, _) idx_mut = (.a283.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1251;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1251 failed %d" i;
  );
  (* Deepening to (.a283.#b42) *)
  let idx : (t283, _) idx_mut = (.a283.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a283) *)
    let shallow : (t283, _) idx_mut = (.a283) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1252;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1252 failed %d" i;
    (* from (.a283.#b42) *)
    let shallow : (t283, _) idx_mut = (.a283.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1253;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1253 failed %d" i;
  );
  (* Deepening to (.b283) *)
  let idx : (t283, _) idx_mut = (.b283) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b283) *)
    let shallow : (t283, _) idx_mut = (.b283) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1254;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1254 failed %d" i;
  );

  (*********************************************)
  (*   t285 = { #{ int32#; #{ int; int } } }   *)
  (*********************************************)
  (* Deepening to (.a285) *)
  let idx : (t285, _) idx_mut = (.a285) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a285) *)
    let shallow : (t285, _) idx_mut = (.a285) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1255;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1255 failed %d" i;
  );
  (* Deepening to (.a285.#a284) *)
  let idx : (t285, _) idx_mut = (.a285.#a284) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a285) *)
    let shallow : (t285, _) idx_mut = (.a285) in
    let deepened = (.idx_mut(shallow).#a284) in
    mark_test_run 1256;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1256 failed %d" i;
    (* from (.a285.#a284) *)
    let shallow : (t285, _) idx_mut = (.a285.#a284) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1257;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1257 failed %d" i;
  );
  (* Deepening to (.a285.#b284) *)
  let idx : (t285, _) idx_mut = (.a285.#b284) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a285) *)
    let shallow : (t285, _) idx_mut = (.a285) in
    let deepened = (.idx_mut(shallow).#b284) in
    mark_test_run 1258;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1258 failed %d" i;
    (* from (.a285.#b284) *)
    let shallow : (t285, _) idx_mut = (.a285.#b284) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1259;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1259 failed %d" i;
  );
  (* Deepening to (.a285.#b284.#a20) *)
  let idx : (t285, _) idx_mut = (.a285.#b284.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a285) *)
    let shallow : (t285, _) idx_mut = (.a285) in
    let deepened = (.idx_mut(shallow).#b284.#a20) in
    mark_test_run 1260;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1260 failed %d" i;
    (* from (.a285.#b284) *)
    let shallow : (t285, _) idx_mut = (.a285.#b284) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1261;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1261 failed %d" i;
    (* from (.a285.#b284.#a20) *)
    let shallow : (t285, _) idx_mut = (.a285.#b284.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1262;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1262 failed %d" i;
  );
  (* Deepening to (.a285.#b284.#b20) *)
  let idx : (t285, _) idx_mut = (.a285.#b284.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a285) *)
    let shallow : (t285, _) idx_mut = (.a285) in
    let deepened = (.idx_mut(shallow).#b284.#b20) in
    mark_test_run 1263;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1263 failed %d" i;
    (* from (.a285.#b284) *)
    let shallow : (t285, _) idx_mut = (.a285.#b284) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1264;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1264 failed %d" i;
    (* from (.a285.#b284.#b20) *)
    let shallow : (t285, _) idx_mut = (.a285.#b284.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1265;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1265 failed %d" i;
  );

  (************************************************)
  (*   t287 = { #{ int32#; #{ int; int32# } } }   *)
  (************************************************)
  (* Deepening to (.a287) *)
  let idx : (t287, _) idx_mut = (.a287) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a287) *)
    let shallow : (t287, _) idx_mut = (.a287) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1266;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1266 failed %d" i;
  );
  (* Deepening to (.a287.#a286) *)
  let idx : (t287, _) idx_mut = (.a287.#a286) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a287) *)
    let shallow : (t287, _) idx_mut = (.a287) in
    let deepened = (.idx_mut(shallow).#a286) in
    mark_test_run 1267;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1267 failed %d" i;
    (* from (.a287.#a286) *)
    let shallow : (t287, _) idx_mut = (.a287.#a286) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1268;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1268 failed %d" i;
  );
  (* Deepening to (.a287.#b286) *)
  let idx : (t287, _) idx_mut = (.a287.#b286) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a287) *)
    let shallow : (t287, _) idx_mut = (.a287) in
    let deepened = (.idx_mut(shallow).#b286) in
    mark_test_run 1269;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1269 failed %d" i;
    (* from (.a287.#b286) *)
    let shallow : (t287, _) idx_mut = (.a287.#b286) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1270;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1270 failed %d" i;
  );
  (* Deepening to (.a287.#b286.#a22) *)
  let idx : (t287, _) idx_mut = (.a287.#b286.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a287) *)
    let shallow : (t287, _) idx_mut = (.a287) in
    let deepened = (.idx_mut(shallow).#b286.#a22) in
    mark_test_run 1271;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1271 failed %d" i;
    (* from (.a287.#b286) *)
    let shallow : (t287, _) idx_mut = (.a287.#b286) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1272;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1272 failed %d" i;
    (* from (.a287.#b286.#a22) *)
    let shallow : (t287, _) idx_mut = (.a287.#b286.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1273;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1273 failed %d" i;
  );
  (* Deepening to (.a287.#b286.#b22) *)
  let idx : (t287, _) idx_mut = (.a287.#b286.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a287) *)
    let shallow : (t287, _) idx_mut = (.a287) in
    let deepened = (.idx_mut(shallow).#b286.#b22) in
    mark_test_run 1274;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1274 failed %d" i;
    (* from (.a287.#b286) *)
    let shallow : (t287, _) idx_mut = (.a287.#b286) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1275;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1275 failed %d" i;
    (* from (.a287.#b286.#b22) *)
    let shallow : (t287, _) idx_mut = (.a287.#b286.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1276;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1276 failed %d" i;
  );

  (************************************************)
  (*   t289 = { #{ int32#; #{ int32#; int } } }   *)
  (************************************************)
  (* Deepening to (.a289) *)
  let idx : (t289, _) idx_mut = (.a289) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a289) *)
    let shallow : (t289, _) idx_mut = (.a289) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1277;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1277 failed %d" i;
  );
  (* Deepening to (.a289.#a288) *)
  let idx : (t289, _) idx_mut = (.a289.#a288) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a289) *)
    let shallow : (t289, _) idx_mut = (.a289) in
    let deepened = (.idx_mut(shallow).#a288) in
    mark_test_run 1278;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1278 failed %d" i;
    (* from (.a289.#a288) *)
    let shallow : (t289, _) idx_mut = (.a289.#a288) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1279;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1279 failed %d" i;
  );
  (* Deepening to (.a289.#b288) *)
  let idx : (t289, _) idx_mut = (.a289.#b288) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a289) *)
    let shallow : (t289, _) idx_mut = (.a289) in
    let deepened = (.idx_mut(shallow).#b288) in
    mark_test_run 1280;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1280 failed %d" i;
    (* from (.a289.#b288) *)
    let shallow : (t289, _) idx_mut = (.a289.#b288) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1281;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1281 failed %d" i;
  );
  (* Deepening to (.a289.#b288.#a40) *)
  let idx : (t289, _) idx_mut = (.a289.#b288.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a289) *)
    let shallow : (t289, _) idx_mut = (.a289) in
    let deepened = (.idx_mut(shallow).#b288.#a40) in
    mark_test_run 1282;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1282 failed %d" i;
    (* from (.a289.#b288) *)
    let shallow : (t289, _) idx_mut = (.a289.#b288) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1283;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1283 failed %d" i;
    (* from (.a289.#b288.#a40) *)
    let shallow : (t289, _) idx_mut = (.a289.#b288.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1284;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1284 failed %d" i;
  );
  (* Deepening to (.a289.#b288.#b40) *)
  let idx : (t289, _) idx_mut = (.a289.#b288.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a289) *)
    let shallow : (t289, _) idx_mut = (.a289) in
    let deepened = (.idx_mut(shallow).#b288.#b40) in
    mark_test_run 1285;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1285 failed %d" i;
    (* from (.a289.#b288) *)
    let shallow : (t289, _) idx_mut = (.a289.#b288) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1286;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1286 failed %d" i;
    (* from (.a289.#b288.#b40) *)
    let shallow : (t289, _) idx_mut = (.a289.#b288.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1287;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1287 failed %d" i;
  );

  (***************************************************)
  (*   t291 = { #{ int32#; #{ int32#; int32# } } }   *)
  (***************************************************)
  (* Deepening to (.a291) *)
  let idx : (t291, _) idx_mut = (.a291) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a291) *)
    let shallow : (t291, _) idx_mut = (.a291) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1288;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1288 failed %d" i;
  );
  (* Deepening to (.a291.#a290) *)
  let idx : (t291, _) idx_mut = (.a291.#a290) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a291) *)
    let shallow : (t291, _) idx_mut = (.a291) in
    let deepened = (.idx_mut(shallow).#a290) in
    mark_test_run 1289;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1289 failed %d" i;
    (* from (.a291.#a290) *)
    let shallow : (t291, _) idx_mut = (.a291.#a290) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1290;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1290 failed %d" i;
  );
  (* Deepening to (.a291.#b290) *)
  let idx : (t291, _) idx_mut = (.a291.#b290) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a291) *)
    let shallow : (t291, _) idx_mut = (.a291) in
    let deepened = (.idx_mut(shallow).#b290) in
    mark_test_run 1291;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1291 failed %d" i;
    (* from (.a291.#b290) *)
    let shallow : (t291, _) idx_mut = (.a291.#b290) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1292;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1292 failed %d" i;
  );
  (* Deepening to (.a291.#b290.#a42) *)
  let idx : (t291, _) idx_mut = (.a291.#b290.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a291) *)
    let shallow : (t291, _) idx_mut = (.a291) in
    let deepened = (.idx_mut(shallow).#b290.#a42) in
    mark_test_run 1293;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1293 failed %d" i;
    (* from (.a291.#b290) *)
    let shallow : (t291, _) idx_mut = (.a291.#b290) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1294;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1294 failed %d" i;
    (* from (.a291.#b290.#a42) *)
    let shallow : (t291, _) idx_mut = (.a291.#b290.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1295;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1295 failed %d" i;
  );
  (* Deepening to (.a291.#b290.#b42) *)
  let idx : (t291, _) idx_mut = (.a291.#b290.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a291) *)
    let shallow : (t291, _) idx_mut = (.a291) in
    let deepened = (.idx_mut(shallow).#b290.#b42) in
    mark_test_run 1296;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1296 failed %d" i;
    (* from (.a291.#b290) *)
    let shallow : (t291, _) idx_mut = (.a291.#b290) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1297;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1297 failed %d" i;
    (* from (.a291.#b290.#b42) *)
    let shallow : (t291, _) idx_mut = (.a291.#b290.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1298;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1298 failed %d" i;
  );

  (*****************************)
  (*   t292 = { #{ float } }   *)
  (*****************************)
  (* Deepening to (.a292) *)
  let idx : (t292, _) idx_mut = (.a292) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a292) *)
    let shallow : (t292, _) idx_mut = (.a292) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1299;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1299 failed %d" i;
  );
  (* Deepening to (.a292.#a33) *)
  let idx : (t292, _) idx_mut = (.a292.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* Note: can't deepen (.a292) because it's a path to a flattened
       float, making its element type [float#] *)
    (* from (.a292.#a33) *)
    let shallow : (t292, _) idx_mut = (.a292.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1300;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1300 failed %d" i;
  );

  (**********************************)
  (*   t293 = { #{ float }; int }   *)
  (**********************************)
  (* Deepening to (.a293) *)
  let idx : (t293, _) idx_mut = (.a293) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a293) *)
    let shallow : (t293, _) idx_mut = (.a293) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1301;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1301 failed %d" i;
  );
  (* Deepening to (.a293.#a33) *)
  let idx : (t293, _) idx_mut = (.a293.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a293) *)
    let shallow : (t293, _) idx_mut = (.a293) in
    let deepened = (.idx_mut(shallow).#a33) in
    mark_test_run 1302;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1302 failed %d" i;
    (* from (.a293.#a33) *)
    let shallow : (t293, _) idx_mut = (.a293.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1303;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1303 failed %d" i;
  );
  (* Deepening to (.b293) *)
  let idx : (t293, _) idx_mut = (.b293) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b293) *)
    let shallow : (t293, _) idx_mut = (.b293) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1304;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1304 failed %d" i;
  );

  (************************************)
  (*   t294 = { #{ float }; float }   *)
  (************************************)
  (* Deepening to (.a294) *)
  let idx : (t294, _) idx_mut = (.a294) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a294) *)
    let shallow : (t294, _) idx_mut = (.a294) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1305;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1305 failed %d" i;
  );
  (* Deepening to (.a294.#a33) *)
  let idx : (t294, _) idx_mut = (.a294.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* Note: can't deepen (.a294) because it's a path to a flattened
       float, making its element type [float#] *)
    (* from (.a294.#a33) *)
    let shallow : (t294, _) idx_mut = (.a294.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1306;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1306 failed %d" i;
  );
  (* Deepening to (.b294) *)
  let idx : (t294, _) idx_mut = (.b294) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b294) *)
    let shallow : (t294, _) idx_mut = (.b294) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1307;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1307 failed %d" i;
  );

  (*************************************)
  (*   t295 = { #{ float }; float# }   *)
  (*************************************)
  (* Deepening to (.a295) *)
  let idx : (t295, _) idx_mut = (.a295) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a295) *)
    let shallow : (t295, _) idx_mut = (.a295) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1308;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1308 failed %d" i;
  );
  (* Deepening to (.a295.#a33) *)
  let idx : (t295, _) idx_mut = (.a295.#a33) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* Note: can't deepen (.a295) because it's a path to a flattened
       float, making its element type [float#] *)
    (* from (.a295.#a33) *)
    let shallow : (t295, _) idx_mut = (.a295.#a33) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1309;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1309 failed %d" i;
  );
  (* Deepening to (.b295) *)
  let idx : (t295, _) idx_mut = (.b295) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b295) *)
    let shallow : (t295, _) idx_mut = (.b295) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1310;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1310 failed %d" i;
  );

  (**********************************)
  (*   t296 = { #{ float; int } }   *)
  (**********************************)
  (* Deepening to (.a296) *)
  let idx : (t296, _) idx_mut = (.a296) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a296) *)
    let shallow : (t296, _) idx_mut = (.a296) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1311;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1311 failed %d" i;
  );
  (* Deepening to (.a296.#a49) *)
  let idx : (t296, _) idx_mut = (.a296.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a296) *)
    let shallow : (t296, _) idx_mut = (.a296) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1312;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1312 failed %d" i;
    (* from (.a296.#a49) *)
    let shallow : (t296, _) idx_mut = (.a296.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1313;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1313 failed %d" i;
  );
  (* Deepening to (.a296.#b49) *)
  let idx : (t296, _) idx_mut = (.a296.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a296) *)
    let shallow : (t296, _) idx_mut = (.a296) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1314;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1314 failed %d" i;
    (* from (.a296.#b49) *)
    let shallow : (t296, _) idx_mut = (.a296.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1315;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1315 failed %d" i;
  );

  (***************************************)
  (*   t297 = { #{ float; int }; int }   *)
  (***************************************)
  (* Deepening to (.a297) *)
  let idx : (t297, _) idx_mut = (.a297) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a297) *)
    let shallow : (t297, _) idx_mut = (.a297) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1316;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1316 failed %d" i;
  );
  (* Deepening to (.a297.#a49) *)
  let idx : (t297, _) idx_mut = (.a297.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a297) *)
    let shallow : (t297, _) idx_mut = (.a297) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1317;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1317 failed %d" i;
    (* from (.a297.#a49) *)
    let shallow : (t297, _) idx_mut = (.a297.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1318;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1318 failed %d" i;
  );
  (* Deepening to (.a297.#b49) *)
  let idx : (t297, _) idx_mut = (.a297.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a297) *)
    let shallow : (t297, _) idx_mut = (.a297) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1319;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1319 failed %d" i;
    (* from (.a297.#b49) *)
    let shallow : (t297, _) idx_mut = (.a297.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1320;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1320 failed %d" i;
  );
  (* Deepening to (.b297) *)
  let idx : (t297, _) idx_mut = (.b297) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b297) *)
    let shallow : (t297, _) idx_mut = (.b297) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1321;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1321 failed %d" i;
  );

  (*****************************************)
  (*   t298 = { #{ float; int }; float }   *)
  (*****************************************)
  (* Deepening to (.a298) *)
  let idx : (t298, _) idx_mut = (.a298) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a298) *)
    let shallow : (t298, _) idx_mut = (.a298) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1322;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1322 failed %d" i;
  );
  (* Deepening to (.a298.#a49) *)
  let idx : (t298, _) idx_mut = (.a298.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a298) *)
    let shallow : (t298, _) idx_mut = (.a298) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1323;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1323 failed %d" i;
    (* from (.a298.#a49) *)
    let shallow : (t298, _) idx_mut = (.a298.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1324;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1324 failed %d" i;
  );
  (* Deepening to (.a298.#b49) *)
  let idx : (t298, _) idx_mut = (.a298.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a298) *)
    let shallow : (t298, _) idx_mut = (.a298) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1325;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1325 failed %d" i;
    (* from (.a298.#b49) *)
    let shallow : (t298, _) idx_mut = (.a298.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1326;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1326 failed %d" i;
  );
  (* Deepening to (.b298) *)
  let idx : (t298, _) idx_mut = (.b298) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b298) *)
    let shallow : (t298, _) idx_mut = (.b298) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1327;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1327 failed %d" i;
  );

  (************************************)
  (*   t299 = { #{ float; float } }   *)
  (************************************)
  (* Deepening to (.a299) *)
  let idx : (t299, _) idx_mut = (.a299) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a299) *)
    let shallow : (t299, _) idx_mut = (.a299) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1328;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1328 failed %d" i;
  );
  (* Deepening to (.a299.#a51) *)
  let idx : (t299, _) idx_mut = (.a299.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a299) *)
    let shallow : (t299, _) idx_mut = (.a299) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1329;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1329 failed %d" i;
    (* from (.a299.#a51) *)
    let shallow : (t299, _) idx_mut = (.a299.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1330;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1330 failed %d" i;
  );
  (* Deepening to (.a299.#b51) *)
  let idx : (t299, _) idx_mut = (.a299.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a299) *)
    let shallow : (t299, _) idx_mut = (.a299) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1331;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1331 failed %d" i;
    (* from (.a299.#b51) *)
    let shallow : (t299, _) idx_mut = (.a299.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1332;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1332 failed %d" i;
  );

  (*****************************************)
  (*   t300 = { #{ float; float }; int }   *)
  (*****************************************)
  (* Deepening to (.a300) *)
  let idx : (t300, _) idx_mut = (.a300) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a300) *)
    let shallow : (t300, _) idx_mut = (.a300) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1333;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1333 failed %d" i;
  );
  (* Deepening to (.a300.#a51) *)
  let idx : (t300, _) idx_mut = (.a300.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a300) *)
    let shallow : (t300, _) idx_mut = (.a300) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1334;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1334 failed %d" i;
    (* from (.a300.#a51) *)
    let shallow : (t300, _) idx_mut = (.a300.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1335;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1335 failed %d" i;
  );
  (* Deepening to (.a300.#b51) *)
  let idx : (t300, _) idx_mut = (.a300.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a300) *)
    let shallow : (t300, _) idx_mut = (.a300) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1336;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1336 failed %d" i;
    (* from (.a300.#b51) *)
    let shallow : (t300, _) idx_mut = (.a300.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1337;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1337 failed %d" i;
  );
  (* Deepening to (.b300) *)
  let idx : (t300, _) idx_mut = (.b300) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b300) *)
    let shallow : (t300, _) idx_mut = (.b300) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1338;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1338 failed %d" i;
  );

  (*******************************************)
  (*   t301 = { #{ float; float }; float }   *)
  (*******************************************)
  (* Deepening to (.a301) *)
  let idx : (t301, _) idx_mut = (.a301) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a301) *)
    let shallow : (t301, _) idx_mut = (.a301) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1339;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1339 failed %d" i;
  );
  (* Deepening to (.a301.#a51) *)
  let idx : (t301, _) idx_mut = (.a301.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a301) *)
    let shallow : (t301, _) idx_mut = (.a301) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1340;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1340 failed %d" i;
    (* from (.a301.#a51) *)
    let shallow : (t301, _) idx_mut = (.a301.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1341;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1341 failed %d" i;
  );
  (* Deepening to (.a301.#b51) *)
  let idx : (t301, _) idx_mut = (.a301.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a301) *)
    let shallow : (t301, _) idx_mut = (.a301) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1342;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1342 failed %d" i;
    (* from (.a301.#b51) *)
    let shallow : (t301, _) idx_mut = (.a301.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1343;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1343 failed %d" i;
  );
  (* Deepening to (.b301) *)
  let idx : (t301, _) idx_mut = (.b301) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b301) *)
    let shallow : (t301, _) idx_mut = (.b301) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1344;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1344 failed %d" i;
  );

  (********************************************)
  (*   t302 = { #{ float; float }; float# }   *)
  (********************************************)
  (* Deepening to (.a302) *)
  let idx : (t302, _) idx_mut = (.a302) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a302) *)
    let shallow : (t302, _) idx_mut = (.a302) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1345;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1345 failed %d" i;
  );
  (* Deepening to (.a302.#a51) *)
  let idx : (t302, _) idx_mut = (.a302.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a302) *)
    let shallow : (t302, _) idx_mut = (.a302) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1346;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1346 failed %d" i;
    (* from (.a302.#a51) *)
    let shallow : (t302, _) idx_mut = (.a302.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1347;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1347 failed %d" i;
  );
  (* Deepening to (.a302.#b51) *)
  let idx : (t302, _) idx_mut = (.a302.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a302) *)
    let shallow : (t302, _) idx_mut = (.a302) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1348;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1348 failed %d" i;
    (* from (.a302.#b51) *)
    let shallow : (t302, _) idx_mut = (.a302.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1349;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1349 failed %d" i;
  );
  (* Deepening to (.b302) *)
  let idx : (t302, _) idx_mut = (.b302) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b302) *)
    let shallow : (t302, _) idx_mut = (.b302) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1350;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1350 failed %d" i;
  );

  (*************************************)
  (*   t303 = { #{ float; float# } }   *)
  (*************************************)
  (* Deepening to (.a303) *)
  let idx : (t303, _) idx_mut = (.a303) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a303) *)
    let shallow : (t303, _) idx_mut = (.a303) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1351;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1351 failed %d" i;
  );
  (* Deepening to (.a303.#a155) *)
  let idx : (t303, _) idx_mut = (.a303.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a303) *)
    let shallow : (t303, _) idx_mut = (.a303) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1352;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1352 failed %d" i;
    (* from (.a303.#a155) *)
    let shallow : (t303, _) idx_mut = (.a303.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1353;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1353 failed %d" i;
  );
  (* Deepening to (.a303.#b155) *)
  let idx : (t303, _) idx_mut = (.a303.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a303) *)
    let shallow : (t303, _) idx_mut = (.a303) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1354;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1354 failed %d" i;
    (* from (.a303.#b155) *)
    let shallow : (t303, _) idx_mut = (.a303.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1355;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1355 failed %d" i;
  );

  (********************************************)
  (*   t304 = { #{ float; float# }; float }   *)
  (********************************************)
  (* Deepening to (.a304) *)
  let idx : (t304, _) idx_mut = (.a304) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a304) *)
    let shallow : (t304, _) idx_mut = (.a304) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1356;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1356 failed %d" i;
  );
  (* Deepening to (.a304.#a155) *)
  let idx : (t304, _) idx_mut = (.a304.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a304) *)
    let shallow : (t304, _) idx_mut = (.a304) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1357;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1357 failed %d" i;
    (* from (.a304.#a155) *)
    let shallow : (t304, _) idx_mut = (.a304.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1358;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1358 failed %d" i;
  );
  (* Deepening to (.a304.#b155) *)
  let idx : (t304, _) idx_mut = (.a304.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a304) *)
    let shallow : (t304, _) idx_mut = (.a304) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1359;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1359 failed %d" i;
    (* from (.a304.#b155) *)
    let shallow : (t304, _) idx_mut = (.a304.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1360;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1360 failed %d" i;
  );
  (* Deepening to (.b304) *)
  let idx : (t304, _) idx_mut = (.b304) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b304) *)
    let shallow : (t304, _) idx_mut = (.b304) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1361;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1361 failed %d" i;
  );

  (*********************************************)
  (*   t305 = { #{ float; float# }; float# }   *)
  (*********************************************)
  (* Deepening to (.a305) *)
  let idx : (t305, _) idx_mut = (.a305) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a305) *)
    let shallow : (t305, _) idx_mut = (.a305) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1362;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1362 failed %d" i;
  );
  (* Deepening to (.a305.#a155) *)
  let idx : (t305, _) idx_mut = (.a305.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a305) *)
    let shallow : (t305, _) idx_mut = (.a305) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1363;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1363 failed %d" i;
    (* from (.a305.#a155) *)
    let shallow : (t305, _) idx_mut = (.a305.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1364;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1364 failed %d" i;
  );
  (* Deepening to (.a305.#b155) *)
  let idx : (t305, _) idx_mut = (.a305.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a305) *)
    let shallow : (t305, _) idx_mut = (.a305) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1365;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1365 failed %d" i;
    (* from (.a305.#b155) *)
    let shallow : (t305, _) idx_mut = (.a305.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1366;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1366 failed %d" i;
  );
  (* Deepening to (.b305) *)
  let idx : (t305, _) idx_mut = (.b305) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b305) *)
    let shallow : (t305, _) idx_mut = (.b305) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1367;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1367 failed %d" i;
  );

  (********************************************)
  (*   t307 = { #{ float; #{ int; int } } }   *)
  (********************************************)
  (* Deepening to (.a307) *)
  let idx : (t307, _) idx_mut = (.a307) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a307) *)
    let shallow : (t307, _) idx_mut = (.a307) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1368;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1368 failed %d" i;
  );
  (* Deepening to (.a307.#a306) *)
  let idx : (t307, _) idx_mut = (.a307.#a306) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a307) *)
    let shallow : (t307, _) idx_mut = (.a307) in
    let deepened = (.idx_mut(shallow).#a306) in
    mark_test_run 1369;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1369 failed %d" i;
    (* from (.a307.#a306) *)
    let shallow : (t307, _) idx_mut = (.a307.#a306) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1370;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1370 failed %d" i;
  );
  (* Deepening to (.a307.#b306) *)
  let idx : (t307, _) idx_mut = (.a307.#b306) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a307) *)
    let shallow : (t307, _) idx_mut = (.a307) in
    let deepened = (.idx_mut(shallow).#b306) in
    mark_test_run 1371;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1371 failed %d" i;
    (* from (.a307.#b306) *)
    let shallow : (t307, _) idx_mut = (.a307.#b306) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1372;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1372 failed %d" i;
  );
  (* Deepening to (.a307.#b306.#a20) *)
  let idx : (t307, _) idx_mut = (.a307.#b306.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a307) *)
    let shallow : (t307, _) idx_mut = (.a307) in
    let deepened = (.idx_mut(shallow).#b306.#a20) in
    mark_test_run 1373;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1373 failed %d" i;
    (* from (.a307.#b306) *)
    let shallow : (t307, _) idx_mut = (.a307.#b306) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1374;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1374 failed %d" i;
    (* from (.a307.#b306.#a20) *)
    let shallow : (t307, _) idx_mut = (.a307.#b306.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1375;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1375 failed %d" i;
  );
  (* Deepening to (.a307.#b306.#b20) *)
  let idx : (t307, _) idx_mut = (.a307.#b306.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a307) *)
    let shallow : (t307, _) idx_mut = (.a307) in
    let deepened = (.idx_mut(shallow).#b306.#b20) in
    mark_test_run 1376;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1376 failed %d" i;
    (* from (.a307.#b306) *)
    let shallow : (t307, _) idx_mut = (.a307.#b306) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1377;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1377 failed %d" i;
    (* from (.a307.#b306.#b20) *)
    let shallow : (t307, _) idx_mut = (.a307.#b306.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1378;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1378 failed %d" i;
  );

  (**********************************************)
  (*   t309 = { #{ float; #{ int; float } } }   *)
  (**********************************************)
  (* Deepening to (.a309) *)
  let idx : (t309, _) idx_mut = (.a309) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a309) *)
    let shallow : (t309, _) idx_mut = (.a309) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1379;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1379 failed %d" i;
  );
  (* Deepening to (.a309.#a308) *)
  let idx : (t309, _) idx_mut = (.a309.#a308) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a309) *)
    let shallow : (t309, _) idx_mut = (.a309) in
    let deepened = (.idx_mut(shallow).#a308) in
    mark_test_run 1380;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1380 failed %d" i;
    (* from (.a309.#a308) *)
    let shallow : (t309, _) idx_mut = (.a309.#a308) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1381;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1381 failed %d" i;
  );
  (* Deepening to (.a309.#b308) *)
  let idx : (t309, _) idx_mut = (.a309.#b308) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a309) *)
    let shallow : (t309, _) idx_mut = (.a309) in
    let deepened = (.idx_mut(shallow).#b308) in
    mark_test_run 1382;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1382 failed %d" i;
    (* from (.a309.#b308) *)
    let shallow : (t309, _) idx_mut = (.a309.#b308) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1383;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1383 failed %d" i;
  );
  (* Deepening to (.a309.#b308.#a24) *)
  let idx : (t309, _) idx_mut = (.a309.#b308.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a309) *)
    let shallow : (t309, _) idx_mut = (.a309) in
    let deepened = (.idx_mut(shallow).#b308.#a24) in
    mark_test_run 1384;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1384 failed %d" i;
    (* from (.a309.#b308) *)
    let shallow : (t309, _) idx_mut = (.a309.#b308) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1385;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1385 failed %d" i;
    (* from (.a309.#b308.#a24) *)
    let shallow : (t309, _) idx_mut = (.a309.#b308.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1386;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1386 failed %d" i;
  );
  (* Deepening to (.a309.#b308.#b24) *)
  let idx : (t309, _) idx_mut = (.a309.#b308.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a309) *)
    let shallow : (t309, _) idx_mut = (.a309) in
    let deepened = (.idx_mut(shallow).#b308.#b24) in
    mark_test_run 1387;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1387 failed %d" i;
    (* from (.a309.#b308) *)
    let shallow : (t309, _) idx_mut = (.a309.#b308) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1388;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1388 failed %d" i;
    (* from (.a309.#b308.#b24) *)
    let shallow : (t309, _) idx_mut = (.a309.#b308.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1389;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1389 failed %d" i;
  );

  (**********************************************)
  (*   t311 = { #{ float; #{ float; int } } }   *)
  (**********************************************)
  (* Deepening to (.a311) *)
  let idx : (t311, _) idx_mut = (.a311) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a311) *)
    let shallow : (t311, _) idx_mut = (.a311) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1390;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1390 failed %d" i;
  );
  (* Deepening to (.a311.#a310) *)
  let idx : (t311, _) idx_mut = (.a311.#a310) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a311) *)
    let shallow : (t311, _) idx_mut = (.a311) in
    let deepened = (.idx_mut(shallow).#a310) in
    mark_test_run 1391;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1391 failed %d" i;
    (* from (.a311.#a310) *)
    let shallow : (t311, _) idx_mut = (.a311.#a310) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1392;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1392 failed %d" i;
  );
  (* Deepening to (.a311.#b310) *)
  let idx : (t311, _) idx_mut = (.a311.#b310) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a311) *)
    let shallow : (t311, _) idx_mut = (.a311) in
    let deepened = (.idx_mut(shallow).#b310) in
    mark_test_run 1393;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1393 failed %d" i;
    (* from (.a311.#b310) *)
    let shallow : (t311, _) idx_mut = (.a311.#b310) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1394;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1394 failed %d" i;
  );
  (* Deepening to (.a311.#b310.#a49) *)
  let idx : (t311, _) idx_mut = (.a311.#b310.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a311) *)
    let shallow : (t311, _) idx_mut = (.a311) in
    let deepened = (.idx_mut(shallow).#b310.#a49) in
    mark_test_run 1395;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1395 failed %d" i;
    (* from (.a311.#b310) *)
    let shallow : (t311, _) idx_mut = (.a311.#b310) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1396;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1396 failed %d" i;
    (* from (.a311.#b310.#a49) *)
    let shallow : (t311, _) idx_mut = (.a311.#b310.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1397;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1397 failed %d" i;
  );
  (* Deepening to (.a311.#b310.#b49) *)
  let idx : (t311, _) idx_mut = (.a311.#b310.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a311) *)
    let shallow : (t311, _) idx_mut = (.a311) in
    let deepened = (.idx_mut(shallow).#b310.#b49) in
    mark_test_run 1398;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1398 failed %d" i;
    (* from (.a311.#b310) *)
    let shallow : (t311, _) idx_mut = (.a311.#b310) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1399;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1399 failed %d" i;
    (* from (.a311.#b310.#b49) *)
    let shallow : (t311, _) idx_mut = (.a311.#b310.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1400;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1400 failed %d" i;
  );

  (************************************************)
  (*   t313 = { #{ float; #{ float; float } } }   *)
  (************************************************)
  (* Deepening to (.a313) *)
  let idx : (t313, _) idx_mut = (.a313) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a313) *)
    let shallow : (t313, _) idx_mut = (.a313) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1401;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1401 failed %d" i;
  );
  (* Deepening to (.a313.#a312) *)
  let idx : (t313, _) idx_mut = (.a313.#a312) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a313) *)
    let shallow : (t313, _) idx_mut = (.a313) in
    let deepened = (.idx_mut(shallow).#a312) in
    mark_test_run 1402;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1402 failed %d" i;
    (* from (.a313.#a312) *)
    let shallow : (t313, _) idx_mut = (.a313.#a312) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1403;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1403 failed %d" i;
  );
  (* Deepening to (.a313.#b312) *)
  let idx : (t313, _) idx_mut = (.a313.#b312) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a313) *)
    let shallow : (t313, _) idx_mut = (.a313) in
    let deepened = (.idx_mut(shallow).#b312) in
    mark_test_run 1404;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1404 failed %d" i;
    (* from (.a313.#b312) *)
    let shallow : (t313, _) idx_mut = (.a313.#b312) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1405;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1405 failed %d" i;
  );
  (* Deepening to (.a313.#b312.#a51) *)
  let idx : (t313, _) idx_mut = (.a313.#b312.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a313) *)
    let shallow : (t313, _) idx_mut = (.a313) in
    let deepened = (.idx_mut(shallow).#b312.#a51) in
    mark_test_run 1406;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1406 failed %d" i;
    (* from (.a313.#b312) *)
    let shallow : (t313, _) idx_mut = (.a313.#b312) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1407;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1407 failed %d" i;
    (* from (.a313.#b312.#a51) *)
    let shallow : (t313, _) idx_mut = (.a313.#b312.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1408;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1408 failed %d" i;
  );
  (* Deepening to (.a313.#b312.#b51) *)
  let idx : (t313, _) idx_mut = (.a313.#b312.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a313) *)
    let shallow : (t313, _) idx_mut = (.a313) in
    let deepened = (.idx_mut(shallow).#b312.#b51) in
    mark_test_run 1409;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1409 failed %d" i;
    (* from (.a313.#b312) *)
    let shallow : (t313, _) idx_mut = (.a313.#b312) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1410;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1410 failed %d" i;
    (* from (.a313.#b312.#b51) *)
    let shallow : (t313, _) idx_mut = (.a313.#b312.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1411;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1411 failed %d" i;
  );

  (*************************************************)
  (*   t315 = { #{ float; #{ float; float# } } }   *)
  (*************************************************)
  (* Deepening to (.a315) *)
  let idx : (t315, _) idx_mut = (.a315) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a315) *)
    let shallow : (t315, _) idx_mut = (.a315) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1412;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1412 failed %d" i;
  );
  (* Deepening to (.a315.#a314) *)
  let idx : (t315, _) idx_mut = (.a315.#a314) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a315) *)
    let shallow : (t315, _) idx_mut = (.a315) in
    let deepened = (.idx_mut(shallow).#a314) in
    mark_test_run 1413;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1413 failed %d" i;
    (* from (.a315.#a314) *)
    let shallow : (t315, _) idx_mut = (.a315.#a314) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1414;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1414 failed %d" i;
  );
  (* Deepening to (.a315.#b314) *)
  let idx : (t315, _) idx_mut = (.a315.#b314) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a315) *)
    let shallow : (t315, _) idx_mut = (.a315) in
    let deepened = (.idx_mut(shallow).#b314) in
    mark_test_run 1415;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1415 failed %d" i;
    (* from (.a315.#b314) *)
    let shallow : (t315, _) idx_mut = (.a315.#b314) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1416;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1416 failed %d" i;
  );
  (* Deepening to (.a315.#b314.#a155) *)
  let idx : (t315, _) idx_mut = (.a315.#b314.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a315) *)
    let shallow : (t315, _) idx_mut = (.a315) in
    let deepened = (.idx_mut(shallow).#b314.#a155) in
    mark_test_run 1417;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1417 failed %d" i;
    (* from (.a315.#b314) *)
    let shallow : (t315, _) idx_mut = (.a315.#b314) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1418;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1418 failed %d" i;
    (* from (.a315.#b314.#a155) *)
    let shallow : (t315, _) idx_mut = (.a315.#b314.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1419;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1419 failed %d" i;
  );
  (* Deepening to (.a315.#b314.#b155) *)
  let idx : (t315, _) idx_mut = (.a315.#b314.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a315) *)
    let shallow : (t315, _) idx_mut = (.a315) in
    let deepened = (.idx_mut(shallow).#b314.#b155) in
    mark_test_run 1420;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1420 failed %d" i;
    (* from (.a315.#b314) *)
    let shallow : (t315, _) idx_mut = (.a315.#b314) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1421;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1421 failed %d" i;
    (* from (.a315.#b314.#b155) *)
    let shallow : (t315, _) idx_mut = (.a315.#b314.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1422;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1422 failed %d" i;
  );

  (*************************************************)
  (*   t317 = { #{ float; #{ float#; float } } }   *)
  (*************************************************)
  (* Deepening to (.a317) *)
  let idx : (t317, _) idx_mut = (.a317) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a317) *)
    let shallow : (t317, _) idx_mut = (.a317) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1423;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1423 failed %d" i;
  );
  (* Deepening to (.a317.#a316) *)
  let idx : (t317, _) idx_mut = (.a317.#a316) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a317) *)
    let shallow : (t317, _) idx_mut = (.a317) in
    let deepened = (.idx_mut(shallow).#a316) in
    mark_test_run 1424;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1424 failed %d" i;
    (* from (.a317.#a316) *)
    let shallow : (t317, _) idx_mut = (.a317.#a316) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1425;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1425 failed %d" i;
  );
  (* Deepening to (.a317.#b316) *)
  let idx : (t317, _) idx_mut = (.a317.#b316) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a317) *)
    let shallow : (t317, _) idx_mut = (.a317) in
    let deepened = (.idx_mut(shallow).#b316) in
    mark_test_run 1426;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1426 failed %d" i;
    (* from (.a317.#b316) *)
    let shallow : (t317, _) idx_mut = (.a317.#b316) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1427;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1427 failed %d" i;
  );
  (* Deepening to (.a317.#b316.#a163) *)
  let idx : (t317, _) idx_mut = (.a317.#b316.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a317) *)
    let shallow : (t317, _) idx_mut = (.a317) in
    let deepened = (.idx_mut(shallow).#b316.#a163) in
    mark_test_run 1428;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1428 failed %d" i;
    (* from (.a317.#b316) *)
    let shallow : (t317, _) idx_mut = (.a317.#b316) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1429;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1429 failed %d" i;
    (* from (.a317.#b316.#a163) *)
    let shallow : (t317, _) idx_mut = (.a317.#b316.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1430;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1430 failed %d" i;
  );
  (* Deepening to (.a317.#b316.#b163) *)
  let idx : (t317, _) idx_mut = (.a317.#b316.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a317) *)
    let shallow : (t317, _) idx_mut = (.a317) in
    let deepened = (.idx_mut(shallow).#b316.#b163) in
    mark_test_run 1431;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1431 failed %d" i;
    (* from (.a317.#b316) *)
    let shallow : (t317, _) idx_mut = (.a317.#b316) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1432;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1432 failed %d" i;
    (* from (.a317.#b316.#b163) *)
    let shallow : (t317, _) idx_mut = (.a317.#b316.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1433;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1433 failed %d" i;
  );

  (**************************************************)
  (*   t319 = { #{ float; #{ float#; float# } } }   *)
  (**************************************************)
  (* Deepening to (.a319) *)
  let idx : (t319, _) idx_mut = (.a319) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a319) *)
    let shallow : (t319, _) idx_mut = (.a319) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1434;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1434 failed %d" i;
  );
  (* Deepening to (.a319.#a318) *)
  let idx : (t319, _) idx_mut = (.a319.#a318) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a319) *)
    let shallow : (t319, _) idx_mut = (.a319) in
    let deepened = (.idx_mut(shallow).#a318) in
    mark_test_run 1435;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1435 failed %d" i;
    (* from (.a319.#a318) *)
    let shallow : (t319, _) idx_mut = (.a319.#a318) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1436;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1436 failed %d" i;
  );
  (* Deepening to (.a319.#b318) *)
  let idx : (t319, _) idx_mut = (.a319.#b318) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a319) *)
    let shallow : (t319, _) idx_mut = (.a319) in
    let deepened = (.idx_mut(shallow).#b318) in
    mark_test_run 1437;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1437 failed %d" i;
    (* from (.a319.#b318) *)
    let shallow : (t319, _) idx_mut = (.a319.#b318) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1438;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1438 failed %d" i;
  );
  (* Deepening to (.a319.#b318.#a165) *)
  let idx : (t319, _) idx_mut = (.a319.#b318.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a319) *)
    let shallow : (t319, _) idx_mut = (.a319) in
    let deepened = (.idx_mut(shallow).#b318.#a165) in
    mark_test_run 1439;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1439 failed %d" i;
    (* from (.a319.#b318) *)
    let shallow : (t319, _) idx_mut = (.a319.#b318) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1440;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1440 failed %d" i;
    (* from (.a319.#b318.#a165) *)
    let shallow : (t319, _) idx_mut = (.a319.#b318.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1441;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1441 failed %d" i;
  );
  (* Deepening to (.a319.#b318.#b165) *)
  let idx : (t319, _) idx_mut = (.a319.#b318.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a319) *)
    let shallow : (t319, _) idx_mut = (.a319) in
    let deepened = (.idx_mut(shallow).#b318.#b165) in
    mark_test_run 1442;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1442 failed %d" i;
    (* from (.a319.#b318) *)
    let shallow : (t319, _) idx_mut = (.a319.#b318) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1443;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1443 failed %d" i;
    (* from (.a319.#b318.#b165) *)
    let shallow : (t319, _) idx_mut = (.a319.#b318.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1444;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1444 failed %d" i;
  );

  (******************************)
  (*   t320 = { #{ float# } }   *)
  (******************************)
  (* Deepening to (.a320) *)
  let idx : (t320, _) idx_mut = (.a320) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a320) *)
    let shallow : (t320, _) idx_mut = (.a320) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1445;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1445 failed %d" i;
  );
  (* Deepening to (.a320.#a159) *)
  let idx : (t320, _) idx_mut = (.a320.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a320) *)
    let shallow : (t320, _) idx_mut = (.a320) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 1446;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1446 failed %d" i;
    (* from (.a320.#a159) *)
    let shallow : (t320, _) idx_mut = (.a320.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1447;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1447 failed %d" i;
  );

  (*************************************)
  (*   t321 = { #{ float# }; float }   *)
  (*************************************)
  (* Deepening to (.a321) *)
  let idx : (t321, _) idx_mut = (.a321) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a321) *)
    let shallow : (t321, _) idx_mut = (.a321) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1448;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1448 failed %d" i;
  );
  (* Deepening to (.a321.#a159) *)
  let idx : (t321, _) idx_mut = (.a321.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a321) *)
    let shallow : (t321, _) idx_mut = (.a321) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 1449;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1449 failed %d" i;
    (* from (.a321.#a159) *)
    let shallow : (t321, _) idx_mut = (.a321.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1450;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1450 failed %d" i;
  );
  (* Deepening to (.b321) *)
  let idx : (t321, _) idx_mut = (.b321) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b321) *)
    let shallow : (t321, _) idx_mut = (.b321) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1451;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1451 failed %d" i;
  );

  (**************************************)
  (*   t322 = { #{ float# }; float# }   *)
  (**************************************)
  (* Deepening to (.a322) *)
  let idx : (t322, _) idx_mut = (.a322) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a322) *)
    let shallow : (t322, _) idx_mut = (.a322) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1452;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1452 failed %d" i;
  );
  (* Deepening to (.a322.#a159) *)
  let idx : (t322, _) idx_mut = (.a322.#a159) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a322) *)
    let shallow : (t322, _) idx_mut = (.a322) in
    let deepened = (.idx_mut(shallow).#a159) in
    mark_test_run 1453;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1453 failed %d" i;
    (* from (.a322.#a159) *)
    let shallow : (t322, _) idx_mut = (.a322.#a159) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1454;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1454 failed %d" i;
  );
  (* Deepening to (.b322) *)
  let idx : (t322, _) idx_mut = (.b322) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b322) *)
    let shallow : (t322, _) idx_mut = (.b322) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1455;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1455 failed %d" i;
  );

  (*************************************)
  (*   t323 = { #{ float#; float } }   *)
  (*************************************)
  (* Deepening to (.a323) *)
  let idx : (t323, _) idx_mut = (.a323) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a323) *)
    let shallow : (t323, _) idx_mut = (.a323) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1456;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1456 failed %d" i;
  );
  (* Deepening to (.a323.#a163) *)
  let idx : (t323, _) idx_mut = (.a323.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a323) *)
    let shallow : (t323, _) idx_mut = (.a323) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1457;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1457 failed %d" i;
    (* from (.a323.#a163) *)
    let shallow : (t323, _) idx_mut = (.a323.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1458;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1458 failed %d" i;
  );
  (* Deepening to (.a323.#b163) *)
  let idx : (t323, _) idx_mut = (.a323.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a323) *)
    let shallow : (t323, _) idx_mut = (.a323) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1459;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1459 failed %d" i;
    (* from (.a323.#b163) *)
    let shallow : (t323, _) idx_mut = (.a323.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1460;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1460 failed %d" i;
  );

  (********************************************)
  (*   t324 = { #{ float#; float }; float }   *)
  (********************************************)
  (* Deepening to (.a324) *)
  let idx : (t324, _) idx_mut = (.a324) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a324) *)
    let shallow : (t324, _) idx_mut = (.a324) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1461;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1461 failed %d" i;
  );
  (* Deepening to (.a324.#a163) *)
  let idx : (t324, _) idx_mut = (.a324.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a324) *)
    let shallow : (t324, _) idx_mut = (.a324) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1462;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1462 failed %d" i;
    (* from (.a324.#a163) *)
    let shallow : (t324, _) idx_mut = (.a324.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1463;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1463 failed %d" i;
  );
  (* Deepening to (.a324.#b163) *)
  let idx : (t324, _) idx_mut = (.a324.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a324) *)
    let shallow : (t324, _) idx_mut = (.a324) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1464;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1464 failed %d" i;
    (* from (.a324.#b163) *)
    let shallow : (t324, _) idx_mut = (.a324.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1465;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1465 failed %d" i;
  );
  (* Deepening to (.b324) *)
  let idx : (t324, _) idx_mut = (.b324) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b324) *)
    let shallow : (t324, _) idx_mut = (.b324) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1466;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1466 failed %d" i;
  );

  (*********************************************)
  (*   t325 = { #{ float#; float }; float# }   *)
  (*********************************************)
  (* Deepening to (.a325) *)
  let idx : (t325, _) idx_mut = (.a325) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a325) *)
    let shallow : (t325, _) idx_mut = (.a325) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1467;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1467 failed %d" i;
  );
  (* Deepening to (.a325.#a163) *)
  let idx : (t325, _) idx_mut = (.a325.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a325) *)
    let shallow : (t325, _) idx_mut = (.a325) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1468;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1468 failed %d" i;
    (* from (.a325.#a163) *)
    let shallow : (t325, _) idx_mut = (.a325.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1469;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1469 failed %d" i;
  );
  (* Deepening to (.a325.#b163) *)
  let idx : (t325, _) idx_mut = (.a325.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a325) *)
    let shallow : (t325, _) idx_mut = (.a325) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1470;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1470 failed %d" i;
    (* from (.a325.#b163) *)
    let shallow : (t325, _) idx_mut = (.a325.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1471;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1471 failed %d" i;
  );
  (* Deepening to (.b325) *)
  let idx : (t325, _) idx_mut = (.b325) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b325) *)
    let shallow : (t325, _) idx_mut = (.b325) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1472;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1472 failed %d" i;
  );

  (**************************************)
  (*   t326 = { #{ float#; float# } }   *)
  (**************************************)
  (* Deepening to (.a326) *)
  let idx : (t326, _) idx_mut = (.a326) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a326) *)
    let shallow : (t326, _) idx_mut = (.a326) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1473;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1473 failed %d" i;
  );
  (* Deepening to (.a326.#a165) *)
  let idx : (t326, _) idx_mut = (.a326.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a326) *)
    let shallow : (t326, _) idx_mut = (.a326) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1474;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1474 failed %d" i;
    (* from (.a326.#a165) *)
    let shallow : (t326, _) idx_mut = (.a326.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1475;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1475 failed %d" i;
  );
  (* Deepening to (.a326.#b165) *)
  let idx : (t326, _) idx_mut = (.a326.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a326) *)
    let shallow : (t326, _) idx_mut = (.a326) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1476;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1476 failed %d" i;
    (* from (.a326.#b165) *)
    let shallow : (t326, _) idx_mut = (.a326.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1477;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1477 failed %d" i;
  );

  (*********************************************)
  (*   t327 = { #{ float#; float# }; float }   *)
  (*********************************************)
  (* Deepening to (.a327) *)
  let idx : (t327, _) idx_mut = (.a327) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a327) *)
    let shallow : (t327, _) idx_mut = (.a327) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1478;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1478 failed %d" i;
  );
  (* Deepening to (.a327.#a165) *)
  let idx : (t327, _) idx_mut = (.a327.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a327) *)
    let shallow : (t327, _) idx_mut = (.a327) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1479;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1479 failed %d" i;
    (* from (.a327.#a165) *)
    let shallow : (t327, _) idx_mut = (.a327.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1480;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1480 failed %d" i;
  );
  (* Deepening to (.a327.#b165) *)
  let idx : (t327, _) idx_mut = (.a327.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a327) *)
    let shallow : (t327, _) idx_mut = (.a327) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1481;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1481 failed %d" i;
    (* from (.a327.#b165) *)
    let shallow : (t327, _) idx_mut = (.a327.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1482;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1482 failed %d" i;
  );
  (* Deepening to (.b327) *)
  let idx : (t327, _) idx_mut = (.b327) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b327) *)
    let shallow : (t327, _) idx_mut = (.b327) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1483;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1483 failed %d" i;
  );

  (**********************************************)
  (*   t328 = { #{ float#; float# }; float# }   *)
  (**********************************************)
  (* Deepening to (.a328) *)
  let idx : (t328, _) idx_mut = (.a328) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a328) *)
    let shallow : (t328, _) idx_mut = (.a328) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1484;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1484 failed %d" i;
  );
  (* Deepening to (.a328.#a165) *)
  let idx : (t328, _) idx_mut = (.a328.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a328) *)
    let shallow : (t328, _) idx_mut = (.a328) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1485;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1485 failed %d" i;
    (* from (.a328.#a165) *)
    let shallow : (t328, _) idx_mut = (.a328.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1486;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1486 failed %d" i;
  );
  (* Deepening to (.a328.#b165) *)
  let idx : (t328, _) idx_mut = (.a328.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a328) *)
    let shallow : (t328, _) idx_mut = (.a328) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1487;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1487 failed %d" i;
    (* from (.a328.#b165) *)
    let shallow : (t328, _) idx_mut = (.a328.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1488;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1488 failed %d" i;
  );
  (* Deepening to (.b328) *)
  let idx : (t328, _) idx_mut = (.b328) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b328) *)
    let shallow : (t328, _) idx_mut = (.b328) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1489;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1489 failed %d" i;
  );

  (*************************************************)
  (*   t330 = { #{ float#; #{ float; float } } }   *)
  (*************************************************)
  (* Deepening to (.a330) *)
  let idx : (t330, _) idx_mut = (.a330) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a330) *)
    let shallow : (t330, _) idx_mut = (.a330) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1490;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1490 failed %d" i;
  );
  (* Deepening to (.a330.#a329) *)
  let idx : (t330, _) idx_mut = (.a330.#a329) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a330) *)
    let shallow : (t330, _) idx_mut = (.a330) in
    let deepened = (.idx_mut(shallow).#a329) in
    mark_test_run 1491;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1491 failed %d" i;
    (* from (.a330.#a329) *)
    let shallow : (t330, _) idx_mut = (.a330.#a329) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1492;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1492 failed %d" i;
  );
  (* Deepening to (.a330.#b329) *)
  let idx : (t330, _) idx_mut = (.a330.#b329) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a330) *)
    let shallow : (t330, _) idx_mut = (.a330) in
    let deepened = (.idx_mut(shallow).#b329) in
    mark_test_run 1493;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1493 failed %d" i;
    (* from (.a330.#b329) *)
    let shallow : (t330, _) idx_mut = (.a330.#b329) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1494;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1494 failed %d" i;
  );
  (* Deepening to (.a330.#b329.#a51) *)
  let idx : (t330, _) idx_mut = (.a330.#b329.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a330) *)
    let shallow : (t330, _) idx_mut = (.a330) in
    let deepened = (.idx_mut(shallow).#b329.#a51) in
    mark_test_run 1495;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1495 failed %d" i;
    (* from (.a330.#b329) *)
    let shallow : (t330, _) idx_mut = (.a330.#b329) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1496;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1496 failed %d" i;
    (* from (.a330.#b329.#a51) *)
    let shallow : (t330, _) idx_mut = (.a330.#b329.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1497;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1497 failed %d" i;
  );
  (* Deepening to (.a330.#b329.#b51) *)
  let idx : (t330, _) idx_mut = (.a330.#b329.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a330) *)
    let shallow : (t330, _) idx_mut = (.a330) in
    let deepened = (.idx_mut(shallow).#b329.#b51) in
    mark_test_run 1498;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1498 failed %d" i;
    (* from (.a330.#b329) *)
    let shallow : (t330, _) idx_mut = (.a330.#b329) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1499;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1499 failed %d" i;
    (* from (.a330.#b329.#b51) *)
    let shallow : (t330, _) idx_mut = (.a330.#b329.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1500;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1500 failed %d" i;
  );

  (**************************************************)
  (*   t332 = { #{ float#; #{ float; float# } } }   *)
  (**************************************************)
  (* Deepening to (.a332) *)
  let idx : (t332, _) idx_mut = (.a332) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a332) *)
    let shallow : (t332, _) idx_mut = (.a332) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1501;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1501 failed %d" i;
  );
  (* Deepening to (.a332.#a331) *)
  let idx : (t332, _) idx_mut = (.a332.#a331) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a332) *)
    let shallow : (t332, _) idx_mut = (.a332) in
    let deepened = (.idx_mut(shallow).#a331) in
    mark_test_run 1502;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1502 failed %d" i;
    (* from (.a332.#a331) *)
    let shallow : (t332, _) idx_mut = (.a332.#a331) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1503;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1503 failed %d" i;
  );
  (* Deepening to (.a332.#b331) *)
  let idx : (t332, _) idx_mut = (.a332.#b331) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a332) *)
    let shallow : (t332, _) idx_mut = (.a332) in
    let deepened = (.idx_mut(shallow).#b331) in
    mark_test_run 1504;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1504 failed %d" i;
    (* from (.a332.#b331) *)
    let shallow : (t332, _) idx_mut = (.a332.#b331) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1505;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1505 failed %d" i;
  );
  (* Deepening to (.a332.#b331.#a155) *)
  let idx : (t332, _) idx_mut = (.a332.#b331.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a332) *)
    let shallow : (t332, _) idx_mut = (.a332) in
    let deepened = (.idx_mut(shallow).#b331.#a155) in
    mark_test_run 1506;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1506 failed %d" i;
    (* from (.a332.#b331) *)
    let shallow : (t332, _) idx_mut = (.a332.#b331) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1507;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1507 failed %d" i;
    (* from (.a332.#b331.#a155) *)
    let shallow : (t332, _) idx_mut = (.a332.#b331.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1508;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1508 failed %d" i;
  );
  (* Deepening to (.a332.#b331.#b155) *)
  let idx : (t332, _) idx_mut = (.a332.#b331.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a332) *)
    let shallow : (t332, _) idx_mut = (.a332) in
    let deepened = (.idx_mut(shallow).#b331.#b155) in
    mark_test_run 1509;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1509 failed %d" i;
    (* from (.a332.#b331) *)
    let shallow : (t332, _) idx_mut = (.a332.#b331) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1510;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1510 failed %d" i;
    (* from (.a332.#b331.#b155) *)
    let shallow : (t332, _) idx_mut = (.a332.#b331.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1511;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1511 failed %d" i;
  );

  (**************************************************)
  (*   t334 = { #{ float#; #{ float#; float } } }   *)
  (**************************************************)
  (* Deepening to (.a334) *)
  let idx : (t334, _) idx_mut = (.a334) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a334) *)
    let shallow : (t334, _) idx_mut = (.a334) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1512;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1512 failed %d" i;
  );
  (* Deepening to (.a334.#a333) *)
  let idx : (t334, _) idx_mut = (.a334.#a333) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a334) *)
    let shallow : (t334, _) idx_mut = (.a334) in
    let deepened = (.idx_mut(shallow).#a333) in
    mark_test_run 1513;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1513 failed %d" i;
    (* from (.a334.#a333) *)
    let shallow : (t334, _) idx_mut = (.a334.#a333) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1514;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1514 failed %d" i;
  );
  (* Deepening to (.a334.#b333) *)
  let idx : (t334, _) idx_mut = (.a334.#b333) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a334) *)
    let shallow : (t334, _) idx_mut = (.a334) in
    let deepened = (.idx_mut(shallow).#b333) in
    mark_test_run 1515;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1515 failed %d" i;
    (* from (.a334.#b333) *)
    let shallow : (t334, _) idx_mut = (.a334.#b333) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1516;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1516 failed %d" i;
  );
  (* Deepening to (.a334.#b333.#a163) *)
  let idx : (t334, _) idx_mut = (.a334.#b333.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a334) *)
    let shallow : (t334, _) idx_mut = (.a334) in
    let deepened = (.idx_mut(shallow).#b333.#a163) in
    mark_test_run 1517;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1517 failed %d" i;
    (* from (.a334.#b333) *)
    let shallow : (t334, _) idx_mut = (.a334.#b333) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1518;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1518 failed %d" i;
    (* from (.a334.#b333.#a163) *)
    let shallow : (t334, _) idx_mut = (.a334.#b333.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1519;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1519 failed %d" i;
  );
  (* Deepening to (.a334.#b333.#b163) *)
  let idx : (t334, _) idx_mut = (.a334.#b333.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a334) *)
    let shallow : (t334, _) idx_mut = (.a334) in
    let deepened = (.idx_mut(shallow).#b333.#b163) in
    mark_test_run 1520;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1520 failed %d" i;
    (* from (.a334.#b333) *)
    let shallow : (t334, _) idx_mut = (.a334.#b333) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1521;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1521 failed %d" i;
    (* from (.a334.#b333.#b163) *)
    let shallow : (t334, _) idx_mut = (.a334.#b333.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1522;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1522 failed %d" i;
  );

  (***************************************************)
  (*   t336 = { #{ float#; #{ float#; float# } } }   *)
  (***************************************************)
  (* Deepening to (.a336) *)
  let idx : (t336, _) idx_mut = (.a336) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a336) *)
    let shallow : (t336, _) idx_mut = (.a336) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1523;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1523 failed %d" i;
  );
  (* Deepening to (.a336.#a335) *)
  let idx : (t336, _) idx_mut = (.a336.#a335) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a336) *)
    let shallow : (t336, _) idx_mut = (.a336) in
    let deepened = (.idx_mut(shallow).#a335) in
    mark_test_run 1524;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1524 failed %d" i;
    (* from (.a336.#a335) *)
    let shallow : (t336, _) idx_mut = (.a336.#a335) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1525;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1525 failed %d" i;
  );
  (* Deepening to (.a336.#b335) *)
  let idx : (t336, _) idx_mut = (.a336.#b335) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a336) *)
    let shallow : (t336, _) idx_mut = (.a336) in
    let deepened = (.idx_mut(shallow).#b335) in
    mark_test_run 1526;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1526 failed %d" i;
    (* from (.a336.#b335) *)
    let shallow : (t336, _) idx_mut = (.a336.#b335) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1527;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1527 failed %d" i;
  );
  (* Deepening to (.a336.#b335.#a165) *)
  let idx : (t336, _) idx_mut = (.a336.#b335.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a336) *)
    let shallow : (t336, _) idx_mut = (.a336) in
    let deepened = (.idx_mut(shallow).#b335.#a165) in
    mark_test_run 1528;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1528 failed %d" i;
    (* from (.a336.#b335) *)
    let shallow : (t336, _) idx_mut = (.a336.#b335) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1529;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1529 failed %d" i;
    (* from (.a336.#b335.#a165) *)
    let shallow : (t336, _) idx_mut = (.a336.#b335.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1530;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1530 failed %d" i;
  );
  (* Deepening to (.a336.#b335.#b165) *)
  let idx : (t336, _) idx_mut = (.a336.#b335.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a336) *)
    let shallow : (t336, _) idx_mut = (.a336) in
    let deepened = (.idx_mut(shallow).#b335.#b165) in
    mark_test_run 1531;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1531 failed %d" i;
    (* from (.a336.#b335) *)
    let shallow : (t336, _) idx_mut = (.a336.#b335) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1532;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1532 failed %d" i;
    (* from (.a336.#b335.#b165) *)
    let shallow : (t336, _) idx_mut = (.a336.#b335.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1533;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1533 failed %d" i;
  );

  (*************************************************************)
  (*   t339 = { #{ float32#; int64# }; #{ string; int64# } }   *)
  (*************************************************************)
  (* Deepening to (.a339) *)
  let idx : (t339, _) idx_mut = (.a339) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a339) *)
    let shallow : (t339, _) idx_mut = (.a339) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1534;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1534 failed %d" i;
  );
  (* Deepening to (.a339.#a337) *)
  let idx : (t339, _) idx_mut = (.a339.#a337) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a339) *)
    let shallow : (t339, _) idx_mut = (.a339) in
    let deepened = (.idx_mut(shallow).#a337) in
    mark_test_run 1535;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1535 failed %d" i;
    (* from (.a339.#a337) *)
    let shallow : (t339, _) idx_mut = (.a339.#a337) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1536;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1536 failed %d" i;
  );
  (* Deepening to (.a339.#b337) *)
  let idx : (t339, _) idx_mut = (.a339.#b337) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a339) *)
    let shallow : (t339, _) idx_mut = (.a339) in
    let deepened = (.idx_mut(shallow).#b337) in
    mark_test_run 1537;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1537 failed %d" i;
    (* from (.a339.#b337) *)
    let shallow : (t339, _) idx_mut = (.a339.#b337) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1538;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1538 failed %d" i;
  );
  (* Deepening to (.b339) *)
  let idx : (t339, _) idx_mut = (.b339) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b339) *)
    let shallow : (t339, _) idx_mut = (.b339) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1539;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1539 failed %d" i;
  );
  (* Deepening to (.b339.#a338) *)
  let idx : (t339, _) idx_mut = (.b339.#a338) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b339) *)
    let shallow : (t339, _) idx_mut = (.b339) in
    let deepened = (.idx_mut(shallow).#a338) in
    mark_test_run 1540;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1540 failed %d" i;
    (* from (.b339.#a338) *)
    let shallow : (t339, _) idx_mut = (.b339.#a338) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1541;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1541 failed %d" i;
  );
  (* Deepening to (.b339.#b338) *)
  let idx : (t339, _) idx_mut = (.b339.#b338) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b339) *)
    let shallow : (t339, _) idx_mut = (.b339) in
    let deepened = (.idx_mut(shallow).#b338) in
    mark_test_run 1542;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1542 failed %d" i;
    (* from (.b339.#b338) *)
    let shallow : (t339, _) idx_mut = (.b339.#b338) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1543;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1543 failed %d" i;
  );

  (********************************)
  (*   t340 = { #{ int64x2# } }   *)
  (********************************)
  (* Deepening to (.a340) *)
  let idx : (t340, _) idx_mut = (.a340) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a340) *)
    let shallow : (t340, _) idx_mut = (.a340) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1544;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1544 failed %d" i;
  );
  (* Deepening to (.a340.#a36) *)
  let idx : (t340, _) idx_mut = (.a340.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a340) *)
    let shallow : (t340, _) idx_mut = (.a340) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 1545;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1545 failed %d" i;
    (* from (.a340.#a36) *)
    let shallow : (t340, _) idx_mut = (.a340.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1546;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1546 failed %d" i;
  );

  (*************************************)
  (*   t341 = { #{ int64x2# }; int }   *)
  (*************************************)
  (* Deepening to (.a341) *)
  let idx : (t341, _) idx_mut = (.a341) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a341) *)
    let shallow : (t341, _) idx_mut = (.a341) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1547;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1547 failed %d" i;
  );
  (* Deepening to (.a341.#a36) *)
  let idx : (t341, _) idx_mut = (.a341.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a341) *)
    let shallow : (t341, _) idx_mut = (.a341) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 1548;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1548 failed %d" i;
    (* from (.a341.#a36) *)
    let shallow : (t341, _) idx_mut = (.a341.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1549;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1549 failed %d" i;
  );
  (* Deepening to (.b341) *)
  let idx : (t341, _) idx_mut = (.b341) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b341) *)
    let shallow : (t341, _) idx_mut = (.b341) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1550;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1550 failed %d" i;
  );

  (******************************************)
  (*   t342 = { #{ int64x2# }; int64x2# }   *)
  (******************************************)
  (* Deepening to (.a342) *)
  let idx : (t342, _) idx_mut = (.a342) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a342) *)
    let shallow : (t342, _) idx_mut = (.a342) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1551;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1551 failed %d" i;
  );
  (* Deepening to (.a342.#a36) *)
  let idx : (t342, _) idx_mut = (.a342.#a36) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a342) *)
    let shallow : (t342, _) idx_mut = (.a342) in
    let deepened = (.idx_mut(shallow).#a36) in
    mark_test_run 1552;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1552 failed %d" i;
    (* from (.a342.#a36) *)
    let shallow : (t342, _) idx_mut = (.a342.#a36) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1553;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1553 failed %d" i;
  );
  (* Deepening to (.b342) *)
  let idx : (t342, _) idx_mut = (.b342) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b342) *)
    let shallow : (t342, _) idx_mut = (.b342) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1554;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1554 failed %d" i;
  );

  (*************************************)
  (*   t343 = { #{ int64x2#; int } }   *)
  (*************************************)
  (* Deepening to (.a343) *)
  let idx : (t343, _) idx_mut = (.a343) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a343) *)
    let shallow : (t343, _) idx_mut = (.a343) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1555;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1555 failed %d" i;
  );
  (* Deepening to (.a343.#a58) *)
  let idx : (t343, _) idx_mut = (.a343.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a343) *)
    let shallow : (t343, _) idx_mut = (.a343) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1556;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1556 failed %d" i;
    (* from (.a343.#a58) *)
    let shallow : (t343, _) idx_mut = (.a343.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1557;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1557 failed %d" i;
  );
  (* Deepening to (.a343.#b58) *)
  let idx : (t343, _) idx_mut = (.a343.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a343) *)
    let shallow : (t343, _) idx_mut = (.a343) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1558;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1558 failed %d" i;
    (* from (.a343.#b58) *)
    let shallow : (t343, _) idx_mut = (.a343.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1559;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1559 failed %d" i;
  );

  (******************************************)
  (*   t344 = { #{ int64x2#; int }; int }   *)
  (******************************************)
  (* Deepening to (.a344) *)
  let idx : (t344, _) idx_mut = (.a344) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a344) *)
    let shallow : (t344, _) idx_mut = (.a344) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1560;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1560 failed %d" i;
  );
  (* Deepening to (.a344.#a58) *)
  let idx : (t344, _) idx_mut = (.a344.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a344) *)
    let shallow : (t344, _) idx_mut = (.a344) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1561;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1561 failed %d" i;
    (* from (.a344.#a58) *)
    let shallow : (t344, _) idx_mut = (.a344.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1562;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1562 failed %d" i;
  );
  (* Deepening to (.a344.#b58) *)
  let idx : (t344, _) idx_mut = (.a344.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a344) *)
    let shallow : (t344, _) idx_mut = (.a344) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1563;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1563 failed %d" i;
    (* from (.a344.#b58) *)
    let shallow : (t344, _) idx_mut = (.a344.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1564;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1564 failed %d" i;
  );
  (* Deepening to (.b344) *)
  let idx : (t344, _) idx_mut = (.b344) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b344) *)
    let shallow : (t344, _) idx_mut = (.b344) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1565;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1565 failed %d" i;
  );

  (***********************************************)
  (*   t345 = { #{ int64x2#; int }; int64x2# }   *)
  (***********************************************)
  (* Deepening to (.a345) *)
  let idx : (t345, _) idx_mut = (.a345) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a345) *)
    let shallow : (t345, _) idx_mut = (.a345) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1566;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1566 failed %d" i;
  );
  (* Deepening to (.a345.#a58) *)
  let idx : (t345, _) idx_mut = (.a345.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a345) *)
    let shallow : (t345, _) idx_mut = (.a345) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1567;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1567 failed %d" i;
    (* from (.a345.#a58) *)
    let shallow : (t345, _) idx_mut = (.a345.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1568;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1568 failed %d" i;
  );
  (* Deepening to (.a345.#b58) *)
  let idx : (t345, _) idx_mut = (.a345.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a345) *)
    let shallow : (t345, _) idx_mut = (.a345) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1569;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1569 failed %d" i;
    (* from (.a345.#b58) *)
    let shallow : (t345, _) idx_mut = (.a345.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1570;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1570 failed %d" i;
  );
  (* Deepening to (.b345) *)
  let idx : (t345, _) idx_mut = (.b345) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b345) *)
    let shallow : (t345, _) idx_mut = (.b345) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1571;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1571 failed %d" i;
  );

  (************************************************************)
  (*   t348 = { #{ int64x2#; string }; #{ int64; float# } }   *)
  (************************************************************)
  (* Deepening to (.a348) *)
  let idx : (t348, _) idx_mut = (.a348) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a348) *)
    let shallow : (t348, _) idx_mut = (.a348) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1572;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1572 failed %d" i;
  );
  (* Deepening to (.a348.#a346) *)
  let idx : (t348, _) idx_mut = (.a348.#a346) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a348) *)
    let shallow : (t348, _) idx_mut = (.a348) in
    let deepened = (.idx_mut(shallow).#a346) in
    mark_test_run 1573;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1573 failed %d" i;
    (* from (.a348.#a346) *)
    let shallow : (t348, _) idx_mut = (.a348.#a346) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1574;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1574 failed %d" i;
  );
  (* Deepening to (.a348.#b346) *)
  let idx : (t348, _) idx_mut = (.a348.#b346) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a348) *)
    let shallow : (t348, _) idx_mut = (.a348) in
    let deepened = (.idx_mut(shallow).#b346) in
    mark_test_run 1575;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1575 failed %d" i;
    (* from (.a348.#b346) *)
    let shallow : (t348, _) idx_mut = (.a348.#b346) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1576;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1576 failed %d" i;
  );
  (* Deepening to (.b348) *)
  let idx : (t348, _) idx_mut = (.b348) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b348) *)
    let shallow : (t348, _) idx_mut = (.b348) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1577;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1577 failed %d" i;
  );
  (* Deepening to (.b348.#a347) *)
  let idx : (t348, _) idx_mut = (.b348.#a347) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b348) *)
    let shallow : (t348, _) idx_mut = (.b348) in
    let deepened = (.idx_mut(shallow).#a347) in
    mark_test_run 1578;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1578 failed %d" i;
    (* from (.b348.#a347) *)
    let shallow : (t348, _) idx_mut = (.b348.#a347) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1579;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1579 failed %d" i;
  );
  (* Deepening to (.b348.#b347) *)
  let idx : (t348, _) idx_mut = (.b348.#b347) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b348) *)
    let shallow : (t348, _) idx_mut = (.b348) in
    let deepened = (.idx_mut(shallow).#b347) in
    mark_test_run 1580;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1580 failed %d" i;
    (* from (.b348.#b347) *)
    let shallow : (t348, _) idx_mut = (.b348.#b347) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1581;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1581 failed %d" i;
  );

  (******************************************)
  (*   t349 = { #{ int64x2#; int64x2# } }   *)
  (******************************************)
  (* Deepening to (.a349) *)
  let idx : (t349, _) idx_mut = (.a349) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a349) *)
    let shallow : (t349, _) idx_mut = (.a349) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1582;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1582 failed %d" i;
  );
  (* Deepening to (.a349.#a60) *)
  let idx : (t349, _) idx_mut = (.a349.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a349) *)
    let shallow : (t349, _) idx_mut = (.a349) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1583;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1583 failed %d" i;
    (* from (.a349.#a60) *)
    let shallow : (t349, _) idx_mut = (.a349.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1584;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1584 failed %d" i;
  );
  (* Deepening to (.a349.#b60) *)
  let idx : (t349, _) idx_mut = (.a349.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a349) *)
    let shallow : (t349, _) idx_mut = (.a349) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1585;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1585 failed %d" i;
    (* from (.a349.#b60) *)
    let shallow : (t349, _) idx_mut = (.a349.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1586;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1586 failed %d" i;
  );

  (***********************************************)
  (*   t350 = { #{ int64x2#; int64x2# }; int }   *)
  (***********************************************)
  (* Deepening to (.a350) *)
  let idx : (t350, _) idx_mut = (.a350) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a350) *)
    let shallow : (t350, _) idx_mut = (.a350) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1587;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1587 failed %d" i;
  );
  (* Deepening to (.a350.#a60) *)
  let idx : (t350, _) idx_mut = (.a350.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a350) *)
    let shallow : (t350, _) idx_mut = (.a350) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1588;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1588 failed %d" i;
    (* from (.a350.#a60) *)
    let shallow : (t350, _) idx_mut = (.a350.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1589;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1589 failed %d" i;
  );
  (* Deepening to (.a350.#b60) *)
  let idx : (t350, _) idx_mut = (.a350.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a350) *)
    let shallow : (t350, _) idx_mut = (.a350) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1590;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1590 failed %d" i;
    (* from (.a350.#b60) *)
    let shallow : (t350, _) idx_mut = (.a350.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1591;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1591 failed %d" i;
  );
  (* Deepening to (.b350) *)
  let idx : (t350, _) idx_mut = (.b350) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b350) *)
    let shallow : (t350, _) idx_mut = (.b350) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1592;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1592 failed %d" i;
  );

  (****************************************************)
  (*   t351 = { #{ int64x2#; int64x2# }; int64x2# }   *)
  (****************************************************)
  (* Deepening to (.a351) *)
  let idx : (t351, _) idx_mut = (.a351) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a351) *)
    let shallow : (t351, _) idx_mut = (.a351) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1593;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1593 failed %d" i;
  );
  (* Deepening to (.a351.#a60) *)
  let idx : (t351, _) idx_mut = (.a351.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a351) *)
    let shallow : (t351, _) idx_mut = (.a351) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1594;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1594 failed %d" i;
    (* from (.a351.#a60) *)
    let shallow : (t351, _) idx_mut = (.a351.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1595;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1595 failed %d" i;
  );
  (* Deepening to (.a351.#b60) *)
  let idx : (t351, _) idx_mut = (.a351.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a351) *)
    let shallow : (t351, _) idx_mut = (.a351) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1596;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1596 failed %d" i;
    (* from (.a351.#b60) *)
    let shallow : (t351, _) idx_mut = (.a351.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1597;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1597 failed %d" i;
  );
  (* Deepening to (.b351) *)
  let idx : (t351, _) idx_mut = (.b351) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.b351) *)
    let shallow : (t351, _) idx_mut = (.b351) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1598;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1598 failed %d" i;
  );

  (***********************************************)
  (*   t353 = { #{ int64x2#; #{ int; int } } }   *)
  (***********************************************)
  (* Deepening to (.a353) *)
  let idx : (t353, _) idx_mut = (.a353) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a353) *)
    let shallow : (t353, _) idx_mut = (.a353) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1599;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1599 failed %d" i;
  );
  (* Deepening to (.a353.#a352) *)
  let idx : (t353, _) idx_mut = (.a353.#a352) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a353) *)
    let shallow : (t353, _) idx_mut = (.a353) in
    let deepened = (.idx_mut(shallow).#a352) in
    mark_test_run 1600;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1600 failed %d" i;
    (* from (.a353.#a352) *)
    let shallow : (t353, _) idx_mut = (.a353.#a352) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1601;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1601 failed %d" i;
  );
  (* Deepening to (.a353.#b352) *)
  let idx : (t353, _) idx_mut = (.a353.#b352) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a353) *)
    let shallow : (t353, _) idx_mut = (.a353) in
    let deepened = (.idx_mut(shallow).#b352) in
    mark_test_run 1602;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1602 failed %d" i;
    (* from (.a353.#b352) *)
    let shallow : (t353, _) idx_mut = (.a353.#b352) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1603;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1603 failed %d" i;
  );
  (* Deepening to (.a353.#b352.#a20) *)
  let idx : (t353, _) idx_mut = (.a353.#b352.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a353) *)
    let shallow : (t353, _) idx_mut = (.a353) in
    let deepened = (.idx_mut(shallow).#b352.#a20) in
    mark_test_run 1604;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1604 failed %d" i;
    (* from (.a353.#b352) *)
    let shallow : (t353, _) idx_mut = (.a353.#b352) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1605;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1605 failed %d" i;
    (* from (.a353.#b352.#a20) *)
    let shallow : (t353, _) idx_mut = (.a353.#b352.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1606;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1606 failed %d" i;
  );
  (* Deepening to (.a353.#b352.#b20) *)
  let idx : (t353, _) idx_mut = (.a353.#b352.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a353) *)
    let shallow : (t353, _) idx_mut = (.a353) in
    let deepened = (.idx_mut(shallow).#b352.#b20) in
    mark_test_run 1607;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1607 failed %d" i;
    (* from (.a353.#b352) *)
    let shallow : (t353, _) idx_mut = (.a353.#b352) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1608;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1608 failed %d" i;
    (* from (.a353.#b352.#b20) *)
    let shallow : (t353, _) idx_mut = (.a353.#b352.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1609;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1609 failed %d" i;
  );

  (****************************************************)
  (*   t355 = { #{ int64x2#; #{ int; int64x2# } } }   *)
  (****************************************************)
  (* Deepening to (.a355) *)
  let idx : (t355, _) idx_mut = (.a355) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a355) *)
    let shallow : (t355, _) idx_mut = (.a355) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1610;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1610 failed %d" i;
  );
  (* Deepening to (.a355.#a354) *)
  let idx : (t355, _) idx_mut = (.a355.#a354) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a355) *)
    let shallow : (t355, _) idx_mut = (.a355) in
    let deepened = (.idx_mut(shallow).#a354) in
    mark_test_run 1611;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1611 failed %d" i;
    (* from (.a355.#a354) *)
    let shallow : (t355, _) idx_mut = (.a355.#a354) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1612;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1612 failed %d" i;
  );
  (* Deepening to (.a355.#b354) *)
  let idx : (t355, _) idx_mut = (.a355.#b354) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a355) *)
    let shallow : (t355, _) idx_mut = (.a355) in
    let deepened = (.idx_mut(shallow).#b354) in
    mark_test_run 1613;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1613 failed %d" i;
    (* from (.a355.#b354) *)
    let shallow : (t355, _) idx_mut = (.a355.#b354) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1614;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1614 failed %d" i;
  );
  (* Deepening to (.a355.#b354.#a26) *)
  let idx : (t355, _) idx_mut = (.a355.#b354.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a355) *)
    let shallow : (t355, _) idx_mut = (.a355) in
    let deepened = (.idx_mut(shallow).#b354.#a26) in
    mark_test_run 1615;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1615 failed %d" i;
    (* from (.a355.#b354) *)
    let shallow : (t355, _) idx_mut = (.a355.#b354) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1616;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1616 failed %d" i;
    (* from (.a355.#b354.#a26) *)
    let shallow : (t355, _) idx_mut = (.a355.#b354.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1617;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1617 failed %d" i;
  );
  (* Deepening to (.a355.#b354.#b26) *)
  let idx : (t355, _) idx_mut = (.a355.#b354.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a355) *)
    let shallow : (t355, _) idx_mut = (.a355) in
    let deepened = (.idx_mut(shallow).#b354.#b26) in
    mark_test_run 1618;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1618 failed %d" i;
    (* from (.a355.#b354) *)
    let shallow : (t355, _) idx_mut = (.a355.#b354) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1619;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1619 failed %d" i;
    (* from (.a355.#b354.#b26) *)
    let shallow : (t355, _) idx_mut = (.a355.#b354.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1620;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1620 failed %d" i;
  );

  (****************************************************)
  (*   t357 = { #{ int64x2#; #{ int64x2#; int } } }   *)
  (****************************************************)
  (* Deepening to (.a357) *)
  let idx : (t357, _) idx_mut = (.a357) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a357) *)
    let shallow : (t357, _) idx_mut = (.a357) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1621;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1621 failed %d" i;
  );
  (* Deepening to (.a357.#a356) *)
  let idx : (t357, _) idx_mut = (.a357.#a356) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a357) *)
    let shallow : (t357, _) idx_mut = (.a357) in
    let deepened = (.idx_mut(shallow).#a356) in
    mark_test_run 1622;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1622 failed %d" i;
    (* from (.a357.#a356) *)
    let shallow : (t357, _) idx_mut = (.a357.#a356) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1623;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1623 failed %d" i;
  );
  (* Deepening to (.a357.#b356) *)
  let idx : (t357, _) idx_mut = (.a357.#b356) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a357) *)
    let shallow : (t357, _) idx_mut = (.a357) in
    let deepened = (.idx_mut(shallow).#b356) in
    mark_test_run 1624;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1624 failed %d" i;
    (* from (.a357.#b356) *)
    let shallow : (t357, _) idx_mut = (.a357.#b356) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1625;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1625 failed %d" i;
  );
  (* Deepening to (.a357.#b356.#a58) *)
  let idx : (t357, _) idx_mut = (.a357.#b356.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a357) *)
    let shallow : (t357, _) idx_mut = (.a357) in
    let deepened = (.idx_mut(shallow).#b356.#a58) in
    mark_test_run 1626;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1626 failed %d" i;
    (* from (.a357.#b356) *)
    let shallow : (t357, _) idx_mut = (.a357.#b356) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1627;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1627 failed %d" i;
    (* from (.a357.#b356.#a58) *)
    let shallow : (t357, _) idx_mut = (.a357.#b356.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1628;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1628 failed %d" i;
  );
  (* Deepening to (.a357.#b356.#b58) *)
  let idx : (t357, _) idx_mut = (.a357.#b356.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a357) *)
    let shallow : (t357, _) idx_mut = (.a357) in
    let deepened = (.idx_mut(shallow).#b356.#b58) in
    mark_test_run 1629;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1629 failed %d" i;
    (* from (.a357.#b356) *)
    let shallow : (t357, _) idx_mut = (.a357.#b356) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1630;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1630 failed %d" i;
    (* from (.a357.#b356.#b58) *)
    let shallow : (t357, _) idx_mut = (.a357.#b356.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1631;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1631 failed %d" i;
  );

  (*********************************************************)
  (*   t359 = { #{ int64x2#; #{ int64x2#; int64x2# } } }   *)
  (*********************************************************)
  (* Deepening to (.a359) *)
  let idx : (t359, _) idx_mut = (.a359) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a359) *)
    let shallow : (t359, _) idx_mut = (.a359) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1632;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1632 failed %d" i;
  );
  (* Deepening to (.a359.#a358) *)
  let idx : (t359, _) idx_mut = (.a359.#a358) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a359) *)
    let shallow : (t359, _) idx_mut = (.a359) in
    let deepened = (.idx_mut(shallow).#a358) in
    mark_test_run 1633;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1633 failed %d" i;
    (* from (.a359.#a358) *)
    let shallow : (t359, _) idx_mut = (.a359.#a358) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1634;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1634 failed %d" i;
  );
  (* Deepening to (.a359.#b358) *)
  let idx : (t359, _) idx_mut = (.a359.#b358) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a359) *)
    let shallow : (t359, _) idx_mut = (.a359) in
    let deepened = (.idx_mut(shallow).#b358) in
    mark_test_run 1635;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1635 failed %d" i;
    (* from (.a359.#b358) *)
    let shallow : (t359, _) idx_mut = (.a359.#b358) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1636;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1636 failed %d" i;
  );
  (* Deepening to (.a359.#b358.#a60) *)
  let idx : (t359, _) idx_mut = (.a359.#b358.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a359) *)
    let shallow : (t359, _) idx_mut = (.a359) in
    let deepened = (.idx_mut(shallow).#b358.#a60) in
    mark_test_run 1637;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1637 failed %d" i;
    (* from (.a359.#b358) *)
    let shallow : (t359, _) idx_mut = (.a359.#b358) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1638;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1638 failed %d" i;
    (* from (.a359.#b358.#a60) *)
    let shallow : (t359, _) idx_mut = (.a359.#b358.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1639;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1639 failed %d" i;
  );
  (* Deepening to (.a359.#b358.#b60) *)
  let idx : (t359, _) idx_mut = (.a359.#b358.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a359) *)
    let shallow : (t359, _) idx_mut = (.a359) in
    let deepened = (.idx_mut(shallow).#b358.#b60) in
    mark_test_run 1640;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1640 failed %d" i;
    (* from (.a359.#b358) *)
    let shallow : (t359, _) idx_mut = (.a359.#b358) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1641;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1641 failed %d" i;
    (* from (.a359.#b358.#b60) *)
    let shallow : (t359, _) idx_mut = (.a359.#b358.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1642;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1642 failed %d" i;
  );

  (******************************************)
  (*   t361 = { #{ #{ int; int }; int } }   *)
  (******************************************)
  (* Deepening to (.a361) *)
  let idx : (t361, _) idx_mut = (.a361) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a361) *)
    let shallow : (t361, _) idx_mut = (.a361) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1643;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1643 failed %d" i;
  );
  (* Deepening to (.a361.#a360) *)
  let idx : (t361, _) idx_mut = (.a361.#a360) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a361) *)
    let shallow : (t361, _) idx_mut = (.a361) in
    let deepened = (.idx_mut(shallow).#a360) in
    mark_test_run 1644;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1644 failed %d" i;
    (* from (.a361.#a360) *)
    let shallow : (t361, _) idx_mut = (.a361.#a360) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1645;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1645 failed %d" i;
  );
  (* Deepening to (.a361.#b360) *)
  let idx : (t361, _) idx_mut = (.a361.#b360) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a361) *)
    let shallow : (t361, _) idx_mut = (.a361) in
    let deepened = (.idx_mut(shallow).#b360) in
    mark_test_run 1646;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1646 failed %d" i;
    (* from (.a361.#b360) *)
    let shallow : (t361, _) idx_mut = (.a361.#b360) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1647;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1647 failed %d" i;
  );
  (* Deepening to (.a361.#a360.#a20) *)
  let idx : (t361, _) idx_mut = (.a361.#a360.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a361) *)
    let shallow : (t361, _) idx_mut = (.a361) in
    let deepened = (.idx_mut(shallow).#a360.#a20) in
    mark_test_run 1648;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1648 failed %d" i;
    (* from (.a361.#a360) *)
    let shallow : (t361, _) idx_mut = (.a361.#a360) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1649;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1649 failed %d" i;
    (* from (.a361.#a360.#a20) *)
    let shallow : (t361, _) idx_mut = (.a361.#a360.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1650;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1650 failed %d" i;
  );
  (* Deepening to (.a361.#a360.#b20) *)
  let idx : (t361, _) idx_mut = (.a361.#a360.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a361) *)
    let shallow : (t361, _) idx_mut = (.a361) in
    let deepened = (.idx_mut(shallow).#a360.#b20) in
    mark_test_run 1651;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1651 failed %d" i;
    (* from (.a361.#a360) *)
    let shallow : (t361, _) idx_mut = (.a361.#a360) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1652;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1652 failed %d" i;
    (* from (.a361.#a360.#b20) *)
    let shallow : (t361, _) idx_mut = (.a361.#a360.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1653;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1653 failed %d" i;
  );

  (*********************************************)
  (*   t363 = { #{ #{ int; int }; int32# } }   *)
  (*********************************************)
  (* Deepening to (.a363) *)
  let idx : (t363, _) idx_mut = (.a363) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a363) *)
    let shallow : (t363, _) idx_mut = (.a363) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1654;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1654 failed %d" i;
  );
  (* Deepening to (.a363.#a362) *)
  let idx : (t363, _) idx_mut = (.a363.#a362) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a363) *)
    let shallow : (t363, _) idx_mut = (.a363) in
    let deepened = (.idx_mut(shallow).#a362) in
    mark_test_run 1655;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1655 failed %d" i;
    (* from (.a363.#a362) *)
    let shallow : (t363, _) idx_mut = (.a363.#a362) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1656;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1656 failed %d" i;
  );
  (* Deepening to (.a363.#b362) *)
  let idx : (t363, _) idx_mut = (.a363.#b362) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a363) *)
    let shallow : (t363, _) idx_mut = (.a363) in
    let deepened = (.idx_mut(shallow).#b362) in
    mark_test_run 1657;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1657 failed %d" i;
    (* from (.a363.#b362) *)
    let shallow : (t363, _) idx_mut = (.a363.#b362) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1658;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1658 failed %d" i;
  );
  (* Deepening to (.a363.#a362.#a20) *)
  let idx : (t363, _) idx_mut = (.a363.#a362.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a363) *)
    let shallow : (t363, _) idx_mut = (.a363) in
    let deepened = (.idx_mut(shallow).#a362.#a20) in
    mark_test_run 1659;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1659 failed %d" i;
    (* from (.a363.#a362) *)
    let shallow : (t363, _) idx_mut = (.a363.#a362) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1660;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1660 failed %d" i;
    (* from (.a363.#a362.#a20) *)
    let shallow : (t363, _) idx_mut = (.a363.#a362.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1661;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1661 failed %d" i;
  );
  (* Deepening to (.a363.#a362.#b20) *)
  let idx : (t363, _) idx_mut = (.a363.#a362.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a363) *)
    let shallow : (t363, _) idx_mut = (.a363) in
    let deepened = (.idx_mut(shallow).#a362.#b20) in
    mark_test_run 1662;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1662 failed %d" i;
    (* from (.a363.#a362) *)
    let shallow : (t363, _) idx_mut = (.a363.#a362) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1663;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1663 failed %d" i;
    (* from (.a363.#a362.#b20) *)
    let shallow : (t363, _) idx_mut = (.a363.#a362.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1664;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1664 failed %d" i;
  );

  (********************************************)
  (*   t365 = { #{ #{ int; int }; float } }   *)
  (********************************************)
  (* Deepening to (.a365) *)
  let idx : (t365, _) idx_mut = (.a365) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a365) *)
    let shallow : (t365, _) idx_mut = (.a365) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1665;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1665 failed %d" i;
  );
  (* Deepening to (.a365.#a364) *)
  let idx : (t365, _) idx_mut = (.a365.#a364) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a365) *)
    let shallow : (t365, _) idx_mut = (.a365) in
    let deepened = (.idx_mut(shallow).#a364) in
    mark_test_run 1666;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1666 failed %d" i;
    (* from (.a365.#a364) *)
    let shallow : (t365, _) idx_mut = (.a365.#a364) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1667;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1667 failed %d" i;
  );
  (* Deepening to (.a365.#b364) *)
  let idx : (t365, _) idx_mut = (.a365.#b364) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a365) *)
    let shallow : (t365, _) idx_mut = (.a365) in
    let deepened = (.idx_mut(shallow).#b364) in
    mark_test_run 1668;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1668 failed %d" i;
    (* from (.a365.#b364) *)
    let shallow : (t365, _) idx_mut = (.a365.#b364) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1669;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1669 failed %d" i;
  );
  (* Deepening to (.a365.#a364.#a20) *)
  let idx : (t365, _) idx_mut = (.a365.#a364.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a365) *)
    let shallow : (t365, _) idx_mut = (.a365) in
    let deepened = (.idx_mut(shallow).#a364.#a20) in
    mark_test_run 1670;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1670 failed %d" i;
    (* from (.a365.#a364) *)
    let shallow : (t365, _) idx_mut = (.a365.#a364) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1671;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1671 failed %d" i;
    (* from (.a365.#a364.#a20) *)
    let shallow : (t365, _) idx_mut = (.a365.#a364.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1672;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1672 failed %d" i;
  );
  (* Deepening to (.a365.#a364.#b20) *)
  let idx : (t365, _) idx_mut = (.a365.#a364.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a365) *)
    let shallow : (t365, _) idx_mut = (.a365) in
    let deepened = (.idx_mut(shallow).#a364.#b20) in
    mark_test_run 1673;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1673 failed %d" i;
    (* from (.a365.#a364) *)
    let shallow : (t365, _) idx_mut = (.a365.#a364) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1674;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1674 failed %d" i;
    (* from (.a365.#a364.#b20) *)
    let shallow : (t365, _) idx_mut = (.a365.#a364.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1675;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1675 failed %d" i;
  );

  (***********************************************)
  (*   t367 = { #{ #{ int; int }; int64x2# } }   *)
  (***********************************************)
  (* Deepening to (.a367) *)
  let idx : (t367, _) idx_mut = (.a367) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a367) *)
    let shallow : (t367, _) idx_mut = (.a367) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1676;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1676 failed %d" i;
  );
  (* Deepening to (.a367.#a366) *)
  let idx : (t367, _) idx_mut = (.a367.#a366) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a367) *)
    let shallow : (t367, _) idx_mut = (.a367) in
    let deepened = (.idx_mut(shallow).#a366) in
    mark_test_run 1677;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1677 failed %d" i;
    (* from (.a367.#a366) *)
    let shallow : (t367, _) idx_mut = (.a367.#a366) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1678;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1678 failed %d" i;
  );
  (* Deepening to (.a367.#b366) *)
  let idx : (t367, _) idx_mut = (.a367.#b366) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a367) *)
    let shallow : (t367, _) idx_mut = (.a367) in
    let deepened = (.idx_mut(shallow).#b366) in
    mark_test_run 1679;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1679 failed %d" i;
    (* from (.a367.#b366) *)
    let shallow : (t367, _) idx_mut = (.a367.#b366) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1680;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1680 failed %d" i;
  );
  (* Deepening to (.a367.#a366.#a20) *)
  let idx : (t367, _) idx_mut = (.a367.#a366.#a20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a367) *)
    let shallow : (t367, _) idx_mut = (.a367) in
    let deepened = (.idx_mut(shallow).#a366.#a20) in
    mark_test_run 1681;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1681 failed %d" i;
    (* from (.a367.#a366) *)
    let shallow : (t367, _) idx_mut = (.a367.#a366) in
    let deepened = (.idx_mut(shallow).#a20) in
    mark_test_run 1682;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1682 failed %d" i;
    (* from (.a367.#a366.#a20) *)
    let shallow : (t367, _) idx_mut = (.a367.#a366.#a20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1683;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1683 failed %d" i;
  );
  (* Deepening to (.a367.#a366.#b20) *)
  let idx : (t367, _) idx_mut = (.a367.#a366.#b20) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a367) *)
    let shallow : (t367, _) idx_mut = (.a367) in
    let deepened = (.idx_mut(shallow).#a366.#b20) in
    mark_test_run 1684;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1684 failed %d" i;
    (* from (.a367.#a366) *)
    let shallow : (t367, _) idx_mut = (.a367.#a366) in
    let deepened = (.idx_mut(shallow).#b20) in
    mark_test_run 1685;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1685 failed %d" i;
    (* from (.a367.#a366.#b20) *)
    let shallow : (t367, _) idx_mut = (.a367.#a366.#b20) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1686;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1686 failed %d" i;
  );

  (*********************************************)
  (*   t369 = { #{ #{ int; int32# }; int } }   *)
  (*********************************************)
  (* Deepening to (.a369) *)
  let idx : (t369, _) idx_mut = (.a369) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a369) *)
    let shallow : (t369, _) idx_mut = (.a369) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1687;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1687 failed %d" i;
  );
  (* Deepening to (.a369.#a368) *)
  let idx : (t369, _) idx_mut = (.a369.#a368) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a369) *)
    let shallow : (t369, _) idx_mut = (.a369) in
    let deepened = (.idx_mut(shallow).#a368) in
    mark_test_run 1688;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1688 failed %d" i;
    (* from (.a369.#a368) *)
    let shallow : (t369, _) idx_mut = (.a369.#a368) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1689;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1689 failed %d" i;
  );
  (* Deepening to (.a369.#b368) *)
  let idx : (t369, _) idx_mut = (.a369.#b368) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a369) *)
    let shallow : (t369, _) idx_mut = (.a369) in
    let deepened = (.idx_mut(shallow).#b368) in
    mark_test_run 1690;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1690 failed %d" i;
    (* from (.a369.#b368) *)
    let shallow : (t369, _) idx_mut = (.a369.#b368) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1691;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1691 failed %d" i;
  );
  (* Deepening to (.a369.#a368.#a22) *)
  let idx : (t369, _) idx_mut = (.a369.#a368.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a369) *)
    let shallow : (t369, _) idx_mut = (.a369) in
    let deepened = (.idx_mut(shallow).#a368.#a22) in
    mark_test_run 1692;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1692 failed %d" i;
    (* from (.a369.#a368) *)
    let shallow : (t369, _) idx_mut = (.a369.#a368) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1693;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1693 failed %d" i;
    (* from (.a369.#a368.#a22) *)
    let shallow : (t369, _) idx_mut = (.a369.#a368.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1694;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1694 failed %d" i;
  );
  (* Deepening to (.a369.#a368.#b22) *)
  let idx : (t369, _) idx_mut = (.a369.#a368.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a369) *)
    let shallow : (t369, _) idx_mut = (.a369) in
    let deepened = (.idx_mut(shallow).#a368.#b22) in
    mark_test_run 1695;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1695 failed %d" i;
    (* from (.a369.#a368) *)
    let shallow : (t369, _) idx_mut = (.a369.#a368) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1696;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1696 failed %d" i;
    (* from (.a369.#a368.#b22) *)
    let shallow : (t369, _) idx_mut = (.a369.#a368.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1697;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1697 failed %d" i;
  );

  (************************************************)
  (*   t371 = { #{ #{ int; int32# }; int32# } }   *)
  (************************************************)
  (* Deepening to (.a371) *)
  let idx : (t371, _) idx_mut = (.a371) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a371) *)
    let shallow : (t371, _) idx_mut = (.a371) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1698;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1698 failed %d" i;
  );
  (* Deepening to (.a371.#a370) *)
  let idx : (t371, _) idx_mut = (.a371.#a370) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a371) *)
    let shallow : (t371, _) idx_mut = (.a371) in
    let deepened = (.idx_mut(shallow).#a370) in
    mark_test_run 1699;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1699 failed %d" i;
    (* from (.a371.#a370) *)
    let shallow : (t371, _) idx_mut = (.a371.#a370) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1700;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1700 failed %d" i;
  );
  (* Deepening to (.a371.#b370) *)
  let idx : (t371, _) idx_mut = (.a371.#b370) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a371) *)
    let shallow : (t371, _) idx_mut = (.a371) in
    let deepened = (.idx_mut(shallow).#b370) in
    mark_test_run 1701;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1701 failed %d" i;
    (* from (.a371.#b370) *)
    let shallow : (t371, _) idx_mut = (.a371.#b370) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1702;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1702 failed %d" i;
  );
  (* Deepening to (.a371.#a370.#a22) *)
  let idx : (t371, _) idx_mut = (.a371.#a370.#a22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a371) *)
    let shallow : (t371, _) idx_mut = (.a371) in
    let deepened = (.idx_mut(shallow).#a370.#a22) in
    mark_test_run 1703;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1703 failed %d" i;
    (* from (.a371.#a370) *)
    let shallow : (t371, _) idx_mut = (.a371.#a370) in
    let deepened = (.idx_mut(shallow).#a22) in
    mark_test_run 1704;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1704 failed %d" i;
    (* from (.a371.#a370.#a22) *)
    let shallow : (t371, _) idx_mut = (.a371.#a370.#a22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1705;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1705 failed %d" i;
  );
  (* Deepening to (.a371.#a370.#b22) *)
  let idx : (t371, _) idx_mut = (.a371.#a370.#b22) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a371) *)
    let shallow : (t371, _) idx_mut = (.a371) in
    let deepened = (.idx_mut(shallow).#a370.#b22) in
    mark_test_run 1706;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1706 failed %d" i;
    (* from (.a371.#a370) *)
    let shallow : (t371, _) idx_mut = (.a371.#a370) in
    let deepened = (.idx_mut(shallow).#b22) in
    mark_test_run 1707;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1707 failed %d" i;
    (* from (.a371.#a370.#b22) *)
    let shallow : (t371, _) idx_mut = (.a371.#a370.#b22) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1708;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1708 failed %d" i;
  );

  (********************************************)
  (*   t373 = { #{ #{ int; float }; int } }   *)
  (********************************************)
  (* Deepening to (.a373) *)
  let idx : (t373, _) idx_mut = (.a373) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a373) *)
    let shallow : (t373, _) idx_mut = (.a373) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1709;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1709 failed %d" i;
  );
  (* Deepening to (.a373.#a372) *)
  let idx : (t373, _) idx_mut = (.a373.#a372) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a373) *)
    let shallow : (t373, _) idx_mut = (.a373) in
    let deepened = (.idx_mut(shallow).#a372) in
    mark_test_run 1710;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1710 failed %d" i;
    (* from (.a373.#a372) *)
    let shallow : (t373, _) idx_mut = (.a373.#a372) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1711;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1711 failed %d" i;
  );
  (* Deepening to (.a373.#b372) *)
  let idx : (t373, _) idx_mut = (.a373.#b372) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a373) *)
    let shallow : (t373, _) idx_mut = (.a373) in
    let deepened = (.idx_mut(shallow).#b372) in
    mark_test_run 1712;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1712 failed %d" i;
    (* from (.a373.#b372) *)
    let shallow : (t373, _) idx_mut = (.a373.#b372) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1713;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1713 failed %d" i;
  );
  (* Deepening to (.a373.#a372.#a24) *)
  let idx : (t373, _) idx_mut = (.a373.#a372.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a373) *)
    let shallow : (t373, _) idx_mut = (.a373) in
    let deepened = (.idx_mut(shallow).#a372.#a24) in
    mark_test_run 1714;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1714 failed %d" i;
    (* from (.a373.#a372) *)
    let shallow : (t373, _) idx_mut = (.a373.#a372) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1715;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1715 failed %d" i;
    (* from (.a373.#a372.#a24) *)
    let shallow : (t373, _) idx_mut = (.a373.#a372.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1716;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1716 failed %d" i;
  );
  (* Deepening to (.a373.#a372.#b24) *)
  let idx : (t373, _) idx_mut = (.a373.#a372.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a373) *)
    let shallow : (t373, _) idx_mut = (.a373) in
    let deepened = (.idx_mut(shallow).#a372.#b24) in
    mark_test_run 1717;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1717 failed %d" i;
    (* from (.a373.#a372) *)
    let shallow : (t373, _) idx_mut = (.a373.#a372) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1718;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1718 failed %d" i;
    (* from (.a373.#a372.#b24) *)
    let shallow : (t373, _) idx_mut = (.a373.#a372.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1719;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1719 failed %d" i;
  );

  (**********************************************)
  (*   t375 = { #{ #{ int; float }; float } }   *)
  (**********************************************)
  (* Deepening to (.a375) *)
  let idx : (t375, _) idx_mut = (.a375) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a375) *)
    let shallow : (t375, _) idx_mut = (.a375) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1720;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1720 failed %d" i;
  );
  (* Deepening to (.a375.#a374) *)
  let idx : (t375, _) idx_mut = (.a375.#a374) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a375) *)
    let shallow : (t375, _) idx_mut = (.a375) in
    let deepened = (.idx_mut(shallow).#a374) in
    mark_test_run 1721;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1721 failed %d" i;
    (* from (.a375.#a374) *)
    let shallow : (t375, _) idx_mut = (.a375.#a374) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1722;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1722 failed %d" i;
  );
  (* Deepening to (.a375.#b374) *)
  let idx : (t375, _) idx_mut = (.a375.#b374) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a375) *)
    let shallow : (t375, _) idx_mut = (.a375) in
    let deepened = (.idx_mut(shallow).#b374) in
    mark_test_run 1723;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1723 failed %d" i;
    (* from (.a375.#b374) *)
    let shallow : (t375, _) idx_mut = (.a375.#b374) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1724;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1724 failed %d" i;
  );
  (* Deepening to (.a375.#a374.#a24) *)
  let idx : (t375, _) idx_mut = (.a375.#a374.#a24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a375) *)
    let shallow : (t375, _) idx_mut = (.a375) in
    let deepened = (.idx_mut(shallow).#a374.#a24) in
    mark_test_run 1725;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1725 failed %d" i;
    (* from (.a375.#a374) *)
    let shallow : (t375, _) idx_mut = (.a375.#a374) in
    let deepened = (.idx_mut(shallow).#a24) in
    mark_test_run 1726;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1726 failed %d" i;
    (* from (.a375.#a374.#a24) *)
    let shallow : (t375, _) idx_mut = (.a375.#a374.#a24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1727;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1727 failed %d" i;
  );
  (* Deepening to (.a375.#a374.#b24) *)
  let idx : (t375, _) idx_mut = (.a375.#a374.#b24) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a375) *)
    let shallow : (t375, _) idx_mut = (.a375) in
    let deepened = (.idx_mut(shallow).#a374.#b24) in
    mark_test_run 1728;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1728 failed %d" i;
    (* from (.a375.#a374) *)
    let shallow : (t375, _) idx_mut = (.a375.#a374) in
    let deepened = (.idx_mut(shallow).#b24) in
    mark_test_run 1729;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1729 failed %d" i;
    (* from (.a375.#a374.#b24) *)
    let shallow : (t375, _) idx_mut = (.a375.#a374.#b24) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1730;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1730 failed %d" i;
  );

  (***********************************************)
  (*   t377 = { #{ #{ int; int64x2# }; int } }   *)
  (***********************************************)
  (* Deepening to (.a377) *)
  let idx : (t377, _) idx_mut = (.a377) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a377) *)
    let shallow : (t377, _) idx_mut = (.a377) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1731;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1731 failed %d" i;
  );
  (* Deepening to (.a377.#a376) *)
  let idx : (t377, _) idx_mut = (.a377.#a376) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a377) *)
    let shallow : (t377, _) idx_mut = (.a377) in
    let deepened = (.idx_mut(shallow).#a376) in
    mark_test_run 1732;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1732 failed %d" i;
    (* from (.a377.#a376) *)
    let shallow : (t377, _) idx_mut = (.a377.#a376) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1733;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1733 failed %d" i;
  );
  (* Deepening to (.a377.#b376) *)
  let idx : (t377, _) idx_mut = (.a377.#b376) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a377) *)
    let shallow : (t377, _) idx_mut = (.a377) in
    let deepened = (.idx_mut(shallow).#b376) in
    mark_test_run 1734;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1734 failed %d" i;
    (* from (.a377.#b376) *)
    let shallow : (t377, _) idx_mut = (.a377.#b376) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1735;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1735 failed %d" i;
  );
  (* Deepening to (.a377.#a376.#a26) *)
  let idx : (t377, _) idx_mut = (.a377.#a376.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a377) *)
    let shallow : (t377, _) idx_mut = (.a377) in
    let deepened = (.idx_mut(shallow).#a376.#a26) in
    mark_test_run 1736;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1736 failed %d" i;
    (* from (.a377.#a376) *)
    let shallow : (t377, _) idx_mut = (.a377.#a376) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1737;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1737 failed %d" i;
    (* from (.a377.#a376.#a26) *)
    let shallow : (t377, _) idx_mut = (.a377.#a376.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1738;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1738 failed %d" i;
  );
  (* Deepening to (.a377.#a376.#b26) *)
  let idx : (t377, _) idx_mut = (.a377.#a376.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a377) *)
    let shallow : (t377, _) idx_mut = (.a377) in
    let deepened = (.idx_mut(shallow).#a376.#b26) in
    mark_test_run 1739;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1739 failed %d" i;
    (* from (.a377.#a376) *)
    let shallow : (t377, _) idx_mut = (.a377.#a376) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1740;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1740 failed %d" i;
    (* from (.a377.#a376.#b26) *)
    let shallow : (t377, _) idx_mut = (.a377.#a376.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1741;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1741 failed %d" i;
  );

  (****************************************************)
  (*   t379 = { #{ #{ int; int64x2# }; int64x2# } }   *)
  (****************************************************)
  (* Deepening to (.a379) *)
  let idx : (t379, _) idx_mut = (.a379) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a379) *)
    let shallow : (t379, _) idx_mut = (.a379) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1742;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1742 failed %d" i;
  );
  (* Deepening to (.a379.#a378) *)
  let idx : (t379, _) idx_mut = (.a379.#a378) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a379) *)
    let shallow : (t379, _) idx_mut = (.a379) in
    let deepened = (.idx_mut(shallow).#a378) in
    mark_test_run 1743;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1743 failed %d" i;
    (* from (.a379.#a378) *)
    let shallow : (t379, _) idx_mut = (.a379.#a378) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1744;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1744 failed %d" i;
  );
  (* Deepening to (.a379.#b378) *)
  let idx : (t379, _) idx_mut = (.a379.#b378) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a379) *)
    let shallow : (t379, _) idx_mut = (.a379) in
    let deepened = (.idx_mut(shallow).#b378) in
    mark_test_run 1745;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1745 failed %d" i;
    (* from (.a379.#b378) *)
    let shallow : (t379, _) idx_mut = (.a379.#b378) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1746;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1746 failed %d" i;
  );
  (* Deepening to (.a379.#a378.#a26) *)
  let idx : (t379, _) idx_mut = (.a379.#a378.#a26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a379) *)
    let shallow : (t379, _) idx_mut = (.a379) in
    let deepened = (.idx_mut(shallow).#a378.#a26) in
    mark_test_run 1747;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1747 failed %d" i;
    (* from (.a379.#a378) *)
    let shallow : (t379, _) idx_mut = (.a379.#a378) in
    let deepened = (.idx_mut(shallow).#a26) in
    mark_test_run 1748;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1748 failed %d" i;
    (* from (.a379.#a378.#a26) *)
    let shallow : (t379, _) idx_mut = (.a379.#a378.#a26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1749;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1749 failed %d" i;
  );
  (* Deepening to (.a379.#a378.#b26) *)
  let idx : (t379, _) idx_mut = (.a379.#a378.#b26) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a379) *)
    let shallow : (t379, _) idx_mut = (.a379) in
    let deepened = (.idx_mut(shallow).#a378.#b26) in
    mark_test_run 1750;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1750 failed %d" i;
    (* from (.a379.#a378) *)
    let shallow : (t379, _) idx_mut = (.a379.#a378) in
    let deepened = (.idx_mut(shallow).#b26) in
    mark_test_run 1751;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1751 failed %d" i;
    (* from (.a379.#a378.#b26) *)
    let shallow : (t379, _) idx_mut = (.a379.#a378.#b26) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1752;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1752 failed %d" i;
  );

  (*********************************************)
  (*   t381 = { #{ #{ int32#; int }; int } }   *)
  (*********************************************)
  (* Deepening to (.a381) *)
  let idx : (t381, _) idx_mut = (.a381) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a381) *)
    let shallow : (t381, _) idx_mut = (.a381) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1753;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1753 failed %d" i;
  );
  (* Deepening to (.a381.#a380) *)
  let idx : (t381, _) idx_mut = (.a381.#a380) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a381) *)
    let shallow : (t381, _) idx_mut = (.a381) in
    let deepened = (.idx_mut(shallow).#a380) in
    mark_test_run 1754;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1754 failed %d" i;
    (* from (.a381.#a380) *)
    let shallow : (t381, _) idx_mut = (.a381.#a380) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1755;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1755 failed %d" i;
  );
  (* Deepening to (.a381.#b380) *)
  let idx : (t381, _) idx_mut = (.a381.#b380) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a381) *)
    let shallow : (t381, _) idx_mut = (.a381) in
    let deepened = (.idx_mut(shallow).#b380) in
    mark_test_run 1756;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1756 failed %d" i;
    (* from (.a381.#b380) *)
    let shallow : (t381, _) idx_mut = (.a381.#b380) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1757;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1757 failed %d" i;
  );
  (* Deepening to (.a381.#a380.#a40) *)
  let idx : (t381, _) idx_mut = (.a381.#a380.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a381) *)
    let shallow : (t381, _) idx_mut = (.a381) in
    let deepened = (.idx_mut(shallow).#a380.#a40) in
    mark_test_run 1758;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1758 failed %d" i;
    (* from (.a381.#a380) *)
    let shallow : (t381, _) idx_mut = (.a381.#a380) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1759;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1759 failed %d" i;
    (* from (.a381.#a380.#a40) *)
    let shallow : (t381, _) idx_mut = (.a381.#a380.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1760;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1760 failed %d" i;
  );
  (* Deepening to (.a381.#a380.#b40) *)
  let idx : (t381, _) idx_mut = (.a381.#a380.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a381) *)
    let shallow : (t381, _) idx_mut = (.a381) in
    let deepened = (.idx_mut(shallow).#a380.#b40) in
    mark_test_run 1761;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1761 failed %d" i;
    (* from (.a381.#a380) *)
    let shallow : (t381, _) idx_mut = (.a381.#a380) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1762;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1762 failed %d" i;
    (* from (.a381.#a380.#b40) *)
    let shallow : (t381, _) idx_mut = (.a381.#a380.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1763;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1763 failed %d" i;
  );

  (************************************************)
  (*   t383 = { #{ #{ int32#; int }; int32# } }   *)
  (************************************************)
  (* Deepening to (.a383) *)
  let idx : (t383, _) idx_mut = (.a383) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a383) *)
    let shallow : (t383, _) idx_mut = (.a383) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1764;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1764 failed %d" i;
  );
  (* Deepening to (.a383.#a382) *)
  let idx : (t383, _) idx_mut = (.a383.#a382) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a383) *)
    let shallow : (t383, _) idx_mut = (.a383) in
    let deepened = (.idx_mut(shallow).#a382) in
    mark_test_run 1765;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1765 failed %d" i;
    (* from (.a383.#a382) *)
    let shallow : (t383, _) idx_mut = (.a383.#a382) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1766;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1766 failed %d" i;
  );
  (* Deepening to (.a383.#b382) *)
  let idx : (t383, _) idx_mut = (.a383.#b382) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a383) *)
    let shallow : (t383, _) idx_mut = (.a383) in
    let deepened = (.idx_mut(shallow).#b382) in
    mark_test_run 1767;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1767 failed %d" i;
    (* from (.a383.#b382) *)
    let shallow : (t383, _) idx_mut = (.a383.#b382) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1768;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1768 failed %d" i;
  );
  (* Deepening to (.a383.#a382.#a40) *)
  let idx : (t383, _) idx_mut = (.a383.#a382.#a40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a383) *)
    let shallow : (t383, _) idx_mut = (.a383) in
    let deepened = (.idx_mut(shallow).#a382.#a40) in
    mark_test_run 1769;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1769 failed %d" i;
    (* from (.a383.#a382) *)
    let shallow : (t383, _) idx_mut = (.a383.#a382) in
    let deepened = (.idx_mut(shallow).#a40) in
    mark_test_run 1770;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1770 failed %d" i;
    (* from (.a383.#a382.#a40) *)
    let shallow : (t383, _) idx_mut = (.a383.#a382.#a40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1771;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1771 failed %d" i;
  );
  (* Deepening to (.a383.#a382.#b40) *)
  let idx : (t383, _) idx_mut = (.a383.#a382.#b40) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a383) *)
    let shallow : (t383, _) idx_mut = (.a383) in
    let deepened = (.idx_mut(shallow).#a382.#b40) in
    mark_test_run 1772;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1772 failed %d" i;
    (* from (.a383.#a382) *)
    let shallow : (t383, _) idx_mut = (.a383.#a382) in
    let deepened = (.idx_mut(shallow).#b40) in
    mark_test_run 1773;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1773 failed %d" i;
    (* from (.a383.#a382.#b40) *)
    let shallow : (t383, _) idx_mut = (.a383.#a382.#b40) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1774;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1774 failed %d" i;
  );

  (************************************************)
  (*   t385 = { #{ #{ int32#; int32# }; int } }   *)
  (************************************************)
  (* Deepening to (.a385) *)
  let idx : (t385, _) idx_mut = (.a385) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a385) *)
    let shallow : (t385, _) idx_mut = (.a385) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1775;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1775 failed %d" i;
  );
  (* Deepening to (.a385.#a384) *)
  let idx : (t385, _) idx_mut = (.a385.#a384) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a385) *)
    let shallow : (t385, _) idx_mut = (.a385) in
    let deepened = (.idx_mut(shallow).#a384) in
    mark_test_run 1776;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1776 failed %d" i;
    (* from (.a385.#a384) *)
    let shallow : (t385, _) idx_mut = (.a385.#a384) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1777;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1777 failed %d" i;
  );
  (* Deepening to (.a385.#b384) *)
  let idx : (t385, _) idx_mut = (.a385.#b384) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a385) *)
    let shallow : (t385, _) idx_mut = (.a385) in
    let deepened = (.idx_mut(shallow).#b384) in
    mark_test_run 1778;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1778 failed %d" i;
    (* from (.a385.#b384) *)
    let shallow : (t385, _) idx_mut = (.a385.#b384) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1779;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1779 failed %d" i;
  );
  (* Deepening to (.a385.#a384.#a42) *)
  let idx : (t385, _) idx_mut = (.a385.#a384.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a385) *)
    let shallow : (t385, _) idx_mut = (.a385) in
    let deepened = (.idx_mut(shallow).#a384.#a42) in
    mark_test_run 1780;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1780 failed %d" i;
    (* from (.a385.#a384) *)
    let shallow : (t385, _) idx_mut = (.a385.#a384) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1781;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1781 failed %d" i;
    (* from (.a385.#a384.#a42) *)
    let shallow : (t385, _) idx_mut = (.a385.#a384.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1782;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1782 failed %d" i;
  );
  (* Deepening to (.a385.#a384.#b42) *)
  let idx : (t385, _) idx_mut = (.a385.#a384.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a385) *)
    let shallow : (t385, _) idx_mut = (.a385) in
    let deepened = (.idx_mut(shallow).#a384.#b42) in
    mark_test_run 1783;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1783 failed %d" i;
    (* from (.a385.#a384) *)
    let shallow : (t385, _) idx_mut = (.a385.#a384) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1784;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1784 failed %d" i;
    (* from (.a385.#a384.#b42) *)
    let shallow : (t385, _) idx_mut = (.a385.#a384.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1785;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1785 failed %d" i;
  );

  (***************************************************)
  (*   t387 = { #{ #{ int32#; int32# }; int32# } }   *)
  (***************************************************)
  (* Deepening to (.a387) *)
  let idx : (t387, _) idx_mut = (.a387) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a387) *)
    let shallow : (t387, _) idx_mut = (.a387) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1786;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1786 failed %d" i;
  );
  (* Deepening to (.a387.#a386) *)
  let idx : (t387, _) idx_mut = (.a387.#a386) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a387) *)
    let shallow : (t387, _) idx_mut = (.a387) in
    let deepened = (.idx_mut(shallow).#a386) in
    mark_test_run 1787;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1787 failed %d" i;
    (* from (.a387.#a386) *)
    let shallow : (t387, _) idx_mut = (.a387.#a386) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1788;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1788 failed %d" i;
  );
  (* Deepening to (.a387.#b386) *)
  let idx : (t387, _) idx_mut = (.a387.#b386) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a387) *)
    let shallow : (t387, _) idx_mut = (.a387) in
    let deepened = (.idx_mut(shallow).#b386) in
    mark_test_run 1789;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1789 failed %d" i;
    (* from (.a387.#b386) *)
    let shallow : (t387, _) idx_mut = (.a387.#b386) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1790;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1790 failed %d" i;
  );
  (* Deepening to (.a387.#a386.#a42) *)
  let idx : (t387, _) idx_mut = (.a387.#a386.#a42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a387) *)
    let shallow : (t387, _) idx_mut = (.a387) in
    let deepened = (.idx_mut(shallow).#a386.#a42) in
    mark_test_run 1791;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1791 failed %d" i;
    (* from (.a387.#a386) *)
    let shallow : (t387, _) idx_mut = (.a387.#a386) in
    let deepened = (.idx_mut(shallow).#a42) in
    mark_test_run 1792;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1792 failed %d" i;
    (* from (.a387.#a386.#a42) *)
    let shallow : (t387, _) idx_mut = (.a387.#a386.#a42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1793;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1793 failed %d" i;
  );
  (* Deepening to (.a387.#a386.#b42) *)
  let idx : (t387, _) idx_mut = (.a387.#a386.#b42) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a387) *)
    let shallow : (t387, _) idx_mut = (.a387) in
    let deepened = (.idx_mut(shallow).#a386.#b42) in
    mark_test_run 1794;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1794 failed %d" i;
    (* from (.a387.#a386) *)
    let shallow : (t387, _) idx_mut = (.a387.#a386) in
    let deepened = (.idx_mut(shallow).#b42) in
    mark_test_run 1795;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1795 failed %d" i;
    (* from (.a387.#a386.#b42) *)
    let shallow : (t387, _) idx_mut = (.a387.#a386.#b42) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1796;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1796 failed %d" i;
  );

  (********************************************)
  (*   t389 = { #{ #{ float; int }; int } }   *)
  (********************************************)
  (* Deepening to (.a389) *)
  let idx : (t389, _) idx_mut = (.a389) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a389) *)
    let shallow : (t389, _) idx_mut = (.a389) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1797;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1797 failed %d" i;
  );
  (* Deepening to (.a389.#a388) *)
  let idx : (t389, _) idx_mut = (.a389.#a388) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a389) *)
    let shallow : (t389, _) idx_mut = (.a389) in
    let deepened = (.idx_mut(shallow).#a388) in
    mark_test_run 1798;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1798 failed %d" i;
    (* from (.a389.#a388) *)
    let shallow : (t389, _) idx_mut = (.a389.#a388) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1799;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1799 failed %d" i;
  );
  (* Deepening to (.a389.#b388) *)
  let idx : (t389, _) idx_mut = (.a389.#b388) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a389) *)
    let shallow : (t389, _) idx_mut = (.a389) in
    let deepened = (.idx_mut(shallow).#b388) in
    mark_test_run 1800;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1800 failed %d" i;
    (* from (.a389.#b388) *)
    let shallow : (t389, _) idx_mut = (.a389.#b388) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1801;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1801 failed %d" i;
  );
  (* Deepening to (.a389.#a388.#a49) *)
  let idx : (t389, _) idx_mut = (.a389.#a388.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a389) *)
    let shallow : (t389, _) idx_mut = (.a389) in
    let deepened = (.idx_mut(shallow).#a388.#a49) in
    mark_test_run 1802;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1802 failed %d" i;
    (* from (.a389.#a388) *)
    let shallow : (t389, _) idx_mut = (.a389.#a388) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1803;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1803 failed %d" i;
    (* from (.a389.#a388.#a49) *)
    let shallow : (t389, _) idx_mut = (.a389.#a388.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1804;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1804 failed %d" i;
  );
  (* Deepening to (.a389.#a388.#b49) *)
  let idx : (t389, _) idx_mut = (.a389.#a388.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a389) *)
    let shallow : (t389, _) idx_mut = (.a389) in
    let deepened = (.idx_mut(shallow).#a388.#b49) in
    mark_test_run 1805;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1805 failed %d" i;
    (* from (.a389.#a388) *)
    let shallow : (t389, _) idx_mut = (.a389.#a388) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1806;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1806 failed %d" i;
    (* from (.a389.#a388.#b49) *)
    let shallow : (t389, _) idx_mut = (.a389.#a388.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1807;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1807 failed %d" i;
  );

  (**********************************************)
  (*   t391 = { #{ #{ float; int }; float } }   *)
  (**********************************************)
  (* Deepening to (.a391) *)
  let idx : (t391, _) idx_mut = (.a391) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a391) *)
    let shallow : (t391, _) idx_mut = (.a391) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1808;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1808 failed %d" i;
  );
  (* Deepening to (.a391.#a390) *)
  let idx : (t391, _) idx_mut = (.a391.#a390) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a391) *)
    let shallow : (t391, _) idx_mut = (.a391) in
    let deepened = (.idx_mut(shallow).#a390) in
    mark_test_run 1809;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1809 failed %d" i;
    (* from (.a391.#a390) *)
    let shallow : (t391, _) idx_mut = (.a391.#a390) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1810;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1810 failed %d" i;
  );
  (* Deepening to (.a391.#b390) *)
  let idx : (t391, _) idx_mut = (.a391.#b390) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a391) *)
    let shallow : (t391, _) idx_mut = (.a391) in
    let deepened = (.idx_mut(shallow).#b390) in
    mark_test_run 1811;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1811 failed %d" i;
    (* from (.a391.#b390) *)
    let shallow : (t391, _) idx_mut = (.a391.#b390) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1812;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1812 failed %d" i;
  );
  (* Deepening to (.a391.#a390.#a49) *)
  let idx : (t391, _) idx_mut = (.a391.#a390.#a49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a391) *)
    let shallow : (t391, _) idx_mut = (.a391) in
    let deepened = (.idx_mut(shallow).#a390.#a49) in
    mark_test_run 1813;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1813 failed %d" i;
    (* from (.a391.#a390) *)
    let shallow : (t391, _) idx_mut = (.a391.#a390) in
    let deepened = (.idx_mut(shallow).#a49) in
    mark_test_run 1814;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1814 failed %d" i;
    (* from (.a391.#a390.#a49) *)
    let shallow : (t391, _) idx_mut = (.a391.#a390.#a49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1815;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1815 failed %d" i;
  );
  (* Deepening to (.a391.#a390.#b49) *)
  let idx : (t391, _) idx_mut = (.a391.#a390.#b49) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a391) *)
    let shallow : (t391, _) idx_mut = (.a391) in
    let deepened = (.idx_mut(shallow).#a390.#b49) in
    mark_test_run 1816;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1816 failed %d" i;
    (* from (.a391.#a390) *)
    let shallow : (t391, _) idx_mut = (.a391.#a390) in
    let deepened = (.idx_mut(shallow).#b49) in
    mark_test_run 1817;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1817 failed %d" i;
    (* from (.a391.#a390.#b49) *)
    let shallow : (t391, _) idx_mut = (.a391.#a390.#b49) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1818;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1818 failed %d" i;
  );

  (**********************************************)
  (*   t393 = { #{ #{ float; float }; int } }   *)
  (**********************************************)
  (* Deepening to (.a393) *)
  let idx : (t393, _) idx_mut = (.a393) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a393) *)
    let shallow : (t393, _) idx_mut = (.a393) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1819;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1819 failed %d" i;
  );
  (* Deepening to (.a393.#a392) *)
  let idx : (t393, _) idx_mut = (.a393.#a392) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a393) *)
    let shallow : (t393, _) idx_mut = (.a393) in
    let deepened = (.idx_mut(shallow).#a392) in
    mark_test_run 1820;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1820 failed %d" i;
    (* from (.a393.#a392) *)
    let shallow : (t393, _) idx_mut = (.a393.#a392) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1821;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1821 failed %d" i;
  );
  (* Deepening to (.a393.#b392) *)
  let idx : (t393, _) idx_mut = (.a393.#b392) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a393) *)
    let shallow : (t393, _) idx_mut = (.a393) in
    let deepened = (.idx_mut(shallow).#b392) in
    mark_test_run 1822;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1822 failed %d" i;
    (* from (.a393.#b392) *)
    let shallow : (t393, _) idx_mut = (.a393.#b392) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1823;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1823 failed %d" i;
  );
  (* Deepening to (.a393.#a392.#a51) *)
  let idx : (t393, _) idx_mut = (.a393.#a392.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a393) *)
    let shallow : (t393, _) idx_mut = (.a393) in
    let deepened = (.idx_mut(shallow).#a392.#a51) in
    mark_test_run 1824;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1824 failed %d" i;
    (* from (.a393.#a392) *)
    let shallow : (t393, _) idx_mut = (.a393.#a392) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1825;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1825 failed %d" i;
    (* from (.a393.#a392.#a51) *)
    let shallow : (t393, _) idx_mut = (.a393.#a392.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1826;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1826 failed %d" i;
  );
  (* Deepening to (.a393.#a392.#b51) *)
  let idx : (t393, _) idx_mut = (.a393.#a392.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a393) *)
    let shallow : (t393, _) idx_mut = (.a393) in
    let deepened = (.idx_mut(shallow).#a392.#b51) in
    mark_test_run 1827;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1827 failed %d" i;
    (* from (.a393.#a392) *)
    let shallow : (t393, _) idx_mut = (.a393.#a392) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1828;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1828 failed %d" i;
    (* from (.a393.#a392.#b51) *)
    let shallow : (t393, _) idx_mut = (.a393.#a392.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1829;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1829 failed %d" i;
  );

  (************************************************)
  (*   t395 = { #{ #{ float; float }; float } }   *)
  (************************************************)
  (* Deepening to (.a395) *)
  let idx : (t395, _) idx_mut = (.a395) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a395) *)
    let shallow : (t395, _) idx_mut = (.a395) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1830;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1830 failed %d" i;
  );
  (* Deepening to (.a395.#a394) *)
  let idx : (t395, _) idx_mut = (.a395.#a394) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a395) *)
    let shallow : (t395, _) idx_mut = (.a395) in
    let deepened = (.idx_mut(shallow).#a394) in
    mark_test_run 1831;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1831 failed %d" i;
    (* from (.a395.#a394) *)
    let shallow : (t395, _) idx_mut = (.a395.#a394) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1832;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1832 failed %d" i;
  );
  (* Deepening to (.a395.#b394) *)
  let idx : (t395, _) idx_mut = (.a395.#b394) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a395) *)
    let shallow : (t395, _) idx_mut = (.a395) in
    let deepened = (.idx_mut(shallow).#b394) in
    mark_test_run 1833;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1833 failed %d" i;
    (* from (.a395.#b394) *)
    let shallow : (t395, _) idx_mut = (.a395.#b394) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1834;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1834 failed %d" i;
  );
  (* Deepening to (.a395.#a394.#a51) *)
  let idx : (t395, _) idx_mut = (.a395.#a394.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a395) *)
    let shallow : (t395, _) idx_mut = (.a395) in
    let deepened = (.idx_mut(shallow).#a394.#a51) in
    mark_test_run 1835;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1835 failed %d" i;
    (* from (.a395.#a394) *)
    let shallow : (t395, _) idx_mut = (.a395.#a394) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1836;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1836 failed %d" i;
    (* from (.a395.#a394.#a51) *)
    let shallow : (t395, _) idx_mut = (.a395.#a394.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1837;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1837 failed %d" i;
  );
  (* Deepening to (.a395.#a394.#b51) *)
  let idx : (t395, _) idx_mut = (.a395.#a394.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a395) *)
    let shallow : (t395, _) idx_mut = (.a395) in
    let deepened = (.idx_mut(shallow).#a394.#b51) in
    mark_test_run 1838;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1838 failed %d" i;
    (* from (.a395.#a394) *)
    let shallow : (t395, _) idx_mut = (.a395.#a394) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1839;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1839 failed %d" i;
    (* from (.a395.#a394.#b51) *)
    let shallow : (t395, _) idx_mut = (.a395.#a394.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1840;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1840 failed %d" i;
  );

  (*************************************************)
  (*   t397 = { #{ #{ float; float }; float# } }   *)
  (*************************************************)
  (* Deepening to (.a397) *)
  let idx : (t397, _) idx_mut = (.a397) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a397) *)
    let shallow : (t397, _) idx_mut = (.a397) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1841;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1841 failed %d" i;
  );
  (* Deepening to (.a397.#a396) *)
  let idx : (t397, _) idx_mut = (.a397.#a396) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a397) *)
    let shallow : (t397, _) idx_mut = (.a397) in
    let deepened = (.idx_mut(shallow).#a396) in
    mark_test_run 1842;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1842 failed %d" i;
    (* from (.a397.#a396) *)
    let shallow : (t397, _) idx_mut = (.a397.#a396) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1843;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1843 failed %d" i;
  );
  (* Deepening to (.a397.#b396) *)
  let idx : (t397, _) idx_mut = (.a397.#b396) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a397) *)
    let shallow : (t397, _) idx_mut = (.a397) in
    let deepened = (.idx_mut(shallow).#b396) in
    mark_test_run 1844;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1844 failed %d" i;
    (* from (.a397.#b396) *)
    let shallow : (t397, _) idx_mut = (.a397.#b396) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1845;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1845 failed %d" i;
  );
  (* Deepening to (.a397.#a396.#a51) *)
  let idx : (t397, _) idx_mut = (.a397.#a396.#a51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a397) *)
    let shallow : (t397, _) idx_mut = (.a397) in
    let deepened = (.idx_mut(shallow).#a396.#a51) in
    mark_test_run 1846;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1846 failed %d" i;
    (* from (.a397.#a396) *)
    let shallow : (t397, _) idx_mut = (.a397.#a396) in
    let deepened = (.idx_mut(shallow).#a51) in
    mark_test_run 1847;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1847 failed %d" i;
    (* from (.a397.#a396.#a51) *)
    let shallow : (t397, _) idx_mut = (.a397.#a396.#a51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1848;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1848 failed %d" i;
  );
  (* Deepening to (.a397.#a396.#b51) *)
  let idx : (t397, _) idx_mut = (.a397.#a396.#b51) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a397) *)
    let shallow : (t397, _) idx_mut = (.a397) in
    let deepened = (.idx_mut(shallow).#a396.#b51) in
    mark_test_run 1849;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1849 failed %d" i;
    (* from (.a397.#a396) *)
    let shallow : (t397, _) idx_mut = (.a397.#a396) in
    let deepened = (.idx_mut(shallow).#b51) in
    mark_test_run 1850;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1850 failed %d" i;
    (* from (.a397.#a396.#b51) *)
    let shallow : (t397, _) idx_mut = (.a397.#a396.#b51) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1851;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1851 failed %d" i;
  );

  (*************************************************)
  (*   t399 = { #{ #{ float; float# }; float } }   *)
  (*************************************************)
  (* Deepening to (.a399) *)
  let idx : (t399, _) idx_mut = (.a399) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a399) *)
    let shallow : (t399, _) idx_mut = (.a399) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1852;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1852 failed %d" i;
  );
  (* Deepening to (.a399.#a398) *)
  let idx : (t399, _) idx_mut = (.a399.#a398) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a399) *)
    let shallow : (t399, _) idx_mut = (.a399) in
    let deepened = (.idx_mut(shallow).#a398) in
    mark_test_run 1853;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1853 failed %d" i;
    (* from (.a399.#a398) *)
    let shallow : (t399, _) idx_mut = (.a399.#a398) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1854;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1854 failed %d" i;
  );
  (* Deepening to (.a399.#b398) *)
  let idx : (t399, _) idx_mut = (.a399.#b398) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a399) *)
    let shallow : (t399, _) idx_mut = (.a399) in
    let deepened = (.idx_mut(shallow).#b398) in
    mark_test_run 1855;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1855 failed %d" i;
    (* from (.a399.#b398) *)
    let shallow : (t399, _) idx_mut = (.a399.#b398) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1856;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1856 failed %d" i;
  );
  (* Deepening to (.a399.#a398.#a155) *)
  let idx : (t399, _) idx_mut = (.a399.#a398.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a399) *)
    let shallow : (t399, _) idx_mut = (.a399) in
    let deepened = (.idx_mut(shallow).#a398.#a155) in
    mark_test_run 1857;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1857 failed %d" i;
    (* from (.a399.#a398) *)
    let shallow : (t399, _) idx_mut = (.a399.#a398) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1858;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1858 failed %d" i;
    (* from (.a399.#a398.#a155) *)
    let shallow : (t399, _) idx_mut = (.a399.#a398.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1859;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1859 failed %d" i;
  );
  (* Deepening to (.a399.#a398.#b155) *)
  let idx : (t399, _) idx_mut = (.a399.#a398.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a399) *)
    let shallow : (t399, _) idx_mut = (.a399) in
    let deepened = (.idx_mut(shallow).#a398.#b155) in
    mark_test_run 1860;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1860 failed %d" i;
    (* from (.a399.#a398) *)
    let shallow : (t399, _) idx_mut = (.a399.#a398) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1861;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1861 failed %d" i;
    (* from (.a399.#a398.#b155) *)
    let shallow : (t399, _) idx_mut = (.a399.#a398.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1862;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1862 failed %d" i;
  );

  (**************************************************)
  (*   t401 = { #{ #{ float; float# }; float# } }   *)
  (**************************************************)
  (* Deepening to (.a401) *)
  let idx : (t401, _) idx_mut = (.a401) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a401) *)
    let shallow : (t401, _) idx_mut = (.a401) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1863;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1863 failed %d" i;
  );
  (* Deepening to (.a401.#a400) *)
  let idx : (t401, _) idx_mut = (.a401.#a400) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a401) *)
    let shallow : (t401, _) idx_mut = (.a401) in
    let deepened = (.idx_mut(shallow).#a400) in
    mark_test_run 1864;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1864 failed %d" i;
    (* from (.a401.#a400) *)
    let shallow : (t401, _) idx_mut = (.a401.#a400) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1865;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1865 failed %d" i;
  );
  (* Deepening to (.a401.#b400) *)
  let idx : (t401, _) idx_mut = (.a401.#b400) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a401) *)
    let shallow : (t401, _) idx_mut = (.a401) in
    let deepened = (.idx_mut(shallow).#b400) in
    mark_test_run 1866;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1866 failed %d" i;
    (* from (.a401.#b400) *)
    let shallow : (t401, _) idx_mut = (.a401.#b400) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1867;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1867 failed %d" i;
  );
  (* Deepening to (.a401.#a400.#a155) *)
  let idx : (t401, _) idx_mut = (.a401.#a400.#a155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a401) *)
    let shallow : (t401, _) idx_mut = (.a401) in
    let deepened = (.idx_mut(shallow).#a400.#a155) in
    mark_test_run 1868;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1868 failed %d" i;
    (* from (.a401.#a400) *)
    let shallow : (t401, _) idx_mut = (.a401.#a400) in
    let deepened = (.idx_mut(shallow).#a155) in
    mark_test_run 1869;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1869 failed %d" i;
    (* from (.a401.#a400.#a155) *)
    let shallow : (t401, _) idx_mut = (.a401.#a400.#a155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1870;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1870 failed %d" i;
  );
  (* Deepening to (.a401.#a400.#b155) *)
  let idx : (t401, _) idx_mut = (.a401.#a400.#b155) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a401) *)
    let shallow : (t401, _) idx_mut = (.a401) in
    let deepened = (.idx_mut(shallow).#a400.#b155) in
    mark_test_run 1871;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1871 failed %d" i;
    (* from (.a401.#a400) *)
    let shallow : (t401, _) idx_mut = (.a401.#a400) in
    let deepened = (.idx_mut(shallow).#b155) in
    mark_test_run 1872;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1872 failed %d" i;
    (* from (.a401.#a400.#b155) *)
    let shallow : (t401, _) idx_mut = (.a401.#a400.#b155) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1873;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1873 failed %d" i;
  );

  (*************************************************)
  (*   t403 = { #{ #{ float#; float }; float } }   *)
  (*************************************************)
  (* Deepening to (.a403) *)
  let idx : (t403, _) idx_mut = (.a403) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a403) *)
    let shallow : (t403, _) idx_mut = (.a403) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1874;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1874 failed %d" i;
  );
  (* Deepening to (.a403.#a402) *)
  let idx : (t403, _) idx_mut = (.a403.#a402) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a403) *)
    let shallow : (t403, _) idx_mut = (.a403) in
    let deepened = (.idx_mut(shallow).#a402) in
    mark_test_run 1875;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1875 failed %d" i;
    (* from (.a403.#a402) *)
    let shallow : (t403, _) idx_mut = (.a403.#a402) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1876;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1876 failed %d" i;
  );
  (* Deepening to (.a403.#b402) *)
  let idx : (t403, _) idx_mut = (.a403.#b402) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a403) *)
    let shallow : (t403, _) idx_mut = (.a403) in
    let deepened = (.idx_mut(shallow).#b402) in
    mark_test_run 1877;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1877 failed %d" i;
    (* from (.a403.#b402) *)
    let shallow : (t403, _) idx_mut = (.a403.#b402) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1878;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1878 failed %d" i;
  );
  (* Deepening to (.a403.#a402.#a163) *)
  let idx : (t403, _) idx_mut = (.a403.#a402.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a403) *)
    let shallow : (t403, _) idx_mut = (.a403) in
    let deepened = (.idx_mut(shallow).#a402.#a163) in
    mark_test_run 1879;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1879 failed %d" i;
    (* from (.a403.#a402) *)
    let shallow : (t403, _) idx_mut = (.a403.#a402) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1880;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1880 failed %d" i;
    (* from (.a403.#a402.#a163) *)
    let shallow : (t403, _) idx_mut = (.a403.#a402.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1881;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1881 failed %d" i;
  );
  (* Deepening to (.a403.#a402.#b163) *)
  let idx : (t403, _) idx_mut = (.a403.#a402.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a403) *)
    let shallow : (t403, _) idx_mut = (.a403) in
    let deepened = (.idx_mut(shallow).#a402.#b163) in
    mark_test_run 1882;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1882 failed %d" i;
    (* from (.a403.#a402) *)
    let shallow : (t403, _) idx_mut = (.a403.#a402) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1883;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1883 failed %d" i;
    (* from (.a403.#a402.#b163) *)
    let shallow : (t403, _) idx_mut = (.a403.#a402.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1884;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1884 failed %d" i;
  );

  (**************************************************)
  (*   t405 = { #{ #{ float#; float }; float# } }   *)
  (**************************************************)
  (* Deepening to (.a405) *)
  let idx : (t405, _) idx_mut = (.a405) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a405) *)
    let shallow : (t405, _) idx_mut = (.a405) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1885;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1885 failed %d" i;
  );
  (* Deepening to (.a405.#a404) *)
  let idx : (t405, _) idx_mut = (.a405.#a404) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a405) *)
    let shallow : (t405, _) idx_mut = (.a405) in
    let deepened = (.idx_mut(shallow).#a404) in
    mark_test_run 1886;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1886 failed %d" i;
    (* from (.a405.#a404) *)
    let shallow : (t405, _) idx_mut = (.a405.#a404) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1887;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1887 failed %d" i;
  );
  (* Deepening to (.a405.#b404) *)
  let idx : (t405, _) idx_mut = (.a405.#b404) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a405) *)
    let shallow : (t405, _) idx_mut = (.a405) in
    let deepened = (.idx_mut(shallow).#b404) in
    mark_test_run 1888;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1888 failed %d" i;
    (* from (.a405.#b404) *)
    let shallow : (t405, _) idx_mut = (.a405.#b404) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1889;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1889 failed %d" i;
  );
  (* Deepening to (.a405.#a404.#a163) *)
  let idx : (t405, _) idx_mut = (.a405.#a404.#a163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a405) *)
    let shallow : (t405, _) idx_mut = (.a405) in
    let deepened = (.idx_mut(shallow).#a404.#a163) in
    mark_test_run 1890;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1890 failed %d" i;
    (* from (.a405.#a404) *)
    let shallow : (t405, _) idx_mut = (.a405.#a404) in
    let deepened = (.idx_mut(shallow).#a163) in
    mark_test_run 1891;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1891 failed %d" i;
    (* from (.a405.#a404.#a163) *)
    let shallow : (t405, _) idx_mut = (.a405.#a404.#a163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1892;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1892 failed %d" i;
  );
  (* Deepening to (.a405.#a404.#b163) *)
  let idx : (t405, _) idx_mut = (.a405.#a404.#b163) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a405) *)
    let shallow : (t405, _) idx_mut = (.a405) in
    let deepened = (.idx_mut(shallow).#a404.#b163) in
    mark_test_run 1893;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1893 failed %d" i;
    (* from (.a405.#a404) *)
    let shallow : (t405, _) idx_mut = (.a405.#a404) in
    let deepened = (.idx_mut(shallow).#b163) in
    mark_test_run 1894;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1894 failed %d" i;
    (* from (.a405.#a404.#b163) *)
    let shallow : (t405, _) idx_mut = (.a405.#a404.#b163) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1895;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1895 failed %d" i;
  );

  (**************************************************)
  (*   t407 = { #{ #{ float#; float# }; float } }   *)
  (**************************************************)
  (* Deepening to (.a407) *)
  let idx : (t407, _) idx_mut = (.a407) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a407) *)
    let shallow : (t407, _) idx_mut = (.a407) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1896;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1896 failed %d" i;
  );
  (* Deepening to (.a407.#a406) *)
  let idx : (t407, _) idx_mut = (.a407.#a406) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a407) *)
    let shallow : (t407, _) idx_mut = (.a407) in
    let deepened = (.idx_mut(shallow).#a406) in
    mark_test_run 1897;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1897 failed %d" i;
    (* from (.a407.#a406) *)
    let shallow : (t407, _) idx_mut = (.a407.#a406) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1898;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1898 failed %d" i;
  );
  (* Deepening to (.a407.#b406) *)
  let idx : (t407, _) idx_mut = (.a407.#b406) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a407) *)
    let shallow : (t407, _) idx_mut = (.a407) in
    let deepened = (.idx_mut(shallow).#b406) in
    mark_test_run 1899;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1899 failed %d" i;
    (* from (.a407.#b406) *)
    let shallow : (t407, _) idx_mut = (.a407.#b406) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1900;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1900 failed %d" i;
  );
  (* Deepening to (.a407.#a406.#a165) *)
  let idx : (t407, _) idx_mut = (.a407.#a406.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a407) *)
    let shallow : (t407, _) idx_mut = (.a407) in
    let deepened = (.idx_mut(shallow).#a406.#a165) in
    mark_test_run 1901;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1901 failed %d" i;
    (* from (.a407.#a406) *)
    let shallow : (t407, _) idx_mut = (.a407.#a406) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1902;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1902 failed %d" i;
    (* from (.a407.#a406.#a165) *)
    let shallow : (t407, _) idx_mut = (.a407.#a406.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1903;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1903 failed %d" i;
  );
  (* Deepening to (.a407.#a406.#b165) *)
  let idx : (t407, _) idx_mut = (.a407.#a406.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a407) *)
    let shallow : (t407, _) idx_mut = (.a407) in
    let deepened = (.idx_mut(shallow).#a406.#b165) in
    mark_test_run 1904;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1904 failed %d" i;
    (* from (.a407.#a406) *)
    let shallow : (t407, _) idx_mut = (.a407.#a406) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1905;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1905 failed %d" i;
    (* from (.a407.#a406.#b165) *)
    let shallow : (t407, _) idx_mut = (.a407.#a406.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1906;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1906 failed %d" i;
  );

  (***************************************************)
  (*   t409 = { #{ #{ float#; float# }; float# } }   *)
  (***************************************************)
  (* Deepening to (.a409) *)
  let idx : (t409, _) idx_mut = (.a409) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a409) *)
    let shallow : (t409, _) idx_mut = (.a409) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1907;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1907 failed %d" i;
  );
  (* Deepening to (.a409.#a408) *)
  let idx : (t409, _) idx_mut = (.a409.#a408) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a409) *)
    let shallow : (t409, _) idx_mut = (.a409) in
    let deepened = (.idx_mut(shallow).#a408) in
    mark_test_run 1908;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1908 failed %d" i;
    (* from (.a409.#a408) *)
    let shallow : (t409, _) idx_mut = (.a409.#a408) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1909;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1909 failed %d" i;
  );
  (* Deepening to (.a409.#b408) *)
  let idx : (t409, _) idx_mut = (.a409.#b408) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a409) *)
    let shallow : (t409, _) idx_mut = (.a409) in
    let deepened = (.idx_mut(shallow).#b408) in
    mark_test_run 1910;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1910 failed %d" i;
    (* from (.a409.#b408) *)
    let shallow : (t409, _) idx_mut = (.a409.#b408) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1911;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1911 failed %d" i;
  );
  (* Deepening to (.a409.#a408.#a165) *)
  let idx : (t409, _) idx_mut = (.a409.#a408.#a165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a409) *)
    let shallow : (t409, _) idx_mut = (.a409) in
    let deepened = (.idx_mut(shallow).#a408.#a165) in
    mark_test_run 1912;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1912 failed %d" i;
    (* from (.a409.#a408) *)
    let shallow : (t409, _) idx_mut = (.a409.#a408) in
    let deepened = (.idx_mut(shallow).#a165) in
    mark_test_run 1913;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1913 failed %d" i;
    (* from (.a409.#a408.#a165) *)
    let shallow : (t409, _) idx_mut = (.a409.#a408.#a165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1914;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1914 failed %d" i;
  );
  (* Deepening to (.a409.#a408.#b165) *)
  let idx : (t409, _) idx_mut = (.a409.#a408.#b165) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a409) *)
    let shallow : (t409, _) idx_mut = (.a409) in
    let deepened = (.idx_mut(shallow).#a408.#b165) in
    mark_test_run 1915;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1915 failed %d" i;
    (* from (.a409.#a408) *)
    let shallow : (t409, _) idx_mut = (.a409.#a408) in
    let deepened = (.idx_mut(shallow).#b165) in
    mark_test_run 1916;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1916 failed %d" i;
    (* from (.a409.#a408.#b165) *)
    let shallow : (t409, _) idx_mut = (.a409.#a408.#b165) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1917;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1917 failed %d" i;
  );

  (***********************************************)
  (*   t411 = { #{ #{ int64x2#; int }; int } }   *)
  (***********************************************)
  (* Deepening to (.a411) *)
  let idx : (t411, _) idx_mut = (.a411) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a411) *)
    let shallow : (t411, _) idx_mut = (.a411) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1918;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1918 failed %d" i;
  );
  (* Deepening to (.a411.#a410) *)
  let idx : (t411, _) idx_mut = (.a411.#a410) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a411) *)
    let shallow : (t411, _) idx_mut = (.a411) in
    let deepened = (.idx_mut(shallow).#a410) in
    mark_test_run 1919;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1919 failed %d" i;
    (* from (.a411.#a410) *)
    let shallow : (t411, _) idx_mut = (.a411.#a410) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1920;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1920 failed %d" i;
  );
  (* Deepening to (.a411.#b410) *)
  let idx : (t411, _) idx_mut = (.a411.#b410) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a411) *)
    let shallow : (t411, _) idx_mut = (.a411) in
    let deepened = (.idx_mut(shallow).#b410) in
    mark_test_run 1921;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1921 failed %d" i;
    (* from (.a411.#b410) *)
    let shallow : (t411, _) idx_mut = (.a411.#b410) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1922;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1922 failed %d" i;
  );
  (* Deepening to (.a411.#a410.#a58) *)
  let idx : (t411, _) idx_mut = (.a411.#a410.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a411) *)
    let shallow : (t411, _) idx_mut = (.a411) in
    let deepened = (.idx_mut(shallow).#a410.#a58) in
    mark_test_run 1923;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1923 failed %d" i;
    (* from (.a411.#a410) *)
    let shallow : (t411, _) idx_mut = (.a411.#a410) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1924;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1924 failed %d" i;
    (* from (.a411.#a410.#a58) *)
    let shallow : (t411, _) idx_mut = (.a411.#a410.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1925;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1925 failed %d" i;
  );
  (* Deepening to (.a411.#a410.#b58) *)
  let idx : (t411, _) idx_mut = (.a411.#a410.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a411) *)
    let shallow : (t411, _) idx_mut = (.a411) in
    let deepened = (.idx_mut(shallow).#a410.#b58) in
    mark_test_run 1926;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1926 failed %d" i;
    (* from (.a411.#a410) *)
    let shallow : (t411, _) idx_mut = (.a411.#a410) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1927;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1927 failed %d" i;
    (* from (.a411.#a410.#b58) *)
    let shallow : (t411, _) idx_mut = (.a411.#a410.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1928;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1928 failed %d" i;
  );

  (****************************************************)
  (*   t413 = { #{ #{ int64x2#; int }; int64x2# } }   *)
  (****************************************************)
  (* Deepening to (.a413) *)
  let idx : (t413, _) idx_mut = (.a413) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a413) *)
    let shallow : (t413, _) idx_mut = (.a413) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1929;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1929 failed %d" i;
  );
  (* Deepening to (.a413.#a412) *)
  let idx : (t413, _) idx_mut = (.a413.#a412) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a413) *)
    let shallow : (t413, _) idx_mut = (.a413) in
    let deepened = (.idx_mut(shallow).#a412) in
    mark_test_run 1930;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1930 failed %d" i;
    (* from (.a413.#a412) *)
    let shallow : (t413, _) idx_mut = (.a413.#a412) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1931;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1931 failed %d" i;
  );
  (* Deepening to (.a413.#b412) *)
  let idx : (t413, _) idx_mut = (.a413.#b412) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a413) *)
    let shallow : (t413, _) idx_mut = (.a413) in
    let deepened = (.idx_mut(shallow).#b412) in
    mark_test_run 1932;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1932 failed %d" i;
    (* from (.a413.#b412) *)
    let shallow : (t413, _) idx_mut = (.a413.#b412) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1933;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1933 failed %d" i;
  );
  (* Deepening to (.a413.#a412.#a58) *)
  let idx : (t413, _) idx_mut = (.a413.#a412.#a58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a413) *)
    let shallow : (t413, _) idx_mut = (.a413) in
    let deepened = (.idx_mut(shallow).#a412.#a58) in
    mark_test_run 1934;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1934 failed %d" i;
    (* from (.a413.#a412) *)
    let shallow : (t413, _) idx_mut = (.a413.#a412) in
    let deepened = (.idx_mut(shallow).#a58) in
    mark_test_run 1935;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1935 failed %d" i;
    (* from (.a413.#a412.#a58) *)
    let shallow : (t413, _) idx_mut = (.a413.#a412.#a58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1936;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1936 failed %d" i;
  );
  (* Deepening to (.a413.#a412.#b58) *)
  let idx : (t413, _) idx_mut = (.a413.#a412.#b58) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a413) *)
    let shallow : (t413, _) idx_mut = (.a413) in
    let deepened = (.idx_mut(shallow).#a412.#b58) in
    mark_test_run 1937;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1937 failed %d" i;
    (* from (.a413.#a412) *)
    let shallow : (t413, _) idx_mut = (.a413.#a412) in
    let deepened = (.idx_mut(shallow).#b58) in
    mark_test_run 1938;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1938 failed %d" i;
    (* from (.a413.#a412.#b58) *)
    let shallow : (t413, _) idx_mut = (.a413.#a412.#b58) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1939;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1939 failed %d" i;
  );

  (****************************************************)
  (*   t415 = { #{ #{ int64x2#; int64x2# }; int } }   *)
  (****************************************************)
  (* Deepening to (.a415) *)
  let idx : (t415, _) idx_mut = (.a415) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a415) *)
    let shallow : (t415, _) idx_mut = (.a415) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1940;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1940 failed %d" i;
  );
  (* Deepening to (.a415.#a414) *)
  let idx : (t415, _) idx_mut = (.a415.#a414) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a415) *)
    let shallow : (t415, _) idx_mut = (.a415) in
    let deepened = (.idx_mut(shallow).#a414) in
    mark_test_run 1941;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1941 failed %d" i;
    (* from (.a415.#a414) *)
    let shallow : (t415, _) idx_mut = (.a415.#a414) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1942;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1942 failed %d" i;
  );
  (* Deepening to (.a415.#b414) *)
  let idx : (t415, _) idx_mut = (.a415.#b414) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a415) *)
    let shallow : (t415, _) idx_mut = (.a415) in
    let deepened = (.idx_mut(shallow).#b414) in
    mark_test_run 1943;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1943 failed %d" i;
    (* from (.a415.#b414) *)
    let shallow : (t415, _) idx_mut = (.a415.#b414) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1944;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1944 failed %d" i;
  );
  (* Deepening to (.a415.#a414.#a60) *)
  let idx : (t415, _) idx_mut = (.a415.#a414.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a415) *)
    let shallow : (t415, _) idx_mut = (.a415) in
    let deepened = (.idx_mut(shallow).#a414.#a60) in
    mark_test_run 1945;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1945 failed %d" i;
    (* from (.a415.#a414) *)
    let shallow : (t415, _) idx_mut = (.a415.#a414) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1946;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1946 failed %d" i;
    (* from (.a415.#a414.#a60) *)
    let shallow : (t415, _) idx_mut = (.a415.#a414.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1947;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1947 failed %d" i;
  );
  (* Deepening to (.a415.#a414.#b60) *)
  let idx : (t415, _) idx_mut = (.a415.#a414.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a415) *)
    let shallow : (t415, _) idx_mut = (.a415) in
    let deepened = (.idx_mut(shallow).#a414.#b60) in
    mark_test_run 1948;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1948 failed %d" i;
    (* from (.a415.#a414) *)
    let shallow : (t415, _) idx_mut = (.a415.#a414) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1949;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1949 failed %d" i;
    (* from (.a415.#a414.#b60) *)
    let shallow : (t415, _) idx_mut = (.a415.#a414.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1950;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1950 failed %d" i;
  );

  (*********************************************************)
  (*   t417 = { #{ #{ int64x2#; int64x2# }; int64x2# } }   *)
  (*********************************************************)
  (* Deepening to (.a417) *)
  let idx : (t417, _) idx_mut = (.a417) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a417) *)
    let shallow : (t417, _) idx_mut = (.a417) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1951;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1951 failed %d" i;
  );
  (* Deepening to (.a417.#a416) *)
  let idx : (t417, _) idx_mut = (.a417.#a416) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a417) *)
    let shallow : (t417, _) idx_mut = (.a417) in
    let deepened = (.idx_mut(shallow).#a416) in
    mark_test_run 1952;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1952 failed %d" i;
    (* from (.a417.#a416) *)
    let shallow : (t417, _) idx_mut = (.a417.#a416) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1953;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1953 failed %d" i;
  );
  (* Deepening to (.a417.#b416) *)
  let idx : (t417, _) idx_mut = (.a417.#b416) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a417) *)
    let shallow : (t417, _) idx_mut = (.a417) in
    let deepened = (.idx_mut(shallow).#b416) in
    mark_test_run 1954;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1954 failed %d" i;
    (* from (.a417.#b416) *)
    let shallow : (t417, _) idx_mut = (.a417.#b416) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1955;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1955 failed %d" i;
  );
  (* Deepening to (.a417.#a416.#a60) *)
  let idx : (t417, _) idx_mut = (.a417.#a416.#a60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a417) *)
    let shallow : (t417, _) idx_mut = (.a417) in
    let deepened = (.idx_mut(shallow).#a416.#a60) in
    mark_test_run 1956;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1956 failed %d" i;
    (* from (.a417.#a416) *)
    let shallow : (t417, _) idx_mut = (.a417.#a416) in
    let deepened = (.idx_mut(shallow).#a60) in
    mark_test_run 1957;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1957 failed %d" i;
    (* from (.a417.#a416.#a60) *)
    let shallow : (t417, _) idx_mut = (.a417.#a416.#a60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1958;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1958 failed %d" i;
  );
  (* Deepening to (.a417.#a416.#b60) *)
  let idx : (t417, _) idx_mut = (.a417.#a416.#b60) in
  iter indices_in_deepening_tests ~f:(fun i ->
    (* from (.a417) *)
    let shallow : (t417, _) idx_mut = (.a417) in
    let deepened = (.idx_mut(shallow).#a416.#b60) in
    mark_test_run 1959;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1959 failed %d" i;
    (* from (.a417.#a416) *)
    let shallow : (t417, _) idx_mut = (.a417.#a416) in
    let deepened = (.idx_mut(shallow).#b60) in
    mark_test_run 1960;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1960 failed %d" i;
    (* from (.a417.#a416.#b60) *)
    let shallow : (t417, _) idx_mut = (.a417.#a416.#b60) in
    let deepened = (.idx_mut(shallow)) in
    mark_test_run 1961;
    let test = Idx_repr.equal (Idx_repr.of_idx_mut idx) (Idx_repr.of_idx_mut deepened) in
    if not test then failwithf "test 1961 failed %d" i;
  );

  ()
;;

for i = 1 to 1961 do
  if not (Int_set.mem i !tests_run) then failwithf "test %d not run" i
done;;
let () = Printf.printf "All tests passed.%!\n";;
