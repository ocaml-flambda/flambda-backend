*** After cfgize

cfg for 
camlDcfg_tailcalls__normal_recursive_0_49_code
layout.length=5
blocks.length=5

1:
goto 100
predecessors:
successors: 100
exn-successors:

100:
n:I/61[%rax] := R:I/0[%rax]
I/63[%rax] := n:I/61[%rax]
n:I/62[%rax] := I/63[%rax]
goto 102
predecessors: 1
successors: 102
exn-successors:

102:
if n:I/62[%rax] < s 1 goto 106
if n:I/62[%rax] = s 1 goto 106
if n:I/62[%rax] > s 1 goto 105
predecessors: 100 105
successors: 105 106
exn-successors:

105:
I/65[%rax] := n:I/62[%rax]
I/65[%rax] := I/65[%rax] + -4
I/66[%rax] := I/65[%rax]
n:I/62[%rax] := I/66[%rax]
goto 102
predecessors: 102
successors: 102
exn-successors:

106:
I/64[%rax] := 1
R:I/0[%rax] := I/64[%rax]
Return R:I/0[%rax]
predecessors: 102
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_normal_recursive_1_50_code
layout.length=3
blocks.length=3

1:
prologue
goto 108
predecessors:
successors: 108
exn-successors:

108:
I/62[%rax] := 7
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__normal_recursive_0_49_code" R:I/0[%rax]
goto 110
predecessors: 1
successors: 110
exn-successors:

110:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 108
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutually_recursive0_2_51_code
layout.length=4
blocks.length=4

1:
goto 112
predecessors:
successors: 112
exn-successors:

112:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 115
if n:I/61[%rax] = s 1 goto 115
if n:I/61[%rax] > s 1 goto 114
predecessors: 1
successors: 114 115
exn-successors:

114:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
tailcall(opos tail default) "camlDcfg_tailcalls__mutally_recursive1_3_52_code" R:I/0[%rax]
predecessors: 112
successors:
exn-successors:

115:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 112
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutally_recursive1_3_52_code
layout.length=2
blocks.length=2

1:
goto 117
predecessors:
successors: 117
exn-successors:

117:
n:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] + 2
R:I/0[%rax] := I/62[%rax]
tailcall(opos tail default) "camlDcfg_tailcalls__mutually_recursive0_2_51_code" R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_mutually_recursive_4_53_code
layout.length=3
blocks.length=3

1:
prologue
goto 119
predecessors:
successors: 119
exn-successors:

119:
I/62[%rax] := 7
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__mutually_recursive0_2_51_code" R:I/0[%rax]
goto 121
predecessors: 1
successors: 121
exn-successors:

121:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 119
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutually_recursive_not_in_tail_position0_5_54_code
layout.length=5
blocks.length=5

1:
prologue
goto 123
predecessors:
successors: 123
exn-successors:

123:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 126
if n:I/61[%rax] = s 1 goto 126
if n:I/61[%rax] > s 1 goto 125
predecessors: 1
successors: 125 126
exn-successors:

125:
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] + -4
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos not_tail default) "camlDcfg_tailcalls__mutally_recursive1_6_55_code" R:I/0[%rax]
goto 128
predecessors: 123
successors: 128
exn-successors:

128:
apply_result:I/63[%rax] := R:I/0[%rax]
I/64[%rax] := apply_result:I/63[%rax]
I/64[%rax] := I/64[%rax] + 2
R:I/0[%rax] := I/64[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 125
successors:
exn-successors:

126:
R:I/0[%rax] := n:I/61[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 123
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutally_recursive1_6_55_code
layout.length=2
blocks.length=2

1:
goto 130
predecessors:
successors: 130
exn-successors:

130:
n:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] + 2
R:I/0[%rax] := I/62[%rax]
tailcall(opos tail default) "camlDcfg_tailcalls__mutually_recursive_not_in_tail_position0_5_54_code" R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_mutually_recursive_not_in_tail_position_7_56_code
layout.length=3
blocks.length=3

1:
prologue
goto 132
predecessors:
successors: 132
exn-successors:

132:
I/62[%rax] := 7
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__mutually_recursive_not_in_tail_position0_5_54_code" R:I/0[%rax]
goto 134
predecessors: 1
successors: 134
exn-successors:

134:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 132
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__multiple_callers_8_57_code
layout.length=2
blocks.length=2

1:
goto 136
predecessors:
successors: 136
exn-successors:

136:
n:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] * 5
I/63[%rax] := I/62[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_multiple_callers0_9_58_code
layout.length=3
blocks.length=3

1:
prologue
goto 138
predecessors:
successors: 138
exn-successors:

138:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__multiple_callers_8_57_code" R:I/0[%rax]
goto 140
predecessors: 1
successors: 140
exn-successors:

140:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 138
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_multiple_callers1_10_59_code
layout.length=3
blocks.length=3

1:
prologue
goto 142
predecessors:
successors: 142
exn-successors:

142:
I/62[%rax] := 3
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos not_tail default) "camlDcfg_tailcalls__multiple_callers_8_57_code" R:I/0[%rax]
goto 144
predecessors: 1
successors: 144
exn-successors:

144:
k:I/63[%rax] := R:I/0[%rax]
I/64[%rax] := k:I/63[%rax]
I/64[%rax] := I/64[%rax] + 2
R:I/0[%rax] := I/64[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 142
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_multiple_callers2_11_60_code
layout.length=2
blocks.length=2

1:
goto 146
predecessors:
successors: 146
exn-successors:

146:
I/62[%rax] := 5
R:I/0[%rax] := I/62[%rax]
tailcall(opos tail [@tail]) "camlDcfg_tailcalls__multiple_callers_8_57_code" R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__explicit_tail_12_61_code
layout.length=4
blocks.length=4

1:
goto 148
predecessors:
successors: 148
exn-successors:

148:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 151
if n:I/61[%rax] = s 1 goto 151
if n:I/61[%rax] > s 1 goto 150
predecessors: 1 150
successors: 150 151
exn-successors:

150:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
tailcall(opos tail [@tail]) "self(148)" R:I/0[%rax]
predecessors: 148
successors: 148
exn-successors:

151:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 148
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__hint_tail_13_62_code
layout.length=4
blocks.length=4

1:
goto 153
predecessors:
successors: 153
exn-successors:

153:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 156
if n:I/61[%rax] = s 1 goto 156
if n:I/61[%rax] > s 1 goto 155
predecessors: 1 155
successors: 155 156
exn-successors:

155:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
tailcall(opos tail [@tail hint]) "self(153)" R:I/0[%rax]
predecessors: 153
successors: 153
exn-successors:

156:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 153
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__explicit_nontail_14_63_code
layout.length=5
blocks.length=5

1:
prologue
goto 158
predecessors:
successors: 158
exn-successors:

158:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 161
if n:I/61[%rax] = s 1 goto 161
if n:I/61[%rax] > s 1 goto 160
predecessors: 1
successors: 160 161
exn-successors:

160:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
R:I/0[%rax] := call(opos tail [@nontail]) "camlDcfg_tailcalls__explicit_nontail_14_63_code" R:I/0[%rax]
goto 163
predecessors: 158
successors: 163
exn-successors:

163:
I/64[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/64[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 160
successors:
exn-successors:

161:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 158
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__nontail_optimized_to_tail_15_64_code
layout.length=4
blocks.length=4

1:
goto 165
predecessors:
successors: 165
exn-successors:

165:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 168
if n:I/61[%rax] = s 1 goto 168
if n:I/61[%rax] > s 1 goto 167
predecessors: 1 167
successors: 167 168
exn-successors:

167:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
tailcall(opos not_tail default) "self(165)" R:I/0[%rax]
predecessors: 165
successors: 165
exn-successors:

168:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 165
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code
layout.length=2
blocks.length=2

1:
goto 170
predecessors:
successors: 170
exn-successors:

170:
n:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] * 5
I/63[%rax] := I/62[%rax]
I/63[%rax] := I/63[%rax] + -4
R:I/0[%rax] := I/63[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_same_caller_multiple_applications_17_66_code
layout.length=11
blocks.length=11

1:
prologue
goto 172
predecessors:
successors: 172
exn-successors:

172:
n:I/61[%rbx] := R:I/0[%rax]
dividend:I/62[%rdi] := n:I/61[%rbx]
dividend:I/62[%rdi] := dividend:I/62[%rdi] >>s 1
I/63[%rsi] := dividend:I/62[%rdi]
I/63[%rsi] := I/63[%rsi] >>u 63
I/64[%rdx] := 5270498306774157605
R:I/0[%rax] := dividend:I/62[%rdi]
R:I/4[%rdx] := R:I/0[%rax] *h I/64[%rdx]
I/65[%rdx] := R:I/4[%rdx]
I/66[%rdx] := I/65[%rdx]
I/66[%rdx] := I/66[%rdx] >>s 1
I/67[%rdx] := I/66[%rdx]
I/67[%rdx] := I/67[%rdx] + I/63[%rsi]
I/68[%rdx] := I/67[%rdx]
I/68[%rdx] := I/68[%rdx] * 7
I/69[%rdi] := dividend:I/62[%rdi]
I/69[%rdi] := I/69[%rdi] - I/68[%rdx]
*match*:I/70[%rax] := I/69[%rdi]  * 2 + 1
if *match*:I/70[%rax] < u 7 goto 175
if *match*:I/70[%rax] = u 7 goto 175
if *match*:I/70[%rax] > u 7 goto 174
predecessors: 1
successors: 174 175
exn-successors:

174:
I/79[%rax] := n:I/61[%rbx]
I/79[%rax] := I/79[%rax] + 8
R:I/0[%rax] := I/79[%rax]
R:I/0[%rax] := call(opos not_tail default) "camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code" R:I/0[%rax]
goto 177
predecessors: 172
successors: 177
exn-successors:

177:
apply_result:I/80[%rax] := R:I/0[%rax]
I/81[%rax] := apply_result:I/80[%rax]
I/81[%rax] := I/81[%rax] + 2
R:I/0[%rax] := I/81[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 174
successors:
exn-successors:

175:
switcher:I/71[%rax] := *match*:I/70[%rax]
switcher:I/71[%rax] := switcher:I/71[%rax] >>s 1
switch switcher:I/71[%rax]
case 0: goto 178
case 1: goto 179
case 2: goto 180
case 3: goto 181
predecessors: 172
successors: 178 179 180 181
exn-successors:

178:
R:I/0[%rax] := n:I/61[%rbx]
tailcall(opos tail [@tail]) "camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code" R:I/0[%rax]
predecessors: 175
successors:
exn-successors:

179:
I/73[%rax] := n:I/61[%rbx]
I/73[%rax] := I/73[%rax] + 2
R:I/0[%rax] := I/73[%rax]
tailcall(opos tail [@tail hint]) "camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code" R:I/0[%rax]
predecessors: 175
successors:
exn-successors:

180:
I/75[%rax] := n:I/61[%rbx]
I/75[%rax] := I/75[%rax] + 4
R:I/0[%rax] := I/75[%rax]
R:I/0[%rax] := call(opos tail [@nontail]) "camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code" R:I/0[%rax]
goto 183
predecessors: 175
successors: 183
exn-successors:

183:
I/76[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/76[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 180
successors:
exn-successors:

181:
I/77[%rax] := n:I/61[%rbx]
I/77[%rax] := I/77[%rax] + 6
R:I/0[%rax] := I/77[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__same_caller_multiple_applications_16_65_code" R:I/0[%rax]
goto 184
predecessors: 175
successors: 184
exn-successors:

184:
I/78[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/78[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 181
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__sum_uncurried_18_67_code
layout.length=2
blocks.length=2

1:
goto 189
predecessors:
successors: 189
exn-successors:

189:
param:I/61[%rax] := R:I/0[%rax]
param:I/62[%rbx] := R:I/1[%rbx]
param:I/63[%rdi] := R:I/2[%rdi]
I/64[%rax] := param:I/61[%rax]
I/64[%rax] := I/64[%rax] + param:I/62[%rbx]
I/65[%rax] := I/64[%rax] + param:I/63[%rdi] + -2
R:I/0[%rax] := I/65[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__sum_19_68_code
layout.length=2
blocks.length=2

1:
goto 191
predecessors:
successors: 191
exn-successors:

191:
a:I/61[%rax] := R:I/0[%rax]
b:I/62[%rbx] := R:I/1[%rbx]
c:I/63[%rdi] := R:I/2[%rdi]
I/64[%rax] := a:I/61[%rax]
I/64[%rax] := I/64[%rax] + b:I/62[%rbx]
I/65[%rax] := I/64[%rax] + c:I/63[%rdi] + -2
R:I/0[%rax] := I/65[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_closure_in_tail_position_20_69_code
layout.length=3
blocks.length=3

1:
prologue
goto 193
predecessors:
successors: 193
exn-successors:

193:
n:I/61[%rax] := R:I/0[%rax]
spilled-n:I/65[s[i:0]] := n:I/61[%rax] (spill)
R:I/0[%rax] := n:I/61[%rax]
R:I/0[%rax] := call(opos not_tail default) "camlDcfg_tailcalls__sum_closure_21_70_code" R:I/0[%rax]
goto 195
predecessors: 1
successors: 195
exn-successors:

195:
apply_result:V/62[%rbx] := R:I/0[%rax]
I/63[%rdi] := int  mut[apply_result:V/62[%rbx]]
n:I/66[%rax] := spilled-n:I/65[s[i:0]] (reload)
R:I/0[%rax] := n:I/66[%rax]
R:I/1[%rbx] := apply_result:V/62[%rbx]
tailcall(opos tail default) I/63[%rdi] R:I/0[%rax] R:I/1[%rbx]
predecessors: 193
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__sum_closure_21_70_code
layout.length=2
blocks.length=2

1:
prologue
goto 197
predecessors:
successors: 197
exn-successors:

197:
k:I/61[%rax] := R:I/0[%rax]

{}
V/62[%rbx] := alloc 40
[V/62[%rbx] + -8] := 4343 (init)
I/63[%rdi] := "camlDcfg_tailcalls__partial_sum_22_22_code"
val[V/62[%rbx]] := I/63[%rdi] (init)
I/64[%rdi] := 108086391056891911
val[V/62[%rbx] + 8] := I/64[%rdi] (init)
val[V/62[%rbx] + 16] := k:I/61[%rax] (init)
I/65[%rax] := "camlDcfg_tailcalls__sum_68"
val[V/62[%rbx] + 24] := I/65[%rax] (init)
R:I/0[%rax] := V/62[%rbx]
reload retaddr
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__partial_sum_22_22_code
layout.length=3
blocks.length=3

1:
prologue
goto 202
predecessors:
successors: 202
exn-successors:

202:
param2:I/61[%rdi] := R:I/0[%rax]
my_closure:V/62[%rbx] := R:I/1[%rbx]
*closure*:V/63[%rsi] := val [my_closure:V/62[%rbx] + 24]
I/64[%rbx] := int [my_closure:V/62[%rbx] + 16]
I/65[%rax] := I/64[%rbx]
I/66[%rdx] := int  mut[*closure*:V/63[%rsi] + 16]
R:I/0[%rax] := I/65[%rax]
R:I/1[%rbx] := I/64[%rbx]
R:I/2[%rdi] := param2:I/61[%rdi]
R:I/3[%rsi] := *closure*:V/63[%rsi]
R:I/0[%rax] := call(opos tail default) I/66[%rdx] R:I/0[%rax] R:I/1[%rbx] R:I/2[%rdi] R:I/3[%rsi]
goto 204
predecessors: 1
successors: 204
exn-successors:

204:
I/67[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/67[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 202
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__collatz_23_71_code
layout.length=5
blocks.length=5

1:
prologue
goto 206
predecessors:
successors: 206
exn-successors:

206:
n:I/61[%rax] := R:I/0[%rax]
k:I/62[%rbx] := R:I/1[%rbx]
if n:I/61[%rax] < s 1 goto 209
if n:I/61[%rax] = s 1 goto 209
if n:I/61[%rax] > s 1 goto 208
predecessors: 1
successors: 208 209
exn-successors:

208:
R:I/0[%rax] := n:I/61[%rax]
R:I/1[%rbx] := k:I/62[%rbx]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__next_24_72_code" R:I/0[%rax] R:I/1[%rbx]
goto 211
predecessors: 206
successors: 211
exn-successors:

211:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 208
successors:
exn-successors:

209:
R:I/0[%rax] := k:I/62[%rbx]
reload retaddr
Return R:I/0[%rax]
predecessors: 206
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__next_24_72_code
layout.length=5
blocks.length=5

1:
goto 213
predecessors:
successors: 213
exn-successors:

213:
n:I/61[%rax] := R:I/0[%rax]
k:I/62[%rbx] := R:I/1[%rbx]
dividend:I/64[%rdi] := k:I/62[%rbx]
dividend:I/64[%rdi] := dividend:I/64[%rdi] >>s 1
I/65[%rsi] := dividend:I/64[%rdi]
I/65[%rsi] := I/65[%rsi] >>u 63
I/66[%rdx] := dividend:I/64[%rdi]
I/66[%rdx] := I/66[%rdx] + I/65[%rsi]
I/67[%rsi] := I/66[%rdx]
I/67[%rsi] := I/67[%rsi] & -2
I/68[%rdi] := dividend:I/64[%rdi]
I/68[%rdi] := I/68[%rdi] - I/67[%rsi]
I/69[%rdi] := I/68[%rdi]  * 2 + 1
if I/69[%rdi] < s 1 goto 219
if I/69[%rdi] = s 1 goto 218
if I/69[%rdi] > s 1 goto 219
predecessors: 1
successors: 218 219
exn-successors:

218:
I/74[%rbx] := I/66[%rdx]
I/75[%rbx] := I/74[%rbx]
I/75[%rbx] := I/75[%rbx] | 1
I/76[%rbx] := I/75[%rbx]
k:I/63[%rbx] := I/76[%rbx]
goto 215
predecessors: 213
successors: 215
exn-successors:

219:
I/70[%rbx] := k:I/62[%rbx]
I/70[%rbx] := I/70[%rbx] * 3
I/71[%rbx] := I/70[%rbx]
k:I/63[%rbx] := I/71[%rbx]
goto 215
predecessors: 213
successors: 215
exn-successors:

215:
I/77[%rax] := n:I/61[%rax]
I/77[%rax] := I/77[%rax] + -2
R:I/0[%rax] := I/77[%rax]
R:I/1[%rbx] := k:I/63[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__collatz_23_71_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 218 219
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutually_recursive_and_calls_parameter0_25_73_code
layout.length=4
blocks.length=4

1:
goto 221
predecessors:
successors: 221
exn-successors:

221:
f:V/61[%rdi] := R:I/0[%rax]
n:I/62[%rbx] := R:I/1[%rbx]
if n:I/62[%rbx] < s 1 goto 224
if n:I/62[%rbx] = s 1 goto 224
if n:I/62[%rbx] > s 1 goto 223
predecessors: 1
successors: 223 224
exn-successors:

223:
I/66[%rbx] := n:I/62[%rbx]
I/66[%rbx] := I/66[%rbx] + -4
R:I/0[%rax] := f:V/61[%rdi]
R:I/1[%rbx] := I/66[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__mutually_recursive_and_calls_parameter1_26_74_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 221
successors:
exn-successors:

224:
I/63[%rax] := 3
I/64[%rsi] := int  mut[f:V/61[%rdi]]
R:I/0[%rax] := I/63[%rax]
R:I/1[%rbx] := f:V/61[%rdi]
tailcall(opos tail default) I/64[%rsi] R:I/0[%rax] R:I/1[%rbx]
predecessors: 221
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__mutually_recursive_and_calls_parameter1_26_74_code
layout.length=4
blocks.length=4

1:
goto 226
predecessors:
successors: 226
exn-successors:

226:
f:V/61[%rdi] := R:I/0[%rax]
n:I/62[%rbx] := R:I/1[%rbx]
if n:I/62[%rbx] < s 1 goto 229
if n:I/62[%rbx] = s 1 goto 229
if n:I/62[%rbx] > s 1 goto 228
predecessors: 1
successors: 228 229
exn-successors:

228:
I/66[%rbx] := n:I/62[%rbx]
I/66[%rbx] := I/66[%rbx] + 2
R:I/0[%rax] := f:V/61[%rdi]
R:I/1[%rbx] := I/66[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__mutually_recursive_and_calls_parameter0_25_73_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 226
successors:
exn-successors:

229:
I/63[%rax] := 1
I/64[%rsi] := int  mut[f:V/61[%rdi]]
R:I/0[%rax] := I/63[%rax]
R:I/1[%rbx] := f:V/61[%rdi]
tailcall(opos tail default) I/64[%rsi] R:I/0[%rax] R:I/1[%rbx]
predecessors: 226
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:106,51--67]_28_76_code
layout.length=2
blocks.length=2

1:
goto 231
predecessors:
successors: 231
exn-successors:

231:
x:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := x:I/61[%rax]
I/62[%rax] := I/62[%rax] + 2
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_list_map_in_tail_position_27_75_code
layout.length=3
blocks.length=3

1:
prologue
goto 233
predecessors:
successors: 233
exn-successors:

233:
lst:V/61[%rbx] := R:I/0[%rax]
I/62[%rax] := "camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:106,51--67]_75"
R:I/0[%rax] := I/62[%rax]
R:I/1[%rbx] := lst:V/61[%rbx]
R:I/0[%rax] := call(opos tail default) "camlStdlib__List__map_15_113_code" R:I/0[%rax] R:I/1[%rbx]
goto 235
predecessors: 1
successors: 235
exn-successors:

235:
V/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := V/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 233
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_list_map_not_in_tail_position_29_77_code
layout.length=3
blocks.length=3

1:
prologue
goto 237
predecessors:
successors: 237
exn-successors:

237:
lst:V/61[%rbx] := R:I/0[%rax]
I/62[%rax] := "camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:108,21--37]_77"
R:I/0[%rax] := I/62[%rax]
R:I/1[%rbx] := lst:V/61[%rbx]
R:I/0[%rax] := call(opos not_tail default) "camlStdlib__List__map_15_113_code" R:I/0[%rax] R:I/1[%rbx]
goto 239
predecessors: 1
successors: 239
exn-successors:

239:
lst:V/63[%rax] := R:I/0[%rax]
lst:V/63[%rax] := opaque lst:V/63[%rax]
R:I/0[%rax] := lst:V/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 237
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:108,21--37]_30_78_code
layout.length=2
blocks.length=2

1:
goto 241
predecessors:
successors: 241
exn-successors:

241:
x:I/61[%rax] := R:I/0[%rax]
I/62[%rax] := x:I/61[%rax]
I/62[%rax] := I/62[%rax] + 2
R:I/0[%rax] := I/62[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__cps_style0_31_79_code
layout.length=4
blocks.length=4

1:
goto 243
predecessors:
successors: 243
exn-successors:

243:
n:I/61[%rax] := R:I/0[%rax]
k:V/62[%rbx] := R:I/1[%rbx]
if n:I/61[%rax] < s 1 goto 245
if n:I/61[%rax] = s 1 goto 246
if n:I/61[%rax] > s 1 goto 246
predecessors: 1
successors: 245 246
exn-successors:

245:
I/65[%rdi] := int  mut[k:V/62[%rbx]]
R:I/0[%rax] := n:I/61[%rax]
R:I/1[%rbx] := k:V/62[%rbx]
tailcall(opos tail default) I/65[%rdi] R:I/0[%rax] R:I/1[%rbx]
predecessors: 243
successors:
exn-successors:

246:
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + -20
R:I/0[%rax] := I/63[%rax]
R:I/1[%rbx] := k:V/62[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__cps_style1_32_80_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 243
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__cps_style1_32_80_code
layout.length=2
blocks.length=2

1:
goto 248
predecessors:
successors: 248
exn-successors:

248:
n:I/61[%rax] := R:I/0[%rax]
k:V/62[%rbx] := R:I/1[%rbx]
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + 2
R:I/0[%rax] := I/63[%rax]
R:I/1[%rbx] := k:V/62[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__cps_style2_33_81_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__cps_style2_33_81_code
layout.length=2
blocks.length=2

1:
goto 250
predecessors:
successors: 250
exn-successors:

250:
n:I/61[%rax] := R:I/0[%rax]
k:V/62[%rbx] := R:I/1[%rbx]
I/63[%rax] := n:I/61[%rax]
I/63[%rax] := I/63[%rax] + 10
R:I/0[%rax] := I/63[%rax]
R:I/1[%rbx] := k:V/62[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__cps_style0_31_79_code" R:I/0[%rax] R:I/1[%rbx]
predecessors: 1
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__call_cps_style_34_82_code
layout.length=3
blocks.length=3

1:
prologue
goto 252
predecessors:
successors: 252
exn-successors:

252:
k:V/61[%rax] := R:I/0[%rax]

{}
*set_of_closures*:V/62[%rbx] := alloc 32
[*set_of_closures*:V/62[%rbx] + -8] := 3319 (init)
I/63[%rdi] := "camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:130,4--51]_35_83_code"
val[*set_of_closures*:V/62[%rbx]] := I/63[%rdi] (init)
I/64[%rdi] := 108086391056891909
val[*set_of_closures*:V/62[%rbx] + 8] := I/64[%rdi] (init)
val[*set_of_closures*:V/62[%rbx] + 16] := k:V/61[%rax] (init)
I/65[%rax] := 7
R:I/0[%rax] := I/65[%rax]
R:I/1[%rbx] := *set_of_closures*:V/62[%rbx]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__cps_style0_31_79_code" R:I/0[%rax] R:I/1[%rbx]
goto 254
predecessors: 1
successors: 254
exn-successors:

254:
I/66[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/66[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 252
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__fn[dcfg_tailcalls.ml:130,4--51]_35_83_code
layout.length=5
blocks.length=5

1:
prologue
goto 259
predecessors:
successors: 259
exn-successors:

259:
x:I/61[%rax] := R:I/0[%rax]
my_closure:V/62[%rbx] := R:I/1[%rbx]
if x:I/61[%rax] < s 21 goto 262
if x:I/61[%rax] = s 21 goto 262
if x:I/61[%rax] > s 21 goto 261
predecessors: 1
successors: 261 262
exn-successors:

261:
V/64[%rbx] := val [my_closure:V/62[%rbx] + 16]
R:I/0[%rax] := x:I/61[%rax]
R:I/1[%rbx] := V/64[%rbx]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__cps_style0_31_79_code" R:I/0[%rax] R:I/1[%rbx]
goto 264
predecessors: 259
successors: 264
exn-successors:

264:
I/65[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/65[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 261
successors:
exn-successors:

262:
I/63[%rax] := 1
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 259
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__apply_in_tail_position_in_exclave_36_84_code
layout.length=4
blocks.length=4

1:
goto 266
predecessors:
successors: 266
exn-successors:

266:
n:I/61[%rax] := R:I/0[%rax]
if n:I/61[%rax] < s 1 goto 268
if n:I/61[%rax] = s 1 goto 269
if n:I/61[%rax] > s 1 goto 269
predecessors: 1 269
successors: 268 269
exn-successors:

268:
R:I/0[%rax] := n:I/61[%rax]
Return R:I/0[%rax]
predecessors: 266
successors:
exn-successors:

269:
I/62[%rax] := n:I/61[%rax]
I/62[%rax] := I/62[%rax] + -4
R:I/0[%rax] := I/62[%rax]
tailcall(opos not_tail default) "self(266)" R:I/0[%rax]
predecessors: 266
successors: 266
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__bind_37_85_code
layout.length=4
blocks.length=4

1:
goto 271
predecessors:
successors: 271
exn-successors:

271:
f:V/61[%rdi] := R:I/0[%rax]
param:V/62[%rbx] := R:I/1[%rbx]
if even param:V/62[%rbx] goto 274
else goto 273
predecessors: 1
successors: 273 274
exn-successors:

273:
I/66[%rax] := 1
R:I/0[%rax] := I/66[%rax]
Return R:I/0[%rax]
predecessors: 271
successors:
exn-successors:

274:
V/63[%rax] := val [param:V/62[%rbx]]
I/64[%rsi] := int  mut[f:V/61[%rdi]]
R:I/0[%rax] := V/63[%rax]
R:I/1[%rbx] := f:V/61[%rdi]
tailcall(opos tail default) I/64[%rsi] R:I/0[%rax] R:I/1[%rbx]
predecessors: 271
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__monadic_loop_38_86_code
layout.length=3
blocks.length=3

1:
prologue
goto 276
predecessors:
successors: 276
exn-successors:

276:
int_option:V/61[%rbx] := R:I/0[%rax]
I/62[%rax] := "camlDcfg_tailcalls__next1411"
R:I/0[%rax] := I/62[%rax]
R:I/1[%rbx] := int_option:V/61[%rbx]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__bind_37_85_code" R:I/0[%rax] R:I/1[%rbx]
goto 278
predecessors: 1
successors: 278
exn-successors:

278:
V/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := V/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 276
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__next_39_87_code
layout.length=4
blocks.length=4

1:
prologue
goto 280
predecessors:
successors: 280
exn-successors:

280:
x:I/61[%rax] := R:I/0[%rax]
if x:I/61[%rax] < s 1 goto 282
if x:I/61[%rax] = s 1 goto 283
if x:I/61[%rax] > s 1 goto 283
predecessors: 1
successors: 282 283
exn-successors:

282:
I/65[%rax] := 1
R:I/0[%rax] := I/65[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 280
successors:
exn-successors:

283:

{}
V/62[%rbx] := alloc 16
[V/62[%rbx] + -8] := 1024 (init)
I/63[%rax] := x:I/61[%rax]
I/63[%rax] := I/63[%rax] + -4
val[V/62[%rbx]] := I/63[%rax] (init)
R:I/0[%rax] := V/62[%rbx]
tailcall(opos tail default) "camlDcfg_tailcalls__monadic_loop_38_86_code" R:I/0[%rax]
predecessors: 280
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__f_40_88_code
layout.length=5
blocks.length=5

1:
prologue
goto 288
predecessors:
successors: 288
exn-successors:

288:
str:V/61[%rax] := R:I/0[%rax]
I/62[%rbx] := 72057594037927935
I/63[%rdi] := int  mut[str:V/61[%rax] + -8]
I/64[%rdi] := I/63[%rdi]
I/64[%rdi] := I/64[%rdi] & I/62[%rbx]
I/65[%rdi] := I/64[%rdi]
I/65[%rdi] := I/65[%rdi] >>u 10
tmp:I/66[%rbx] := I/65[%rdi]  * 8 + -1
I/67[%rdi] := unsigned int8  mut[str:V/61[%rax] + tmp:I/66[%rbx]]
I/68[%rbx] := tmp:I/66[%rbx]
I/68[%rbx] := I/68[%rbx] - I/67[%rdi]
I/69[%rcx] := I/68[%rbx]  * 2 + 1
I/70[%rdx] := 1
I/71[%rbx] := "camlStdlib__print_endline_137"
V/72[%rdi] := val [I/71[%rbx] + 16]
R:I/2[%rdi] := V/72[%rdi]
R:I/3[%rsi] := str:V/61[%rax]
R:I/4[%rdx] := I/70[%rdx]
R:I/5[%rcx] := I/69[%rcx]
R:I/0[%rax] := extcall "caml_ml_output" R:I/2[%rdi] R:I/3[%rsi] R:I/4[%rdx] R:I/5[%rcx]
goto 290
predecessors: 1
successors: 290
exn-successors:

290:
I/74[%rsi] := 21
I/75[%rax] := "camlStdlib__print_endline_137"
V/76[%rdi] := val [I/75[%rax] + 16]
R:I/2[%rdi] := V/76[%rdi]
R:I/3[%rsi] := I/74[%rsi]
R:I/0[%rax] := extcall "caml_ml_output_char" R:I/2[%rdi] R:I/3[%rsi]
goto 291
predecessors: 288
successors: 291
exn-successors:

291:
I/78[%rax] := "camlStdlib__print_endline_137"
V/79[%rdi] := val [I/78[%rax] + 16]
R:I/2[%rdi] := V/79[%rdi]
R:I/0[%rax] := extcall "caml_ml_flush" R:I/2[%rdi]
goto 292
predecessors: 290
successors: 292
exn-successors:

292:
V/80[%rax] := R:I/0[%rax]
R:I/0[%rax] := V/80[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 291
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__baz_41_89_code
layout.length=4
blocks.length=4

1:
prologue
goto 296
predecessors:
successors: 296
exn-successors:

296:
I/62[%rax] := "camlDcfg_tailcalls__immstring407"
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos not_tail default) "camlDcfg_tailcalls__f_40_88_code" R:I/0[%rax]
goto 298
predecessors: 1
successors: 298
exn-successors:

298:
I/64[%rax] := "camlDcfg_tailcalls__immstring409"
R:I/0[%rax] := I/64[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__f_40_88_code" R:I/0[%rax]
goto 299
predecessors: 296
successors: 299
exn-successors:

299:
I/65[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/65[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 298
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__inlined_42_90_code
layout.length=3
blocks.length=3

1:
prologue
goto 302
predecessors:
successors: 302
exn-successors:

302:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__baz_41_89_code" R:I/0[%rax]
goto 304
predecessors: 1
successors: 304
exn-successors:

304:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 302
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__calls_inlined_43_91_code
layout.length=4
blocks.length=4

1:
prologue
goto 306
predecessors:
successors: 306
exn-successors:

306:
I/62[%rax] := 1
R:I/0[%rax] := I/62[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__baz_41_89_code" R:I/0[%rax]
goto 308
predecessors: 1
successors: 308
exn-successors:

308:
I/64[%rax] := "camlDcfg_tailcalls__immstring409"
R:I/0[%rax] := I/64[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__f_40_88_code" R:I/0[%rax]
goto 309
predecessors: 306
successors: 309
exn-successors:

309:
I/65[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/65[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 308
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__try_with_44_92_code
layout.length=4
blocks.length=4

1:
prologue
goto 312
predecessors:
successors: 312
exn-successors:

312:
try_region:I/62[%rax] := beginregion
spilled-try_region:I/68[s[i:0]] := try_region:I/62[%rax] (spill)
push trap L315
I/63[%rax] := 1
R:I/0[%rax] := I/63[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__baz_41_89_code" R:I/0[%rax]
goto 320
predecessors: 1
successors: 320
exn-successors: 315

320:
body_result:I/64[%rax] := R:I/0[%rax]
R:I/0[%rax] := body_result:I/64[%rax]
pop trap
reload retaddr
Return R:I/0[%rax]
predecessors: 312
successors:
exn-successors:

315:
try_region:I/69[%rax] := spilled-try_region:I/68[s[i:0]] (reload)
endregion try_region:I/69[%rax]
I/67[%rax] := 1
R:I/0[%rax] := I/67[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 312
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__foo_optional_arg_inner_46_93_code
layout.length=3
blocks.length=3

1:
prologue
goto 324
predecessors:
successors: 324
exn-successors:

324:
str:V/61[%rax] := R:I/0[%rax]
R:I/0[%rax] := str:V/61[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__f_40_88_code" R:I/0[%rax]
goto 326
predecessors: 1
successors: 326
exn-successors:

326:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 324
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__foo_optional_arg_45_46_code
layout.length=5
blocks.length=5

1:
goto 328
predecessors:
successors: 328
exn-successors:

328:
*opt*str:V/61[%rax] := R:I/0[%rax]
param:I/62[%rbx] := R:I/1[%rbx]
my_closure:V/63[%rdi] := R:I/2[%rdi]
if even *opt*str:V/61[%rax] goto 334
else goto 333
predecessors: 1
successors: 333 334
exn-successors:

333:
I/67[%rax] := "camlDcfg_tailcalls__immstring407"
I/68[%rax] := I/67[%rax]
str:V/64[%rax] := I/68[%rax]
goto 330
predecessors: 328
successors: 330
exn-successors:

334:
V/65[%rax] := val [*opt*str:V/61[%rax]]
V/66[%rax] := V/65[%rax]
str:V/64[%rax] := V/66[%rax]
goto 330
predecessors: 328
successors: 330
exn-successors:

330:
*closure*:V/69[%rdi] := val [my_closure:V/63[%rdi] + 24]
I/70[%rsi] := int  mut[*closure*:V/69[%rdi] + 16]
R:I/0[%rax] := str:V/64[%rax]
R:I/1[%rbx] := param:I/62[%rbx]
R:I/2[%rdi] := *closure*:V/69[%rdi]
tailcall(opos unknown) I/70[%rsi] R:I/0[%rax] R:I/1[%rbx] R:I/2[%rdi]
predecessors: 333 334
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__foo_optional_arg_inline_never_inner_48_94_code
layout.length=3
blocks.length=3

1:
prologue
goto 336
predecessors:
successors: 336
exn-successors:

336:
str:V/61[%rax] := R:I/0[%rax]
R:I/0[%rax] := str:V/61[%rax]
R:I/0[%rax] := call(opos tail default) "camlDcfg_tailcalls__f_40_88_code" R:I/0[%rax]
goto 338
predecessors: 1
successors: 338
exn-successors:

338:
I/63[%rax] := R:I/0[%rax]
R:I/0[%rax] := I/63[%rax]
reload retaddr
Return R:I/0[%rax]
predecessors: 336
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__foo_optional_arg_inline_never_47_48_code
layout.length=5
blocks.length=5

1:
goto 340
predecessors:
successors: 340
exn-successors:

340:
*opt*str:V/61[%rax] := R:I/0[%rax]
param:I/62[%rbx] := R:I/1[%rbx]
my_closure:V/63[%rdi] := R:I/2[%rdi]
if even *opt*str:V/61[%rax] goto 346
else goto 345
predecessors: 1
successors: 345 346
exn-successors:

345:
I/67[%rax] := "camlDcfg_tailcalls__immstring409"
I/68[%rax] := I/67[%rax]
str:V/64[%rax] := I/68[%rax]
goto 342
predecessors: 340
successors: 342
exn-successors:

346:
V/65[%rax] := val [*opt*str:V/61[%rax]]
V/66[%rax] := V/65[%rax]
str:V/64[%rax] := V/66[%rax]
goto 342
predecessors: 340
successors: 342
exn-successors:

342:
*closure*:V/69[%rdi] := val [my_closure:V/63[%rdi] + 24]
I/70[%rsi] := int  mut[*closure*:V/69[%rdi] + 16]
R:I/0[%rax] := str:V/64[%rax]
R:I/1[%rbx] := param:I/62[%rbx]
R:I/2[%rdi] := *closure*:V/69[%rdi]
tailcall(opos unknown) I/70[%rsi] R:I/0[%rax] R:I/1[%rbx] R:I/2[%rdi]
predecessors: 345 346
successors:
exn-successors:

*** After cfgize

cfg for 
camlDcfg_tailcalls__entry
layout.length=2
blocks.length=2

1:
goto 350
predecessors:
successors: 350
exn-successors:

350:
I/64[%rax] := 1
R:I/0[%rax] := I/64[%rax]
Return R:I/0[%rax]
predecessors: 1
successors:
exn-successors:

