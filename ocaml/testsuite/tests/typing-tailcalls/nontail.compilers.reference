[
  structure_item (nontail.ml[6,85+0]..nontail.ml[6,85+45])
    Tstr_value Nonrec
    [
      <def>
          attribute "inline"
            [
              structure_item (nontail.ml[6,85+13]..[6,85+18])
                Pstr_eval
                expression (nontail.ml[6,85+13]..[6,85+18])
                  Pexp_ident "never" (nontail.ml[6,85+13]..[6,85+18])
            ]
        pattern (nontail.ml[6,85+20]..nontail.ml[6,85+21])
          Tpat_var "f"
          value_mode global,many,shared
        expression (nontail.ml[6,85+22]..nontail.ml[6,85+45]) ghost
          Texp_function
          region true
          alloc_mode global,many,shared
          [
            Nolabel
            Param_pat
              pattern (nontail.ml[6,85+22]..nontail.ml[6,85+25])
                Tpat_var "str"
                value_mode global,many,shared
          ]
          Tfunction_body
            expression (nontail.ml[6,85+28]..nontail.ml[6,85+45])
              Texp_apply
              apply_mode Nontail
              original_position Tail_position (Default_tail)
              locality_mode global
              expression (nontail.ml[6,85+28]..nontail.ml[6,85+41])
                Texp_ident "Stdlib!.print_endline"
              [
                <arg>
                  Nolabel
                  expression (nontail.ml[6,85+42]..nontail.ml[6,85+45])
                    Texp_ident "str"
              ]
    ]
  structure_item (nontail.ml[8,132+0]..nontail.ml[10,162+3])
    Tstr_module
    M
      module_expr (nontail.ml[8,132+11]..nontail.ml[10,162+3])
        Tmod_structure
        [
          structure_item (nontail.ml[9,150+2]..nontail.ml[9,150+11])
            Tstr_value Nonrec
            [
              <def>
                pattern (nontail.ml[9,150+6]..nontail.ml[9,150+7])
                  Tpat_var "f"
                  value_mode global,many,shared
                expression (nontail.ml[9,150+10]..nontail.ml[9,150+11])
                  Texp_ident "f"
            ]
        ]
  structure_item (nontail.ml[14,289+0]..nontail.ml[16,315+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (nontail.ml[14,289+4]..nontail.ml[14,289+7])
          Tpat_var "foo"
          value_mode global,many,shared
        expression (nontail.ml[14,289+8]..nontail.ml[16,315+13]) ghost
          Texp_function
          region true
          alloc_mode global,many,shared
          [
            Nolabel
            Param_pat
              pattern (nontail.ml[14,289+8]..nontail.ml[14,289+10])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (nontail.ml[15,302+2]..nontail.ml[16,315+13])
              Texp_sequence
              expression (nontail.ml[15,302+2]..nontail.ml[15,302+11])
                Texp_apply
                apply_mode Default
                original_position Not_tail_position (Default_tail)
                locality_mode global
                expression (nontail.ml[15,302+2]..nontail.ml[15,302+3])
                  Texp_ident "f"
                [
                  <arg>
                    Nolabel
                    expression (nontail.ml[15,302+4]..nontail.ml[15,302+11])
                      Texp_constant Const_string("hello",(nontail.ml[15,302+5]..nontail.ml[15,302+10]),None)
                ]
              value
              expression (nontail.ml[16,315+2]..nontail.ml[16,315+13])
                Texp_apply
                apply_mode Nontail
                original_position Tail_position (Default_tail)
                locality_mode global
                expression (nontail.ml[16,315+2]..nontail.ml[16,315+3])
                  Texp_ident "f"
                [
                  <arg>
                    Nolabel
                    expression (nontail.ml[16,315+4]..nontail.ml[16,315+13])
                      Texp_constant Const_string("goodbye",(nontail.ml[16,315+5]..nontail.ml[16,315+12]),None)
                ]
    ]
  structure_item (nontail.ml[18,330+0]..nontail.ml[20,356+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (nontail.ml[18,330+4]..nontail.ml[18,330+7])
          Tpat_var "bar"
          value_mode global,many,shared
        expression (nontail.ml[18,330+8]..nontail.ml[20,356+15]) ghost
          Texp_function
          region true
          alloc_mode global,many,shared
          [
            Nolabel
            Param_pat
              pattern (nontail.ml[18,330+8]..nontail.ml[18,330+10])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (nontail.ml[19,343+2]..nontail.ml[20,356+15])
              Texp_sequence
              expression (nontail.ml[19,343+2]..nontail.ml[19,343+11])
                Texp_apply
                apply_mode Default
                original_position Not_tail_position (Default_tail)
                locality_mode global
                expression (nontail.ml[19,343+2]..nontail.ml[19,343+3])
                  Texp_ident "f"
                [
                  <arg>
                    Nolabel
                    expression (nontail.ml[19,343+4]..nontail.ml[19,343+11])
                      Texp_constant Const_string("hello",(nontail.ml[19,343+5]..nontail.ml[19,343+10]),None)
                ]
              value
              expression (nontail.ml[20,356+2]..nontail.ml[20,356+15])
                Texp_apply
                apply_mode Nontail
                original_position Tail_position (Default_tail)
                locality_mode global
                expression (nontail.ml[20,356+2]..nontail.ml[20,356+5])
                  Texp_ident "M.f"
                [
                  <arg>
                    Nolabel
                    expression (nontail.ml[20,356+6]..nontail.ml[20,356+15])
                      Texp_constant Const_string("goodbye",(nontail.ml[20,356+7]..nontail.ml[20,356+14]),None)
                ]
    ]
]

(let
  (f =
     (function {nlocal = 0} str never_inline : int
       (applynontail (field_imm 45 (global Stdlib!))
         str Tail_position (Default_tail)))
   M = (makeblock 0 f)
   foo =
     (function {nlocal = 0} param[int] : int
       (seq (apply f "hello" Not_tail_position (Default_tail))
         (applynontail f "goodbye" Tail_position (Default_tail))))
   bar =
     (function {nlocal = 0} param[int] : int
       (seq (apply f "hello" Not_tail_position (Default_tail))
         (applynontail (field_imm 0 M)
           "goodbye" Tail_position (Default_tail)))))
  (makeblock 0 f M foo bar))
