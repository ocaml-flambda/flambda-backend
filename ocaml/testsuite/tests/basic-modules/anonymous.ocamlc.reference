(setglobal Anonymous!
  (seq
    (ignore
      (let (x =[(consts ()) (non_consts ([0: [int], [int]]))] [0: 13 37])
        (makeblock 0 x)))
    (let
      (A =
         (apply (field_imm 0 (global CamlinternalMod!))
           [0: "anonymous.ml" 25 6] [0: [0]] Unknown_position)
       B =
         (apply (field_imm 0 (global CamlinternalMod!))
           [0: "anonymous.ml" 35 6] [0: [0]] Unknown_position))
      (seq
        (ignore
          (let (x =[(consts ()) (non_consts ([0: [int], [int]]))] [0: 4 2])
            (makeblock 0 x)))
        (apply (field_imm 1 (global CamlinternalMod!)) [0: [0]] A
          A Unknown_position)
        (apply (field_imm 1 (global CamlinternalMod!)) [0: [0]] B
          (let (x =[(consts ()) (non_consts ([0: *, *]))] [0: "foo" "bar"])
            (makeblock 0)) Unknown_position)
        (let
          (f = (function {nlocal = 0} param : int 0) s = (makemutable 0 ""))
          (seq
            (ignore
              (let (*match* =[int] (setfield_ptr 0 s "Hello World!"))
                (makeblock 0)))
            (let
              (drop = (function {nlocal = 0} param : int 0)
               *match* =[int]
                 (apply drop
                   (field_mut 0 s) Not_tail_position (Default_tail)))
              (makeblock 0 A B f s drop))))))))
