;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(copy_files# caml/*.h)

(rule
  (targets sak)
  (deps ../Makefile ../.depend ../Makefile.menhir ../Makefile.best_binaries
    ../stdlib/StdlibModules ../.depend.menhir ../config.status
    ../Makefile.common ../Makefile.config_if_required
    ../Makefile.build_config ../Makefile.config sak.c
   (glob_files caml/*.h)
  )
  (action
    (progn
     (bash "rm -f sak")
     (bash "cd .. && make V=1 'SAK_LINK=cc -o $(1) $(2)' COMPUTE_DEPS=false runtime/sak")
    )
  ))

(rule
  (targets build_config.h)
  (mode fallback)
  (deps sak ../Makefile)
  (action
    (progn
     (bash "rm -f build_config.h")
     (bash "cd .. && make V=1 runtime/build_config.h")
    )
  ))

(rule
 (targets primitives prims.c)
 (mode    fallback)
 (deps
   ; matches the line structure of files in gen_primitives.sh
   alloc.c array.c compare.c extern.c floats.c gc_ctrl.c hash.c intern.c
     interp.c ints.c io.c
   lexing.c md5.c meta.c memprof.c obj.c parsing.c signals.c str.c sys.c
     callback.c weak.c
   finalise.c domain.c platform.c fiber.c memory.c startup_aux.c
     runtime_events.c sync.c
   dynlink.c backtrace_byt.c backtrace.c afl.c bigarray.c prng.c float32.c
   blake2.c
   build_config.h sync_posix.h caml/jumptbl.h)
 (action
   (progn
     (run %{dep:gen_primitives.sh} primitives %{deps})
     (with-stdout-to prims.c (run %{dep:gen_primsc.sh} primitives %{deps})))))

(rule
 (targets libasmrun.a libasmrund.a libasmruni.a libasmrun_pic.a
    libasmrun_shared.so libcamlrun.a libcamlrund.a libcamlruni.a libcamlrun_pic.a
    libcamlrun_shared.so ocamlrun ocamlrund ocamlruni ld.conf)
 (mode    fallback)
 (deps
   ../Makefile.config
   ../Makefile.build_config
   ../Makefile.config_if_required
   ../Makefile.common ../Makefile
   ../Makefile.menhir
   ../.depend
   ../.depend.menhir
   ../config.status
   ../stdlib/StdlibModules
   (glob_files caml/*.h)
   (glob_files *.h)
   caml/domain_state.tbl
   primitives
   prims.c
   sak
   (glob_files *.S)
   (glob_files *.c)
 )
 (action
 (no-infer
   (progn
     (bash "touch .depend") ; hack.
     (bash "rm -f sak build_config.h") ; hack
     (bash "cd .. && make V=1 -j8 runtime/libasmrun.a runtime/libasmrund.a runtime/libasmruni.a runtime/libasmrun_pic.a \
    runtime/libasmrun_shared.so runtime/libcamlrun.a runtime/libcamlrund.a runtime/libcamlruni.a runtime/libcamlrun_pic.a \
    runtime/libcamlrun_shared.so runtime/ocamlrun runtime/ocamlrund runtime/ocamlruni runtime/ld.conf COMPUTE_DEPS=false")
     (bash "rm .depend")))))

(install
  (files
    ocamlrun
    ocamlrund
    ocamlruni
  )
  (section bin)
  (package ocaml_runtime_stdlib))

(install
  (files
    ld.conf

    libcamlrun.a
    libcamlrund.a
    libcamlruni.a
    libcamlrun_pic.a
    libcamlrun_shared.so
  )
  (section lib)
  (package ocaml_runtime_stdlib))

(install
  (files
    libasmrun.a
    libasmrund.a
    libasmruni.a
    libasmrun_pic.a
    libasmrun_shared.so
  )
  (section lib)
  (package ocaml_runtime_stdlib))
