;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                    Mark Shinwell, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2020 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(library
  (name threads)
  (modes byte native)
  (wrapped false)
  (modules
    condition
    event
    mutex
    semaphore
    thread)
  (flags -w +33..39 -warn-error A -g -bin-annot -safe-string)
  (ocamlopt_flags (:include %{project_root}/ocamlopt_flags.sexp))
  (libraries unix)
  (library_flags -linkall)
  (c_library_flags -lpthread)
  (foreign_stubs
    (language c)
    (names st_stubs_byte)
    (mode byte)
    (flags ((:include %{project_root}/oc_cflags.sexp)
            (:include %{project_root}/sharedlib_cflags.sexp)
            (:include %{project_root}/oc_cppflags.sexp))))
  (foreign_stubs
    (language c)
    (names st_stubs_native)
    (mode native)
    (flags ((-DNATIVE_CODE)
            (:include %{project_root}/oc_cflags.sexp)
            (:include %{project_root}/sharedlib_cflags.sexp)
            (:include %{project_root}/oc_cppflags.sexp)))))

(rule
  (targets st_stubs_byte.c)
  (action (copy st_stubs.c %{targets})))

(rule
  (targets st_stubs_native.c)
  (action (copy st_stubs.c %{targets})))

; For some reason the C header files aren't being found if this library
; is given a public name, so we do the installation manually.
(install
  (files
    (threads.cma as threads/threads.cma)
    (threads.cmxa as threads/threads.cmxa)
    (threads.a as threads/threads.a)

    libthreads_stubs.a
    libthreads_stubs_native.a
    (dllthreads_stubs.so as stublibs/dllthreads_stubs.so)

    (thread.mli as threads/thread.mli)
    (condition.mli as threads/condition.mli)
    (event.mli as threads/event.mli)
    (mutex.mli as threads/mutex.mli)
    (semaphore.mli as threads/semaphore.mli)

    (threads.h as caml/threads.h)

    (.threads.objs/native/condition.cmx as threads/condition.cmx)
    (.threads.objs/native/event.cmx as threads/event.cmx)
    (.threads.objs/native/mutex.cmx as threads/mutex.cmx)
    (.threads.objs/native/semaphore.cmx as threads/semaphore.cmx)
    (.threads.objs/native/thread.cmx as threads/thread.cmx)

    (.threads.objs/byte/condition.cmi as threads/condition.cmi)
    (.threads.objs/byte/condition.cmti as threads/condition.cmti)
    (.threads.objs/byte/event.cmi as threads/event.cmi)
    (.threads.objs/byte/event.cmti as threads/event.cmti)
    (.threads.objs/byte/mutex.cmi as threads/mutex.cmi)
    (.threads.objs/byte/mutex.cmti as threads/mutex.cmti)
    (.threads.objs/byte/semaphore.cmi as threads/semaphore.cmi)
    (.threads.objs/byte/semaphore.cmti as threads/semaphore.cmti)
    (.threads.objs/byte/thread.cmi as threads/thread.cmi)
    (.threads.objs/byte/thread.cmti as threads/thread.cmti)
  )
  (section lib)
  (package ocaml))

