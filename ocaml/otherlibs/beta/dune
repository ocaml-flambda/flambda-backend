;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                Diana Kalinichenko, Jane Street, New York               *
;*                                                                        *
;*   Copyright 2024 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

;; [beta] was renamed to [stdlib_beta]. This library clones [stdlib_beta]
;; until we move all existing uses of [beta] to [stdlib_beta].

(library
 (name beta)
 (wrapped false)
 (modes byte native)
 (flags
  (-strict-sequence
   -principal
   -absname
   -w
   +a-4-9-40-41-42-44-45-48-66
   -warn-error
   A
   -bin-annot
   -safe-string
   -strict-formats
   -extension-universe
   beta))
 (ocamlopt_flags
  (:include %{project_root}/ocamlopt_flags.sexp))
 (library_flags
  (:standard -linkall)))

;; We clone files from [stdlib_beta] instead of re-exporting the library
;; to avoid adding a new transitive dependency to builds.

(rule
 (deps
  (glob_files ../stdlib_beta/*.{ml,mli}))
 (targets float32.ml float32.mli float32_u.ml float32_u.mli beta.ml beta.mli)
 (action
  (bash
   "cp ../stdlib_beta/*.{ml,mli} .; mv stdlib_beta.ml beta.ml; mv stdlib_beta.mli beta.mli")))

(install
 (files
  (beta.cmxa as beta/beta.cmxa)
  (beta.a as beta/beta.a)
  (beta.cmxs as beta/beta.cmxs)
  (beta.cma as beta/beta.cma)
  (beta.mli as beta/beta.mli)
  (float32.mli as beta/float32.mli)
  (float32_u.mli as beta/float32_u.mli)
  (.beta.objs/byte/beta.cmi as beta/beta.cmi)
  (.beta.objs/byte/beta.cmt as beta/beta.cmt)
  (.beta.objs/byte/beta.cmti as beta/beta.cmti)
  (.beta.objs/native/beta.cmx as beta/beta.cmx)
  (.beta.objs/byte/float32.cmi as beta/float32.cmi)
  (.beta.objs/byte/float32.cmt as beta/float32.cmt)
  (.beta.objs/byte/float32.cmti as beta/float32.cmti)
  (.beta.objs/native/float32.cmx as beta/float32.cmx)
  (.beta.objs/byte/float32_u.cmi as beta/float32_u.cmi)
  (.beta.objs/byte/float32_u.cmt as beta/float32_u.cmt)
  (.beta.objs/byte/float32_u.cmti as beta/float32_u.cmti)
  (.beta.objs/native/float32_u.cmx as beta/float32_u.cmx))
 (section lib)
 (package ocaml))
