;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(executable
  (name ocamlobjinfo_byte)
  (modes byte)
  (modules ocamlobjinfo_byte)
  ; See note in the toplevel dune file about this.
  (flags (:standard -cclib "-L ocaml/runtime" -cclib -lcamlrun))
  ; For the moment, here and below, we use ocamloptcomp instead of
  ; ocamlmiddleend, since we're always building the native compiler.
  ; Fixing this will require having some way of modules being present in
  ; more than one library.
  (libraries ocamlcommon ocamlbytecomp ocamloptcomp))

(rule
  (targets ocamlobjinfo_byte.ml)
  (action (copy objinfo.ml %{targets})))

(executable
  (name ocamlobjinfo_native)
  (modes native)
  (modules ocamlobjinfo_native)
  (libraries ocamlcommon ocamlbytecomp ocamloptcomp))

(rule
  (targets ocamlobjinfo_native.ml)
  (action (copy objinfo.ml %{targets})))

(install
  (files
    (ocamlobjinfo_byte.bc as ocamlobjinfo.byte)
    (ocamlobjinfo_native.exe as ocamlobjinfo.opt)
  )
  (section bin)
  (package ocaml))

(executable
  (name merge_archives)
  (modes native)
  (modules merge_archives)
  (libraries ocamlcommon ocamlbytecomp ocamloptcomp))
