let $camlTests7__empty_block3 = Block 0 () in
let $camlTests7__immstring6 = "Cow" in
let $camlTests7__immstring9 = "Sheep" in
let code f_0 deleted in
let code foo_1 deleted in
let code loopify(never) size(16) newer_version_of(f_0)
      f_0_1 (x : imm tagged, str)
        my_closure my_region my_depth
        -> k * k1
        : imm tagged =
  let prim = %string_length str in
  let Pstringlength = %Tag_imm prim in
  let Paddint = x + 3 in
  let Paddint_1 = Paddint + 5 in
  let Paddint_2 = Paddint_1 + Pstringlength in
  let Paddint_3 = Paddint_2 + Pstringlength in
  cont k (Paddint_3)
in
let $camlTests7__f_2 = closure f_0_1 @f in
let code loopify(never) size(13) newer_version_of(foo_1)
      foo_1_1 (af : float ^ 2, y : float boxed)
        my_closure my_region my_depth
        -> k * k1
        : float boxed =
  let prim = %block_load float (af, 1) in
  let prim_1 = %block_load float (af, 0) in
  let prim_2 = prim_1 *. prim in
  let prim_3 = %unbox_float y in
  let prim_4 = prim_2 +. prim_3 in
  let Paddfloat = %Box_float prim_4 in
  cont k (Paddfloat)
in
let $camlTests7__foo_3 = closure foo_1_1 @foo in
let $camlTests7 =
  Block 0 ($camlTests7__empty_block3,
           $camlTests7__immstring6,
           $camlTests7__immstring9,
           $camlTests7__f_2,
           $camlTests7__foo_3)
in
cont done ($camlTests7)
