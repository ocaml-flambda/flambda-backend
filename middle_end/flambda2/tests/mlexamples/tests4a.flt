let $camlTests4a__first_const19 = Block 0 () in
let code size(21)
      pr2162_3_as_int64_0 (z : imm tagged, x : imm tagged)
        my_closure my_region my_ghost_region my_depth
        -> k * k1
        : imm tagged =
  (let untagged = %untag_imm z in
   switch untagged
     | 0 -> k2 (x)
     | 1 -> k3)
    where k3 =
      let Pmulint = x * 2 in
      cont k2 (Pmulint)
    where k2 (y : imm tagged) =
      let prim = %phys_eq (y, x) in
      let Pintcomp = %Tag_imm prim in
      cont k (Pintcomp)
in
(let pr2162_3_as_int64 = closure pr2162_3_as_int64_0 @pr2162_3_as_int64 in
 let Pmakeblock = %Block 0 (pr2162_3_as_int64) in
 cont k (Pmakeblock))
  where k define_root_symbol (module_block) =
    let field_0 = %block_load tag(0) size(1) (0) module_block in
    let $camlTests4a = Block 0 (field_0) in
    cont done ($camlTests4a)
===>
let code pr2162_3_as_int64_0 deleted in
let code loopify(never) size(21) newer_version_of(pr2162_3_as_int64_0)
      pr2162_3_as_int64_0_1 (z : imm tagged, x : imm tagged)
        my_closure my_region my_ghost_region my_depth
        -> k * k1
        : imm tagged =
  (let untagged = %untag_imm z in
   switch untagged
     | 0 -> k2 (x)
     | 1 -> k3)
    where k3 =
      let Pmulint = x * 2 in
      cont k2 (Pmulint)
    where k2 (y : imm tagged) =
      let prim = %phys_eq (y, x) in
      let Pintcomp = %Tag_imm prim in
      cont k (Pintcomp)
in
let $camlTests4a__pr2162_3_as_int64_1 =
  closure pr2162_3_as_int64_0_1 @pr2162_3_as_int64
in
let $camlTests4a = Block 0 ($camlTests4a__pr2162_3_as_int64_1) in
cont done ($camlTests4a)
